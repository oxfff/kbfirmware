   1               		.file	"midi.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.midi_is_statusbyte,"ax",@progbits
  11               	.global	midi_is_statusbyte
  13               	midi_is_statusbyte:
  14               	.LFB0:
  15               		.file 1 "../../tmk_core/protocol/midi/midi.c"
   1:../../tmk_core/protocol/midi/midi.c **** //midi for embedded chips,
   2:../../tmk_core/protocol/midi/midi.c **** //Copyright 2010 Alex Norman
   3:../../tmk_core/protocol/midi/midi.c **** //
   4:../../tmk_core/protocol/midi/midi.c **** //This file is part of avr-midi.
   5:../../tmk_core/protocol/midi/midi.c **** //
   6:../../tmk_core/protocol/midi/midi.c **** //avr-midi is free software: you can redistribute it and/or modify
   7:../../tmk_core/protocol/midi/midi.c **** //it under the terms of the GNU General Public License as published by
   8:../../tmk_core/protocol/midi/midi.c **** //the Free Software Foundation, either version 3 of the License, or
   9:../../tmk_core/protocol/midi/midi.c **** //(at your option) any later version.
  10:../../tmk_core/protocol/midi/midi.c **** //
  11:../../tmk_core/protocol/midi/midi.c **** //avr-midi is distributed in the hope that it will be useful,
  12:../../tmk_core/protocol/midi/midi.c **** //but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../tmk_core/protocol/midi/midi.c **** //MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../tmk_core/protocol/midi/midi.c **** //GNU General Public License for more details.
  15:../../tmk_core/protocol/midi/midi.c **** //
  16:../../tmk_core/protocol/midi/midi.c **** //You should have received a copy of the GNU General Public License
  17:../../tmk_core/protocol/midi/midi.c **** //along with avr-midi.  If not, see <http://www.gnu.org/licenses/>.
  18:../../tmk_core/protocol/midi/midi.c **** 
  19:../../tmk_core/protocol/midi/midi.c **** #include "midi.h"
  20:../../tmk_core/protocol/midi/midi.c **** #include <string.h> //for memcpy
  21:../../tmk_core/protocol/midi/midi.c **** 
  22:../../tmk_core/protocol/midi/midi.c **** #define MIN(x,y) (((x) < (y)) ? (x) : (y)) 
  23:../../tmk_core/protocol/midi/midi.c **** 
  24:../../tmk_core/protocol/midi/midi.c **** #ifndef NULL
  25:../../tmk_core/protocol/midi/midi.c **** #define NULL 0
  26:../../tmk_core/protocol/midi/midi.c **** #endif
  27:../../tmk_core/protocol/midi/midi.c **** 
  28:../../tmk_core/protocol/midi/midi.c **** bool midi_is_statusbyte(uint8_t theByte){
  16               		.loc 1 28 0
  17               		.cfi_startproc
  18               	.LVL0:
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  29:../../tmk_core/protocol/midi/midi.c ****    return (bool)(theByte & MIDI_STATUSMASK);
  30:../../tmk_core/protocol/midi/midi.c **** }
  23               		.loc 1 30 0
  24 0000 881F      		rol r24
  25 0002 8827      		clr r24
  26 0004 881F      		rol r24
  27               	.LVL1:
  28 0006 0895      		ret
  29               		.cfi_endproc
  30               	.LFE0:
  32               		.section	.text.midi_is_realtime,"ax",@progbits
  33               	.global	midi_is_realtime
  35               	midi_is_realtime:
  36               	.LFB1:
  31:../../tmk_core/protocol/midi/midi.c **** 
  32:../../tmk_core/protocol/midi/midi.c **** bool midi_is_realtime(uint8_t theByte){
  37               		.loc 1 32 0
  38               		.cfi_startproc
  39               	.LVL2:
  40               	/* prologue: function */
  41               	/* frame size = 0 */
  42               	/* stack size = 0 */
  43               	.L__stack_usage = 0
  33:../../tmk_core/protocol/midi/midi.c ****    return (theByte >= MIDI_CLOCK);
  44               		.loc 1 33 0
  45 0000 91E0      		ldi r25,lo8(1)
  46 0002 883F      		cpi r24,lo8(-8)
  47 0004 00F4      		brsh .L3
  48 0006 90E0      		ldi r25,0
  49               	.L3:
  34:../../tmk_core/protocol/midi/midi.c **** }
  50               		.loc 1 34 0
  51 0008 892F      		mov r24,r25
  52               	.LVL3:
  53 000a 0895      		ret
  54               		.cfi_endproc
  55               	.LFE1:
  57               		.section	.text.midi_packet_length,"ax",@progbits
  58               	.global	midi_packet_length
  60               	midi_packet_length:
  61               	.LFB2:
  35:../../tmk_core/protocol/midi/midi.c **** 
  36:../../tmk_core/protocol/midi/midi.c **** midi_packet_length_t midi_packet_length(uint8_t status){
  62               		.loc 1 36 0
  63               		.cfi_startproc
  64               	.LVL4:
  65               	/* prologue: function */
  66               	/* frame size = 0 */
  67               	/* stack size = 0 */
  68               	.L__stack_usage = 0
  37:../../tmk_core/protocol/midi/midi.c ****    switch(status & 0xF0){
  69               		.loc 1 37 0
  70 0000 982F      		mov r25,r24
  71 0002 907F      		andi r25,lo8(-16)
  72 0004 903B      		cpi r25,lo8(-80)
  73 0006 01F0      		breq .L12
  74 0008 00F4      		brsh .L8
  75 000a 9039      		cpi r25,lo8(-112)
  76 000c 01F0      		breq .L12
  77 000e 903A      		cpi r25,lo8(-96)
  78 0010 01F0      		breq .L12
  79 0012 9038      		cpi r25,lo8(-128)
  80 0014 01F4      		brne .L13
  81 0016 00C0      		rjmp .L12
  82               	.L8:
  83 0018 903D      		cpi r25,lo8(-48)
  84 001a 01F0      		breq .L9
  85 001c 00F4      		brsh .L10
  86 001e 903C      		cpi r25,lo8(-64)
  87 0020 01F0      		breq .L9
  88 0022 00C0      		rjmp .L13
  89               	.L10:
  90 0024 903E      		cpi r25,lo8(-32)
  91 0026 01F0      		breq .L12
  92 0028 903F      		cpi r25,lo8(-16)
  93 002a 01F0      		breq .L11
  94 002c 00C0      		rjmp .L13
  95               	.L9:
  38:../../tmk_core/protocol/midi/midi.c ****       case MIDI_CC:
  39:../../tmk_core/protocol/midi/midi.c ****       case MIDI_NOTEON:
  40:../../tmk_core/protocol/midi/midi.c ****       case MIDI_NOTEOFF:
  41:../../tmk_core/protocol/midi/midi.c ****       case MIDI_AFTERTOUCH:
  42:../../tmk_core/protocol/midi/midi.c ****       case MIDI_PITCHBEND:
  43:../../tmk_core/protocol/midi/midi.c ****          return THREE;
  44:../../tmk_core/protocol/midi/midi.c ****       case MIDI_PROGCHANGE:
  45:../../tmk_core/protocol/midi/midi.c ****       case MIDI_CHANPRESSURE:
  46:../../tmk_core/protocol/midi/midi.c ****       case MIDI_SONGSELECT:
  47:../../tmk_core/protocol/midi/midi.c ****          return TWO;
  96               		.loc 1 47 0
  97 002e 82E0      		ldi r24,lo8(2)
  98               	.LVL5:
  99 0030 0895      		ret
 100               	.LVL6:
 101               	.L11:
 102 0032 815F      		subi r24,lo8(-(15))
 103               	.LVL7:
 104 0034 8F30      		cpi r24,lo8(15)
 105 0036 00F4      		brsh .L13
 106 0038 E82F      		mov r30,r24
 107 003a F0E0      		ldi r31,0
 108 003c E050      		subi r30,lo8(-(CSWTCH.11))
 109 003e F040      		sbci r31,hi8(-(CSWTCH.11))
 110 0040 8081      		ld r24,Z
 111               	.LVL8:
 112 0042 0895      		ret
 113               	.LVL9:
 114               	.L12:
  43:../../tmk_core/protocol/midi/midi.c ****       case MIDI_PROGCHANGE:
 115               		.loc 1 43 0
 116 0044 83E0      		ldi r24,lo8(3)
 117               	.LVL10:
 118 0046 0895      		ret
 119               	.L13:
 120 0048 80E0      		ldi r24,0
  48:../../tmk_core/protocol/midi/midi.c ****       case 0xF0:
  49:../../tmk_core/protocol/midi/midi.c ****          switch(status) {
  50:../../tmk_core/protocol/midi/midi.c ****             case MIDI_CLOCK:
  51:../../tmk_core/protocol/midi/midi.c ****             case MIDI_TICK:
  52:../../tmk_core/protocol/midi/midi.c ****             case MIDI_START:
  53:../../tmk_core/protocol/midi/midi.c ****             case MIDI_CONTINUE:
  54:../../tmk_core/protocol/midi/midi.c ****             case MIDI_STOP:
  55:../../tmk_core/protocol/midi/midi.c ****             case MIDI_ACTIVESENSE:
  56:../../tmk_core/protocol/midi/midi.c ****             case MIDI_RESET:
  57:../../tmk_core/protocol/midi/midi.c ****             case MIDI_TUNEREQUEST:
  58:../../tmk_core/protocol/midi/midi.c ****                return ONE;
  59:../../tmk_core/protocol/midi/midi.c ****             case MIDI_SONGPOSITION:
  60:../../tmk_core/protocol/midi/midi.c ****                return THREE;
  61:../../tmk_core/protocol/midi/midi.c ****             case MIDI_TC_QUARTERFRAME:
  62:../../tmk_core/protocol/midi/midi.c ****             case MIDI_SONGSELECT:
  63:../../tmk_core/protocol/midi/midi.c ****                return TWO;
  64:../../tmk_core/protocol/midi/midi.c ****             case SYSEX_END:
  65:../../tmk_core/protocol/midi/midi.c ****             case SYSEX_BEGIN:
  66:../../tmk_core/protocol/midi/midi.c ****             default:
  67:../../tmk_core/protocol/midi/midi.c ****                return UNDEFINED;
  68:../../tmk_core/protocol/midi/midi.c ****          }
  69:../../tmk_core/protocol/midi/midi.c ****       default:
  70:../../tmk_core/protocol/midi/midi.c ****          return UNDEFINED;
  71:../../tmk_core/protocol/midi/midi.c ****    }
  72:../../tmk_core/protocol/midi/midi.c **** }
 121               		.loc 1 72 0
 122 004a 0895      		ret
 123               		.cfi_endproc
 124               	.LFE2:
 126               		.section	.text.midi_send_cc,"ax",@progbits
 127               	.global	midi_send_cc
 129               	midi_send_cc:
 130               	.LFB3:
  73:../../tmk_core/protocol/midi/midi.c **** 
  74:../../tmk_core/protocol/midi/midi.c **** void midi_send_cc(MidiDevice * device, uint8_t chan, uint8_t num, uint8_t val){
 131               		.loc 1 74 0
 132               		.cfi_startproc
 133               	.LVL11:
 134 0000 0F93      		push r16
 135               	.LCFI0:
 136               		.cfi_def_cfa_offset 3
 137               		.cfi_offset 16, -2
 138               	/* prologue: function */
 139               	/* frame size = 0 */
 140               	/* stack size = 1 */
 141               	.L__stack_usage = 1
  75:../../tmk_core/protocol/midi/midi.c ****    //CC Status: 0xB0 to 0xBF where the low nibble is the MIDI channel.
  76:../../tmk_core/protocol/midi/midi.c ****    //CC Data: Controller Num, Controller Val
  77:../../tmk_core/protocol/midi/midi.c ****    device->send_func(device, 3,
 142               		.loc 1 77 0
 143 0002 022F      		mov r16,r18
 144 0004 0F77      		andi r16,lo8(127)
 145 0006 242F      		mov r18,r20
 146               	.LVL12:
 147 0008 2F77      		andi r18,lo8(127)
 148 000a 6F70      		andi r22,lo8(15)
 149               	.LVL13:
 150 000c 462F      		mov r20,r22
 151               	.LVL14:
 152 000e 406B      		ori r20,lo8(-80)
 153 0010 DC01      		movw r26,r24
 154 0012 ED91      		ld r30,X+
 155 0014 FC91      		ld r31,X
 156 0016 63E0      		ldi r22,lo8(3)
 157 0018 70E0      		ldi r23,0
 158 001a 0995      		icall
 159               	.LVL15:
 160               	/* epilogue start */
  78:../../tmk_core/protocol/midi/midi.c ****          MIDI_CC | (chan & MIDI_CHANMASK),
  79:../../tmk_core/protocol/midi/midi.c ****          num & 0x7F,
  80:../../tmk_core/protocol/midi/midi.c ****          val & 0x7F);
  81:../../tmk_core/protocol/midi/midi.c **** }
 161               		.loc 1 81 0
 162 001c 0F91      		pop r16
 163 001e 0895      		ret
 164               		.cfi_endproc
 165               	.LFE3:
 167               		.section	.text.midi_send_noteon,"ax",@progbits
 168               	.global	midi_send_noteon
 170               	midi_send_noteon:
 171               	.LFB4:
  82:../../tmk_core/protocol/midi/midi.c **** 
  83:../../tmk_core/protocol/midi/midi.c **** void midi_send_noteon(MidiDevice * device, uint8_t chan, uint8_t num, uint8_t vel){
 172               		.loc 1 83 0
 173               		.cfi_startproc
 174               	.LVL16:
 175 0000 0F93      		push r16
 176               	.LCFI1:
 177               		.cfi_def_cfa_offset 3
 178               		.cfi_offset 16, -2
 179               	/* prologue: function */
 180               	/* frame size = 0 */
 181               	/* stack size = 1 */
 182               	.L__stack_usage = 1
  84:../../tmk_core/protocol/midi/midi.c ****    //Note Data: Note Num, Note Velocity
  85:../../tmk_core/protocol/midi/midi.c ****    device->send_func(device, 3,
 183               		.loc 1 85 0
 184 0002 022F      		mov r16,r18
 185 0004 0F77      		andi r16,lo8(127)
 186 0006 242F      		mov r18,r20
 187               	.LVL17:
 188 0008 2F77      		andi r18,lo8(127)
 189 000a 6F70      		andi r22,lo8(15)
 190               	.LVL18:
 191 000c 462F      		mov r20,r22
 192               	.LVL19:
 193 000e 4069      		ori r20,lo8(-112)
 194 0010 DC01      		movw r26,r24
 195 0012 ED91      		ld r30,X+
 196 0014 FC91      		ld r31,X
 197 0016 63E0      		ldi r22,lo8(3)
 198 0018 70E0      		ldi r23,0
 199 001a 0995      		icall
 200               	.LVL20:
 201               	/* epilogue start */
  86:../../tmk_core/protocol/midi/midi.c ****          MIDI_NOTEON | (chan & MIDI_CHANMASK),
  87:../../tmk_core/protocol/midi/midi.c ****          num & 0x7F,
  88:../../tmk_core/protocol/midi/midi.c ****          vel & 0x7F);
  89:../../tmk_core/protocol/midi/midi.c **** }
 202               		.loc 1 89 0
 203 001c 0F91      		pop r16
 204 001e 0895      		ret
 205               		.cfi_endproc
 206               	.LFE4:
 208               		.section	.text.midi_send_noteoff,"ax",@progbits
 209               	.global	midi_send_noteoff
 211               	midi_send_noteoff:
 212               	.LFB5:
  90:../../tmk_core/protocol/midi/midi.c **** 
  91:../../tmk_core/protocol/midi/midi.c **** void midi_send_noteoff(MidiDevice * device, uint8_t chan, uint8_t num, uint8_t vel){
 213               		.loc 1 91 0
 214               		.cfi_startproc
 215               	.LVL21:
 216 0000 0F93      		push r16
 217               	.LCFI2:
 218               		.cfi_def_cfa_offset 3
 219               		.cfi_offset 16, -2
 220               	/* prologue: function */
 221               	/* frame size = 0 */
 222               	/* stack size = 1 */
 223               	.L__stack_usage = 1
  92:../../tmk_core/protocol/midi/midi.c ****    //Note Data: Note Num, Note Velocity
  93:../../tmk_core/protocol/midi/midi.c ****    device->send_func(device, 3,
 224               		.loc 1 93 0
 225 0002 022F      		mov r16,r18
 226 0004 0F77      		andi r16,lo8(127)
 227 0006 242F      		mov r18,r20
 228               	.LVL22:
 229 0008 2F77      		andi r18,lo8(127)
 230 000a 6F70      		andi r22,lo8(15)
 231               	.LVL23:
 232 000c 462F      		mov r20,r22
 233               	.LVL24:
 234 000e 4068      		ori r20,lo8(-128)
 235 0010 DC01      		movw r26,r24
 236 0012 ED91      		ld r30,X+
 237 0014 FC91      		ld r31,X
 238 0016 63E0      		ldi r22,lo8(3)
 239 0018 70E0      		ldi r23,0
 240 001a 0995      		icall
 241               	.LVL25:
 242               	/* epilogue start */
  94:../../tmk_core/protocol/midi/midi.c ****          MIDI_NOTEOFF | (chan & MIDI_CHANMASK),
  95:../../tmk_core/protocol/midi/midi.c ****          num & 0x7F,
  96:../../tmk_core/protocol/midi/midi.c ****          vel & 0x7F);
  97:../../tmk_core/protocol/midi/midi.c **** }
 243               		.loc 1 97 0
 244 001c 0F91      		pop r16
 245 001e 0895      		ret
 246               		.cfi_endproc
 247               	.LFE5:
 249               		.section	.text.midi_send_aftertouch,"ax",@progbits
 250               	.global	midi_send_aftertouch
 252               	midi_send_aftertouch:
 253               	.LFB6:
  98:../../tmk_core/protocol/midi/midi.c **** 
  99:../../tmk_core/protocol/midi/midi.c **** void midi_send_aftertouch(MidiDevice * device, uint8_t chan, uint8_t note_num, uint8_t amt){
 254               		.loc 1 99 0
 255               		.cfi_startproc
 256               	.LVL26:
 257 0000 0F93      		push r16
 258               	.LCFI3:
 259               		.cfi_def_cfa_offset 3
 260               		.cfi_offset 16, -2
 261               	/* prologue: function */
 262               	/* frame size = 0 */
 263               	/* stack size = 1 */
 264               	.L__stack_usage = 1
 100:../../tmk_core/protocol/midi/midi.c ****    device->send_func(device, 3,
 265               		.loc 1 100 0
 266 0002 022F      		mov r16,r18
 267 0004 0F77      		andi r16,lo8(127)
 268 0006 242F      		mov r18,r20
 269               	.LVL27:
 270 0008 2F77      		andi r18,lo8(127)
 271 000a 6F70      		andi r22,lo8(15)
 272               	.LVL28:
 273 000c 462F      		mov r20,r22
 274               	.LVL29:
 275 000e 406A      		ori r20,lo8(-96)
 276 0010 DC01      		movw r26,r24
 277 0012 ED91      		ld r30,X+
 278 0014 FC91      		ld r31,X
 279 0016 63E0      		ldi r22,lo8(3)
 280 0018 70E0      		ldi r23,0
 281 001a 0995      		icall
 282               	.LVL30:
 283               	/* epilogue start */
 101:../../tmk_core/protocol/midi/midi.c ****          MIDI_AFTERTOUCH | (chan & MIDI_CHANMASK),
 102:../../tmk_core/protocol/midi/midi.c ****          note_num & 0x7F,
 103:../../tmk_core/protocol/midi/midi.c ****          amt & 0x7F);
 104:../../tmk_core/protocol/midi/midi.c **** }
 284               		.loc 1 104 0
 285 001c 0F91      		pop r16
 286 001e 0895      		ret
 287               		.cfi_endproc
 288               	.LFE6:
 290               		.section	.text.midi_send_pitchbend,"ax",@progbits
 291               	.global	midi_send_pitchbend
 293               	midi_send_pitchbend:
 294               	.LFB7:
 105:../../tmk_core/protocol/midi/midi.c **** 
 106:../../tmk_core/protocol/midi/midi.c **** //XXX does this work right?
 107:../../tmk_core/protocol/midi/midi.c **** //amt in range -0x2000, 0x1fff
 108:../../tmk_core/protocol/midi/midi.c **** //uAmt should be in range..
 109:../../tmk_core/protocol/midi/midi.c **** //0x0000 to 0x3FFF
 110:../../tmk_core/protocol/midi/midi.c **** void midi_send_pitchbend(MidiDevice * device, uint8_t chan, int16_t amt){
 295               		.loc 1 110 0
 296               		.cfi_startproc
 297               	.LVL31:
 298 0000 0F93      		push r16
 299               	.LCFI4:
 300               		.cfi_def_cfa_offset 3
 301               		.cfi_offset 16, -2
 302 0002 1F93      		push r17
 303               	.LCFI5:
 304               		.cfi_def_cfa_offset 4
 305               		.cfi_offset 17, -3
 306               	/* prologue: function */
 307               	/* frame size = 0 */
 308               	/* stack size = 2 */
 309               	.L__stack_usage = 2
 111:../../tmk_core/protocol/midi/midi.c ****    uint16_t uAmt;
 112:../../tmk_core/protocol/midi/midi.c ****    //check range
 113:../../tmk_core/protocol/midi/midi.c ****    if(amt > 0x1fff){
 310               		.loc 1 113 0
 311 0004 4115      		cp r20,__zero_reg__
 312 0006 20E2      		ldi r18,32
 313 0008 5207      		cpc r21,r18
 314 000a 04F4      		brge .L41
 114:../../tmk_core/protocol/midi/midi.c ****       uAmt = 0x3FFF;
 115:../../tmk_core/protocol/midi/midi.c ****    } else if(amt < -0x2000){
 315               		.loc 1 115 0
 316 000c 4115      		cp r20,__zero_reg__
 317 000e A0EE      		ldi r26,-32
 318 0010 5A07      		cpc r21,r26
 319 0012 04F0      		brlt .L42
 116:../../tmk_core/protocol/midi/midi.c ****       uAmt = 0;
 117:../../tmk_core/protocol/midi/midi.c ****    } else {
 118:../../tmk_core/protocol/midi/midi.c ****       uAmt = amt + 0x2000;
 320               		.loc 1 118 0
 321 0014 9A01      		movw r18,r20
 322 0016 305E      		subi r19,-32
 323               	.LVL32:
 324 0018 00C0      		rjmp .L40
 325               	.LVL33:
 326               	.L41:
 114:../../tmk_core/protocol/midi/midi.c ****       uAmt = 0x3FFF;
 327               		.loc 1 114 0
 328 001a 2FEF      		ldi r18,lo8(-1)
 329 001c 3FE3      		ldi r19,lo8(63)
 330 001e 00C0      		rjmp .L40
 331               	.L42:
 116:../../tmk_core/protocol/midi/midi.c ****       uAmt = 0;
 332               		.loc 1 116 0
 333 0020 20E0      		ldi r18,0
 334 0022 30E0      		ldi r19,0
 335               	.L40:
 336               	.LVL34:
 119:../../tmk_core/protocol/midi/midi.c ****    }
 120:../../tmk_core/protocol/midi/midi.c ****    device->send_func(device, 3,
 121:../../tmk_core/protocol/midi/midi.c ****          MIDI_PITCHBEND | (chan & MIDI_CHANMASK),
 122:../../tmk_core/protocol/midi/midi.c ****          uAmt & 0x7F,
 123:../../tmk_core/protocol/midi/midi.c ****          (uAmt >> 7) & 0x7F);
 337               		.loc 1 123 0
 338 0024 8901      		movw r16,r18
 339 0026 000F      		lsl r16
 340 0028 012F      		mov r16,r17
 341 002a 001F      		rol r16
 342 002c 110B      		sbc r17,r17
 343 002e 1195      		neg r17
 120:../../tmk_core/protocol/midi/midi.c ****          MIDI_PITCHBEND | (chan & MIDI_CHANMASK),
 344               		.loc 1 120 0
 345 0030 2F77      		andi r18,lo8(127)
 346               	.LVL35:
 347 0032 462F      		mov r20,r22
 348               	.LVL36:
 349 0034 4F70      		andi r20,lo8(15)
 350 0036 406E      		ori r20,lo8(-32)
 351 0038 DC01      		movw r26,r24
 352 003a ED91      		ld r30,X+
 353 003c FC91      		ld r31,X
 354 003e 63E0      		ldi r22,lo8(3)
 355 0040 70E0      		ldi r23,0
 356               	.LVL37:
 357 0042 0995      		icall
 358               	.LVL38:
 359               	/* epilogue start */
 124:../../tmk_core/protocol/midi/midi.c **** }
 360               		.loc 1 124 0
 361 0044 1F91      		pop r17
 362 0046 0F91      		pop r16
 363 0048 0895      		ret
 364               		.cfi_endproc
 365               	.LFE7:
 367               		.section	.text.midi_send_programchange,"ax",@progbits
 368               	.global	midi_send_programchange
 370               	midi_send_programchange:
 371               	.LFB8:
 125:../../tmk_core/protocol/midi/midi.c **** 
 126:../../tmk_core/protocol/midi/midi.c **** void midi_send_programchange(MidiDevice * device, uint8_t chan, uint8_t num){
 372               		.loc 1 126 0
 373               		.cfi_startproc
 374               	.LVL39:
 375 0000 0F93      		push r16
 376               	.LCFI6:
 377               		.cfi_def_cfa_offset 3
 378               		.cfi_offset 16, -2
 379               	/* prologue: function */
 380               	/* frame size = 0 */
 381               	/* stack size = 1 */
 382               	.L__stack_usage = 1
 127:../../tmk_core/protocol/midi/midi.c ****    device->send_func(device, 2,
 383               		.loc 1 127 0
 384 0002 242F      		mov r18,r20
 385 0004 2F77      		andi r18,lo8(127)
 386 0006 6F70      		andi r22,lo8(15)
 387               	.LVL40:
 388 0008 462F      		mov r20,r22
 389               	.LVL41:
 390 000a 406C      		ori r20,lo8(-64)
 391 000c DC01      		movw r26,r24
 392 000e ED91      		ld r30,X+
 393 0010 FC91      		ld r31,X
 394 0012 00E0      		ldi r16,0
 395 0014 62E0      		ldi r22,lo8(2)
 396 0016 70E0      		ldi r23,0
 397 0018 0995      		icall
 398               	.LVL42:
 399               	/* epilogue start */
 128:../../tmk_core/protocol/midi/midi.c ****          MIDI_PROGCHANGE | (chan & MIDI_CHANMASK),
 129:../../tmk_core/protocol/midi/midi.c ****          num & 0x7F,
 130:../../tmk_core/protocol/midi/midi.c ****          0);
 131:../../tmk_core/protocol/midi/midi.c **** }
 400               		.loc 1 131 0
 401 001a 0F91      		pop r16
 402 001c 0895      		ret
 403               		.cfi_endproc
 404               	.LFE8:
 406               		.section	.text.midi_send_channelpressure,"ax",@progbits
 407               	.global	midi_send_channelpressure
 409               	midi_send_channelpressure:
 410               	.LFB9:
 132:../../tmk_core/protocol/midi/midi.c **** 
 133:../../tmk_core/protocol/midi/midi.c **** void midi_send_channelpressure(MidiDevice * device, uint8_t chan, uint8_t amt){
 411               		.loc 1 133 0
 412               		.cfi_startproc
 413               	.LVL43:
 414 0000 0F93      		push r16
 415               	.LCFI7:
 416               		.cfi_def_cfa_offset 3
 417               		.cfi_offset 16, -2
 418               	/* prologue: function */
 419               	/* frame size = 0 */
 420               	/* stack size = 1 */
 421               	.L__stack_usage = 1
 134:../../tmk_core/protocol/midi/midi.c ****    device->send_func(device, 2,
 422               		.loc 1 134 0
 423 0002 242F      		mov r18,r20
 424 0004 2F77      		andi r18,lo8(127)
 425 0006 6F70      		andi r22,lo8(15)
 426               	.LVL44:
 427 0008 462F      		mov r20,r22
 428               	.LVL45:
 429 000a 406D      		ori r20,lo8(-48)
 430 000c DC01      		movw r26,r24
 431 000e ED91      		ld r30,X+
 432 0010 FC91      		ld r31,X
 433 0012 00E0      		ldi r16,0
 434 0014 62E0      		ldi r22,lo8(2)
 435 0016 70E0      		ldi r23,0
 436 0018 0995      		icall
 437               	.LVL46:
 438               	/* epilogue start */
 135:../../tmk_core/protocol/midi/midi.c ****          MIDI_CHANPRESSURE | (chan & MIDI_CHANMASK),
 136:../../tmk_core/protocol/midi/midi.c ****          amt & 0x7F,
 137:../../tmk_core/protocol/midi/midi.c ****          0);
 138:../../tmk_core/protocol/midi/midi.c **** }
 439               		.loc 1 138 0
 440 001a 0F91      		pop r16
 441 001c 0895      		ret
 442               		.cfi_endproc
 443               	.LFE9:
 445               		.section	.text.midi_send_clock,"ax",@progbits
 446               	.global	midi_send_clock
 448               	midi_send_clock:
 449               	.LFB10:
 139:../../tmk_core/protocol/midi/midi.c **** 
 140:../../tmk_core/protocol/midi/midi.c **** void midi_send_clock(MidiDevice * device){
 450               		.loc 1 140 0
 451               		.cfi_startproc
 452               	.LVL47:
 453 0000 0F93      		push r16
 454               	.LCFI8:
 455               		.cfi_def_cfa_offset 3
 456               		.cfi_offset 16, -2
 457               	/* prologue: function */
 458               	/* frame size = 0 */
 459               	/* stack size = 1 */
 460               	.L__stack_usage = 1
 141:../../tmk_core/protocol/midi/midi.c ****    device->send_func(device, 1, MIDI_CLOCK, 0, 0);
 461               		.loc 1 141 0
 462 0002 DC01      		movw r26,r24
 463 0004 ED91      		ld r30,X+
 464 0006 FC91      		ld r31,X
 465 0008 00E0      		ldi r16,0
 466 000a 20E0      		ldi r18,0
 467 000c 48EF      		ldi r20,lo8(-8)
 468 000e 61E0      		ldi r22,lo8(1)
 469 0010 70E0      		ldi r23,0
 470 0012 0995      		icall
 471               	.LVL48:
 472               	/* epilogue start */
 142:../../tmk_core/protocol/midi/midi.c **** }
 473               		.loc 1 142 0
 474 0014 0F91      		pop r16
 475 0016 0895      		ret
 476               		.cfi_endproc
 477               	.LFE10:
 479               		.section	.text.midi_send_tick,"ax",@progbits
 480               	.global	midi_send_tick
 482               	midi_send_tick:
 483               	.LFB11:
 143:../../tmk_core/protocol/midi/midi.c **** 
 144:../../tmk_core/protocol/midi/midi.c **** void midi_send_tick(MidiDevice * device){
 484               		.loc 1 144 0
 485               		.cfi_startproc
 486               	.LVL49:
 487 0000 0F93      		push r16
 488               	.LCFI9:
 489               		.cfi_def_cfa_offset 3
 490               		.cfi_offset 16, -2
 491               	/* prologue: function */
 492               	/* frame size = 0 */
 493               	/* stack size = 1 */
 494               	.L__stack_usage = 1
 145:../../tmk_core/protocol/midi/midi.c ****    device->send_func(device, 1, MIDI_TICK, 0, 0);
 495               		.loc 1 145 0
 496 0002 DC01      		movw r26,r24
 497 0004 ED91      		ld r30,X+
 498 0006 FC91      		ld r31,X
 499 0008 00E0      		ldi r16,0
 500 000a 20E0      		ldi r18,0
 501 000c 49EF      		ldi r20,lo8(-7)
 502 000e 61E0      		ldi r22,lo8(1)
 503 0010 70E0      		ldi r23,0
 504 0012 0995      		icall
 505               	.LVL50:
 506               	/* epilogue start */
 146:../../tmk_core/protocol/midi/midi.c **** }
 507               		.loc 1 146 0
 508 0014 0F91      		pop r16
 509 0016 0895      		ret
 510               		.cfi_endproc
 511               	.LFE11:
 513               		.section	.text.midi_send_start,"ax",@progbits
 514               	.global	midi_send_start
 516               	midi_send_start:
 517               	.LFB12:
 147:../../tmk_core/protocol/midi/midi.c **** 
 148:../../tmk_core/protocol/midi/midi.c **** void midi_send_start(MidiDevice * device){
 518               		.loc 1 148 0
 519               		.cfi_startproc
 520               	.LVL51:
 521 0000 0F93      		push r16
 522               	.LCFI10:
 523               		.cfi_def_cfa_offset 3
 524               		.cfi_offset 16, -2
 525               	/* prologue: function */
 526               	/* frame size = 0 */
 527               	/* stack size = 1 */
 528               	.L__stack_usage = 1
 149:../../tmk_core/protocol/midi/midi.c ****    device->send_func(device, 1, MIDI_START, 0, 0);
 529               		.loc 1 149 0
 530 0002 DC01      		movw r26,r24
 531 0004 ED91      		ld r30,X+
 532 0006 FC91      		ld r31,X
 533 0008 00E0      		ldi r16,0
 534 000a 20E0      		ldi r18,0
 535 000c 4AEF      		ldi r20,lo8(-6)
 536 000e 61E0      		ldi r22,lo8(1)
 537 0010 70E0      		ldi r23,0
 538 0012 0995      		icall
 539               	.LVL52:
 540               	/* epilogue start */
 150:../../tmk_core/protocol/midi/midi.c **** }
 541               		.loc 1 150 0
 542 0014 0F91      		pop r16
 543 0016 0895      		ret
 544               		.cfi_endproc
 545               	.LFE12:
 547               		.section	.text.midi_send_continue,"ax",@progbits
 548               	.global	midi_send_continue
 550               	midi_send_continue:
 551               	.LFB13:
 151:../../tmk_core/protocol/midi/midi.c **** 
 152:../../tmk_core/protocol/midi/midi.c **** void midi_send_continue(MidiDevice * device){
 552               		.loc 1 152 0
 553               		.cfi_startproc
 554               	.LVL53:
 555 0000 0F93      		push r16
 556               	.LCFI11:
 557               		.cfi_def_cfa_offset 3
 558               		.cfi_offset 16, -2
 559               	/* prologue: function */
 560               	/* frame size = 0 */
 561               	/* stack size = 1 */
 562               	.L__stack_usage = 1
 153:../../tmk_core/protocol/midi/midi.c ****    device->send_func(device, 1, MIDI_CONTINUE, 0, 0);
 563               		.loc 1 153 0
 564 0002 DC01      		movw r26,r24
 565 0004 ED91      		ld r30,X+
 566 0006 FC91      		ld r31,X
 567 0008 00E0      		ldi r16,0
 568 000a 20E0      		ldi r18,0
 569 000c 4BEF      		ldi r20,lo8(-5)
 570 000e 61E0      		ldi r22,lo8(1)
 571 0010 70E0      		ldi r23,0
 572 0012 0995      		icall
 573               	.LVL54:
 574               	/* epilogue start */
 154:../../tmk_core/protocol/midi/midi.c **** }
 575               		.loc 1 154 0
 576 0014 0F91      		pop r16
 577 0016 0895      		ret
 578               		.cfi_endproc
 579               	.LFE13:
 581               		.section	.text.midi_send_stop,"ax",@progbits
 582               	.global	midi_send_stop
 584               	midi_send_stop:
 585               	.LFB14:
 155:../../tmk_core/protocol/midi/midi.c **** 
 156:../../tmk_core/protocol/midi/midi.c **** void midi_send_stop(MidiDevice * device){
 586               		.loc 1 156 0
 587               		.cfi_startproc
 588               	.LVL55:
 589 0000 0F93      		push r16
 590               	.LCFI12:
 591               		.cfi_def_cfa_offset 3
 592               		.cfi_offset 16, -2
 593               	/* prologue: function */
 594               	/* frame size = 0 */
 595               	/* stack size = 1 */
 596               	.L__stack_usage = 1
 157:../../tmk_core/protocol/midi/midi.c ****    device->send_func(device, 1, MIDI_STOP, 0, 0);
 597               		.loc 1 157 0
 598 0002 DC01      		movw r26,r24
 599 0004 ED91      		ld r30,X+
 600 0006 FC91      		ld r31,X
 601 0008 00E0      		ldi r16,0
 602 000a 20E0      		ldi r18,0
 603 000c 4CEF      		ldi r20,lo8(-4)
 604 000e 61E0      		ldi r22,lo8(1)
 605 0010 70E0      		ldi r23,0
 606 0012 0995      		icall
 607               	.LVL56:
 608               	/* epilogue start */
 158:../../tmk_core/protocol/midi/midi.c **** }
 609               		.loc 1 158 0
 610 0014 0F91      		pop r16
 611 0016 0895      		ret
 612               		.cfi_endproc
 613               	.LFE14:
 615               		.section	.text.midi_send_activesense,"ax",@progbits
 616               	.global	midi_send_activesense
 618               	midi_send_activesense:
 619               	.LFB15:
 159:../../tmk_core/protocol/midi/midi.c **** 
 160:../../tmk_core/protocol/midi/midi.c **** void midi_send_activesense(MidiDevice * device){
 620               		.loc 1 160 0
 621               		.cfi_startproc
 622               	.LVL57:
 623 0000 0F93      		push r16
 624               	.LCFI13:
 625               		.cfi_def_cfa_offset 3
 626               		.cfi_offset 16, -2
 627               	/* prologue: function */
 628               	/* frame size = 0 */
 629               	/* stack size = 1 */
 630               	.L__stack_usage = 1
 161:../../tmk_core/protocol/midi/midi.c ****    device->send_func(device, 1, MIDI_ACTIVESENSE, 0, 0);
 631               		.loc 1 161 0
 632 0002 DC01      		movw r26,r24
 633 0004 ED91      		ld r30,X+
 634 0006 FC91      		ld r31,X
 635 0008 00E0      		ldi r16,0
 636 000a 20E0      		ldi r18,0
 637 000c 4EEF      		ldi r20,lo8(-2)
 638 000e 61E0      		ldi r22,lo8(1)
 639 0010 70E0      		ldi r23,0
 640 0012 0995      		icall
 641               	.LVL58:
 642               	/* epilogue start */
 162:../../tmk_core/protocol/midi/midi.c **** }
 643               		.loc 1 162 0
 644 0014 0F91      		pop r16
 645 0016 0895      		ret
 646               		.cfi_endproc
 647               	.LFE15:
 649               		.section	.text.midi_send_reset,"ax",@progbits
 650               	.global	midi_send_reset
 652               	midi_send_reset:
 653               	.LFB16:
 163:../../tmk_core/protocol/midi/midi.c **** 
 164:../../tmk_core/protocol/midi/midi.c **** void midi_send_reset(MidiDevice * device){
 654               		.loc 1 164 0
 655               		.cfi_startproc
 656               	.LVL59:
 657 0000 0F93      		push r16
 658               	.LCFI14:
 659               		.cfi_def_cfa_offset 3
 660               		.cfi_offset 16, -2
 661               	/* prologue: function */
 662               	/* frame size = 0 */
 663               	/* stack size = 1 */
 664               	.L__stack_usage = 1
 165:../../tmk_core/protocol/midi/midi.c ****    device->send_func(device, 1, MIDI_RESET, 0, 0);
 665               		.loc 1 165 0
 666 0002 DC01      		movw r26,r24
 667 0004 ED91      		ld r30,X+
 668 0006 FC91      		ld r31,X
 669 0008 00E0      		ldi r16,0
 670 000a 20E0      		ldi r18,0
 671 000c 4FEF      		ldi r20,lo8(-1)
 672 000e 61E0      		ldi r22,lo8(1)
 673 0010 70E0      		ldi r23,0
 674 0012 0995      		icall
 675               	.LVL60:
 676               	/* epilogue start */
 166:../../tmk_core/protocol/midi/midi.c **** }
 677               		.loc 1 166 0
 678 0014 0F91      		pop r16
 679 0016 0895      		ret
 680               		.cfi_endproc
 681               	.LFE16:
 683               		.section	.text.midi_send_tcquarterframe,"ax",@progbits
 684               	.global	midi_send_tcquarterframe
 686               	midi_send_tcquarterframe:
 687               	.LFB17:
 167:../../tmk_core/protocol/midi/midi.c **** 
 168:../../tmk_core/protocol/midi/midi.c **** void midi_send_tcquarterframe(MidiDevice * device, uint8_t time){
 688               		.loc 1 168 0
 689               		.cfi_startproc
 690               	.LVL61:
 691 0000 0F93      		push r16
 692               	.LCFI15:
 693               		.cfi_def_cfa_offset 3
 694               		.cfi_offset 16, -2
 695               	/* prologue: function */
 696               	/* frame size = 0 */
 697               	/* stack size = 1 */
 698               	.L__stack_usage = 1
 169:../../tmk_core/protocol/midi/midi.c ****    device->send_func(device, 2,
 699               		.loc 1 169 0
 700 0002 262F      		mov r18,r22
 701 0004 2F77      		andi r18,lo8(127)
 702 0006 DC01      		movw r26,r24
 703 0008 ED91      		ld r30,X+
 704 000a FC91      		ld r31,X
 705 000c 00E0      		ldi r16,0
 706 000e 41EF      		ldi r20,lo8(-15)
 707 0010 62E0      		ldi r22,lo8(2)
 708 0012 70E0      		ldi r23,0
 709               	.LVL62:
 710 0014 0995      		icall
 711               	.LVL63:
 712               	/* epilogue start */
 170:../../tmk_core/protocol/midi/midi.c ****          MIDI_TC_QUARTERFRAME,
 171:../../tmk_core/protocol/midi/midi.c ****          time & 0x7F,
 172:../../tmk_core/protocol/midi/midi.c ****          0);
 173:../../tmk_core/protocol/midi/midi.c **** }
 713               		.loc 1 173 0
 714 0016 0F91      		pop r16
 715 0018 0895      		ret
 716               		.cfi_endproc
 717               	.LFE17:
 719               		.section	.text.midi_send_songposition,"ax",@progbits
 720               	.global	midi_send_songposition
 722               	midi_send_songposition:
 723               	.LFB18:
 174:../../tmk_core/protocol/midi/midi.c **** 
 175:../../tmk_core/protocol/midi/midi.c **** //XXX is this right?
 176:../../tmk_core/protocol/midi/midi.c **** void midi_send_songposition(MidiDevice * device, uint16_t pos){
 724               		.loc 1 176 0
 725               		.cfi_startproc
 726               	.LVL64:
 727 0000 0F93      		push r16
 728               	.LCFI16:
 729               		.cfi_def_cfa_offset 3
 730               		.cfi_offset 16, -2
 731 0002 1F93      		push r17
 732               	.LCFI17:
 733               		.cfi_def_cfa_offset 4
 734               		.cfi_offset 17, -3
 735               	/* prologue: function */
 736               	/* frame size = 0 */
 737               	/* stack size = 2 */
 738               	.L__stack_usage = 2
 177:../../tmk_core/protocol/midi/midi.c ****    device->send_func(device, 3,
 178:../../tmk_core/protocol/midi/midi.c ****          MIDI_SONGPOSITION,
 179:../../tmk_core/protocol/midi/midi.c ****          pos & 0x7F,
 180:../../tmk_core/protocol/midi/midi.c ****          (pos >> 7) & 0x7F);
 739               		.loc 1 180 0
 740 0004 8B01      		movw r16,r22
 741 0006 000F      		lsl r16
 742 0008 012F      		mov r16,r17
 743 000a 001F      		rol r16
 744 000c 110B      		sbc r17,r17
 745 000e 1195      		neg r17
 177:../../tmk_core/protocol/midi/midi.c ****    device->send_func(device, 3,
 746               		.loc 1 177 0
 747 0010 0F77      		andi r16,lo8(127)
 748 0012 262F      		mov r18,r22
 749 0014 2F77      		andi r18,lo8(127)
 750 0016 DC01      		movw r26,r24
 751 0018 ED91      		ld r30,X+
 752 001a FC91      		ld r31,X
 753 001c 42EF      		ldi r20,lo8(-14)
 754 001e 63E0      		ldi r22,lo8(3)
 755 0020 70E0      		ldi r23,0
 756               	.LVL65:
 757 0022 0995      		icall
 758               	.LVL66:
 759               	/* epilogue start */
 181:../../tmk_core/protocol/midi/midi.c **** }
 760               		.loc 1 181 0
 761 0024 1F91      		pop r17
 762 0026 0F91      		pop r16
 763 0028 0895      		ret
 764               		.cfi_endproc
 765               	.LFE18:
 767               		.section	.text.midi_send_songselect,"ax",@progbits
 768               	.global	midi_send_songselect
 770               	midi_send_songselect:
 771               	.LFB19:
 182:../../tmk_core/protocol/midi/midi.c **** 
 183:../../tmk_core/protocol/midi/midi.c **** void midi_send_songselect(MidiDevice * device, uint8_t song){
 772               		.loc 1 183 0
 773               		.cfi_startproc
 774               	.LVL67:
 775 0000 0F93      		push r16
 776               	.LCFI18:
 777               		.cfi_def_cfa_offset 3
 778               		.cfi_offset 16, -2
 779               	/* prologue: function */
 780               	/* frame size = 0 */
 781               	/* stack size = 1 */
 782               	.L__stack_usage = 1
 184:../../tmk_core/protocol/midi/midi.c ****    device->send_func(device, 2,
 783               		.loc 1 184 0
 784 0002 262F      		mov r18,r22
 785 0004 2F77      		andi r18,lo8(127)
 786 0006 DC01      		movw r26,r24
 787 0008 ED91      		ld r30,X+
 788 000a FC91      		ld r31,X
 789 000c 00E0      		ldi r16,0
 790 000e 43EF      		ldi r20,lo8(-13)
 791 0010 62E0      		ldi r22,lo8(2)
 792 0012 70E0      		ldi r23,0
 793               	.LVL68:
 794 0014 0995      		icall
 795               	.LVL69:
 796               	/* epilogue start */
 185:../../tmk_core/protocol/midi/midi.c ****          MIDI_SONGSELECT,
 186:../../tmk_core/protocol/midi/midi.c ****          song & 0x7F,
 187:../../tmk_core/protocol/midi/midi.c ****          0);
 188:../../tmk_core/protocol/midi/midi.c **** }
 797               		.loc 1 188 0
 798 0016 0F91      		pop r16
 799 0018 0895      		ret
 800               		.cfi_endproc
 801               	.LFE19:
 803               		.section	.text.midi_send_tunerequest,"ax",@progbits
 804               	.global	midi_send_tunerequest
 806               	midi_send_tunerequest:
 807               	.LFB20:
 189:../../tmk_core/protocol/midi/midi.c **** 
 190:../../tmk_core/protocol/midi/midi.c **** void midi_send_tunerequest(MidiDevice * device){
 808               		.loc 1 190 0
 809               		.cfi_startproc
 810               	.LVL70:
 811 0000 0F93      		push r16
 812               	.LCFI19:
 813               		.cfi_def_cfa_offset 3
 814               		.cfi_offset 16, -2
 815               	/* prologue: function */
 816               	/* frame size = 0 */
 817               	/* stack size = 1 */
 818               	.L__stack_usage = 1
 191:../../tmk_core/protocol/midi/midi.c ****    device->send_func(device, 1, MIDI_TUNEREQUEST, 0, 0);
 819               		.loc 1 191 0
 820 0002 DC01      		movw r26,r24
 821 0004 ED91      		ld r30,X+
 822 0006 FC91      		ld r31,X
 823 0008 00E0      		ldi r16,0
 824 000a 20E0      		ldi r18,0
 825 000c 46EF      		ldi r20,lo8(-10)
 826 000e 61E0      		ldi r22,lo8(1)
 827 0010 70E0      		ldi r23,0
 828 0012 0995      		icall
 829               	.LVL71:
 830               	/* epilogue start */
 192:../../tmk_core/protocol/midi/midi.c **** }
 831               		.loc 1 192 0
 832 0014 0F91      		pop r16
 833 0016 0895      		ret
 834               		.cfi_endproc
 835               	.LFE20:
 837               		.section	.text.midi_send_byte,"ax",@progbits
 838               	.global	midi_send_byte
 840               	midi_send_byte:
 841               	.LFB21:
 193:../../tmk_core/protocol/midi/midi.c **** 
 194:../../tmk_core/protocol/midi/midi.c **** void midi_send_byte(MidiDevice * device, uint8_t b){
 842               		.loc 1 194 0
 843               		.cfi_startproc
 844               	.LVL72:
 845 0000 0F93      		push r16
 846               	.LCFI20:
 847               		.cfi_def_cfa_offset 3
 848               		.cfi_offset 16, -2
 849               	/* prologue: function */
 850               	/* frame size = 0 */
 851               	/* stack size = 1 */
 852               	.L__stack_usage = 1
 853 0002 462F      		mov r20,r22
 195:../../tmk_core/protocol/midi/midi.c ****    device->send_func(device, 1, b, 0, 0);
 854               		.loc 1 195 0
 855 0004 DC01      		movw r26,r24
 856 0006 ED91      		ld r30,X+
 857 0008 FC91      		ld r31,X
 858 000a 00E0      		ldi r16,0
 859 000c 20E0      		ldi r18,0
 860 000e 61E0      		ldi r22,lo8(1)
 861 0010 70E0      		ldi r23,0
 862               	.LVL73:
 863 0012 0995      		icall
 864               	.LVL74:
 865               	/* epilogue start */
 196:../../tmk_core/protocol/midi/midi.c **** }
 866               		.loc 1 196 0
 867 0014 0F91      		pop r16
 868 0016 0895      		ret
 869               		.cfi_endproc
 870               	.LFE21:
 872               		.section	.text.midi_send_data,"ax",@progbits
 873               	.global	midi_send_data
 875               	midi_send_data:
 876               	.LFB22:
 197:../../tmk_core/protocol/midi/midi.c **** 
 198:../../tmk_core/protocol/midi/midi.c **** void midi_send_data(MidiDevice * device, uint16_t count, uint8_t byte0, uint8_t byte1, uint8_t byte
 877               		.loc 1 198 0
 878               		.cfi_startproc
 879               	.LVL75:
 880 0000 0F93      		push r16
 881               	.LCFI21:
 882               		.cfi_def_cfa_offset 3
 883               		.cfi_offset 16, -2
 884               	/* prologue: function */
 885               	/* frame size = 0 */
 886               	/* stack size = 1 */
 887               	.L__stack_usage = 1
 199:../../tmk_core/protocol/midi/midi.c ****    //ensure that the count passed along is always 3 or lower
 200:../../tmk_core/protocol/midi/midi.c ****    if (count > 3) {
 201:../../tmk_core/protocol/midi/midi.c ****       //TODO how to do this correctly?
 202:../../tmk_core/protocol/midi/midi.c ****    }
 203:../../tmk_core/protocol/midi/midi.c ****    device->send_func(device, count, byte0, byte1, byte2);
 888               		.loc 1 203 0
 889 0002 DC01      		movw r26,r24
 890 0004 ED91      		ld r30,X+
 891 0006 FC91      		ld r31,X
 892 0008 0995      		icall
 893               	.LVL76:
 894               	/* epilogue start */
 204:../../tmk_core/protocol/midi/midi.c **** }
 895               		.loc 1 204 0
 896 000a 0F91      		pop r16
 897               	.LVL77:
 898 000c 0895      		ret
 899               		.cfi_endproc
 900               	.LFE22:
 902               		.section	.text.midi_send_array,"ax",@progbits
 903               	.global	midi_send_array
 905               	midi_send_array:
 906               	.LFB23:
 205:../../tmk_core/protocol/midi/midi.c **** 
 206:../../tmk_core/protocol/midi/midi.c **** void midi_send_array(MidiDevice * device, uint16_t count, uint8_t * array) {
 907               		.loc 1 206 0
 908               		.cfi_startproc
 909               	.LVL78:
 910 0000 6F92      		push r6
 911               	.LCFI22:
 912               		.cfi_def_cfa_offset 3
 913               		.cfi_offset 6, -2
 914 0002 7F92      		push r7
 915               	.LCFI23:
 916               		.cfi_def_cfa_offset 4
 917               		.cfi_offset 7, -3
 918 0004 8F92      		push r8
 919               	.LCFI24:
 920               		.cfi_def_cfa_offset 5
 921               		.cfi_offset 8, -4
 922 0006 9F92      		push r9
 923               	.LCFI25:
 924               		.cfi_def_cfa_offset 6
 925               		.cfi_offset 9, -5
 926 0008 AF92      		push r10
 927               	.LCFI26:
 928               		.cfi_def_cfa_offset 7
 929               		.cfi_offset 10, -6
 930 000a BF92      		push r11
 931               	.LCFI27:
 932               		.cfi_def_cfa_offset 8
 933               		.cfi_offset 11, -7
 934 000c CF92      		push r12
 935               	.LCFI28:
 936               		.cfi_def_cfa_offset 9
 937               		.cfi_offset 12, -8
 938 000e DF92      		push r13
 939               	.LCFI29:
 940               		.cfi_def_cfa_offset 10
 941               		.cfi_offset 13, -9
 942 0010 EF92      		push r14
 943               	.LCFI30:
 944               		.cfi_def_cfa_offset 11
 945               		.cfi_offset 14, -10
 946 0012 FF92      		push r15
 947               	.LCFI31:
 948               		.cfi_def_cfa_offset 12
 949               		.cfi_offset 15, -11
 950 0014 0F93      		push r16
 951               	.LCFI32:
 952               		.cfi_def_cfa_offset 13
 953               		.cfi_offset 16, -12
 954 0016 CF93      		push r28
 955               	.LCFI33:
 956               		.cfi_def_cfa_offset 14
 957               		.cfi_offset 28, -13
 958 0018 DF93      		push r29
 959               	.LCFI34:
 960               		.cfi_def_cfa_offset 15
 961               		.cfi_offset 29, -14
 962 001a 00D0      		rcall .
 963 001c 1F92      		push __zero_reg__
 964               	.LCFI35:
 965               		.cfi_def_cfa_offset 18
 966 001e CDB7      		in r28,__SP_L__
 967 0020 DEB7      		in r29,__SP_H__
 968               	.LCFI36:
 969               		.cfi_def_cfa_register 28
 970               	/* prologue: function */
 971               	/* frame size = 3 */
 972               	/* stack size = 16 */
 973               	.L__stack_usage = 16
 974 0022 4C01      		movw r8,r24
 975 0024 5B01      		movw r10,r22
 976 0026 3A01      		movw r6,r20
 977               	.LVL79:
 207:../../tmk_core/protocol/midi/midi.c ****   uint16_t i;
 208:../../tmk_core/protocol/midi/midi.c ****   for (i = 0; i < count; i += 3) {
 978               		.loc 1 208 0
 979 0028 E12C      		mov r14,__zero_reg__
 980 002a F12C      		mov r15,__zero_reg__
 981               	.LVL80:
 982               	.L59:
 983               		.loc 1 208 0 is_stmt 0 discriminator 1
 984 002c EA14      		cp r14,r10
 985 002e FB04      		cpc r15,r11
 986 0030 00F4      		brsh .L62
 987               	.LBB2:
 209:../../tmk_core/protocol/midi/midi.c ****     uint8_t b[3] = { 0, 0, 0 };
 988               		.loc 1 209 0 is_stmt 1 discriminator 3
 989 0032 1982      		std Y+1,__zero_reg__
 990 0034 1A82      		std Y+2,__zero_reg__
 991 0036 1B82      		std Y+3,__zero_reg__
 992               	.LVL81:
 210:../../tmk_core/protocol/midi/midi.c ****     uint16_t to_send = count - i;
 211:../../tmk_core/protocol/midi/midi.c ****     to_send = (to_send > 3) ? 3 : to_send;
 993               		.loc 1 211 0 discriminator 3
 994 0038 6501      		movw r12,r10
 995 003a CE18      		sub r12,r14
 996 003c DF08      		sbc r13,r15
 997               	.LVL82:
 998 003e 84E0      		ldi r24,4
 999 0040 C816      		cp r12,r24
 1000 0042 D104      		cpc r13,__zero_reg__
 1001 0044 00F0      		brlo .L60
 1002 0046 83E0      		ldi r24,lo8(3)
 1003 0048 C82E      		mov r12,r24
 1004 004a D12C      		mov r13,__zero_reg__
 1005               	.LVL83:
 1006               	.L60:
 1007 004c B301      		movw r22,r6
 1008 004e 6E0D      		add r22,r14
 1009 0050 7F1D      		adc r23,r15
 212:../../tmk_core/protocol/midi/midi.c ****     memcpy(b, array + i, to_send);
 1010               		.loc 1 212 0 discriminator 3
 1011 0052 A601      		movw r20,r12
 1012 0054 CE01      		movw r24,r28
 1013 0056 0196      		adiw r24,1
 1014 0058 0E94 0000 		call memcpy
 1015               	.LVL84:
 213:../../tmk_core/protocol/midi/midi.c ****     midi_send_data(device, to_send, b[0], b[1], b[2]);
 1016               		.loc 1 213 0 discriminator 3
 1017 005c 0B81      		ldd r16,Y+3
 1018 005e 2A81      		ldd r18,Y+2
 1019 0060 4981      		ldd r20,Y+1
 1020 0062 B601      		movw r22,r12
 1021 0064 C401      		movw r24,r8
 1022 0066 0E94 0000 		call midi_send_data
 1023               	.LVL85:
 1024               	.LBE2:
 208:../../tmk_core/protocol/midi/midi.c ****     uint8_t b[3] = { 0, 0, 0 };
 1025               		.loc 1 208 0 discriminator 3
 1026 006a 83E0      		ldi r24,3
 1027 006c E80E      		add r14,r24
 1028 006e F11C      		adc r15,__zero_reg__
 1029               	.LVL86:
 1030 0070 00C0      		rjmp .L59
 1031               	.LVL87:
 1032               	.L62:
 1033               	/* epilogue start */
 214:../../tmk_core/protocol/midi/midi.c ****   }
 215:../../tmk_core/protocol/midi/midi.c **** }
 1034               		.loc 1 215 0
 1035 0072 0F90      		pop __tmp_reg__
 1036 0074 0F90      		pop __tmp_reg__
 1037 0076 0F90      		pop __tmp_reg__
 1038 0078 DF91      		pop r29
 1039 007a CF91      		pop r28
 1040 007c 0F91      		pop r16
 1041 007e FF90      		pop r15
 1042 0080 EF90      		pop r14
 1043               	.LVL88:
 1044 0082 DF90      		pop r13
 1045 0084 CF90      		pop r12
 1046 0086 BF90      		pop r11
 1047 0088 AF90      		pop r10
 1048               	.LVL89:
 1049 008a 9F90      		pop r9
 1050 008c 8F90      		pop r8
 1051               	.LVL90:
 1052 008e 7F90      		pop r7
 1053 0090 6F90      		pop r6
 1054               	.LVL91:
 1055 0092 0895      		ret
 1056               		.cfi_endproc
 1057               	.LFE23:
 1059               		.section	.text.midi_register_cc_callback,"ax",@progbits
 1060               	.global	midi_register_cc_callback
 1062               	midi_register_cc_callback:
 1063               	.LFB24:
 216:../../tmk_core/protocol/midi/midi.c **** 
 217:../../tmk_core/protocol/midi/midi.c **** 
 218:../../tmk_core/protocol/midi/midi.c **** void midi_register_cc_callback(MidiDevice * device, midi_three_byte_func_t func){
 1064               		.loc 1 218 0
 1065               		.cfi_startproc
 1066               	.LVL92:
 1067               	/* prologue: function */
 1068               	/* frame size = 0 */
 1069               	/* stack size = 0 */
 1070               	.L__stack_usage = 0
 219:../../tmk_core/protocol/midi/midi.c ****    device->input_cc_callback = func;
 1071               		.loc 1 219 0
 1072 0000 FC01      		movw r30,r24
 1073 0002 7383      		std Z+3,r23
 1074 0004 6283      		std Z+2,r22
 1075 0006 0895      		ret
 1076               		.cfi_endproc
 1077               	.LFE24:
 1079               		.section	.text.midi_register_noteon_callback,"ax",@progbits
 1080               	.global	midi_register_noteon_callback
 1082               	midi_register_noteon_callback:
 1083               	.LFB25:
 220:../../tmk_core/protocol/midi/midi.c **** }
 221:../../tmk_core/protocol/midi/midi.c **** 
 222:../../tmk_core/protocol/midi/midi.c **** void midi_register_noteon_callback(MidiDevice * device, midi_three_byte_func_t func){
 1084               		.loc 1 222 0
 1085               		.cfi_startproc
 1086               	.LVL93:
 1087               	/* prologue: function */
 1088               	/* frame size = 0 */
 1089               	/* stack size = 0 */
 1090               	.L__stack_usage = 0
 223:../../tmk_core/protocol/midi/midi.c ****    device->input_noteon_callback = func;
 1091               		.loc 1 223 0
 1092 0000 FC01      		movw r30,r24
 1093 0002 7583      		std Z+5,r23
 1094 0004 6483      		std Z+4,r22
 1095 0006 0895      		ret
 1096               		.cfi_endproc
 1097               	.LFE25:
 1099               		.section	.text.midi_register_noteoff_callback,"ax",@progbits
 1100               	.global	midi_register_noteoff_callback
 1102               	midi_register_noteoff_callback:
 1103               	.LFB26:
 224:../../tmk_core/protocol/midi/midi.c **** }
 225:../../tmk_core/protocol/midi/midi.c **** 
 226:../../tmk_core/protocol/midi/midi.c **** void midi_register_noteoff_callback(MidiDevice * device, midi_three_byte_func_t func){
 1104               		.loc 1 226 0
 1105               		.cfi_startproc
 1106               	.LVL94:
 1107               	/* prologue: function */
 1108               	/* frame size = 0 */
 1109               	/* stack size = 0 */
 1110               	.L__stack_usage = 0
 227:../../tmk_core/protocol/midi/midi.c ****    device->input_noteoff_callback = func;
 1111               		.loc 1 227 0
 1112 0000 FC01      		movw r30,r24
 1113 0002 7783      		std Z+7,r23
 1114 0004 6683      		std Z+6,r22
 1115 0006 0895      		ret
 1116               		.cfi_endproc
 1117               	.LFE26:
 1119               		.section	.text.midi_register_aftertouch_callback,"ax",@progbits
 1120               	.global	midi_register_aftertouch_callback
 1122               	midi_register_aftertouch_callback:
 1123               	.LFB27:
 228:../../tmk_core/protocol/midi/midi.c **** }
 229:../../tmk_core/protocol/midi/midi.c **** 
 230:../../tmk_core/protocol/midi/midi.c **** void midi_register_aftertouch_callback(MidiDevice * device, midi_three_byte_func_t func){
 1124               		.loc 1 230 0
 1125               		.cfi_startproc
 1126               	.LVL95:
 1127               	/* prologue: function */
 1128               	/* frame size = 0 */
 1129               	/* stack size = 0 */
 1130               	.L__stack_usage = 0
 231:../../tmk_core/protocol/midi/midi.c ****    device->input_aftertouch_callback = func;
 1131               		.loc 1 231 0
 1132 0000 FC01      		movw r30,r24
 1133 0002 7187      		std Z+9,r23
 1134 0004 6087      		std Z+8,r22
 1135 0006 0895      		ret
 1136               		.cfi_endproc
 1137               	.LFE27:
 1139               		.section	.text.midi_register_pitchbend_callback,"ax",@progbits
 1140               	.global	midi_register_pitchbend_callback
 1142               	midi_register_pitchbend_callback:
 1143               	.LFB28:
 232:../../tmk_core/protocol/midi/midi.c **** }
 233:../../tmk_core/protocol/midi/midi.c **** 
 234:../../tmk_core/protocol/midi/midi.c **** void midi_register_pitchbend_callback(MidiDevice * device, midi_three_byte_func_t func){
 1144               		.loc 1 234 0
 1145               		.cfi_startproc
 1146               	.LVL96:
 1147               	/* prologue: function */
 1148               	/* frame size = 0 */
 1149               	/* stack size = 0 */
 1150               	.L__stack_usage = 0
 235:../../tmk_core/protocol/midi/midi.c ****    device->input_pitchbend_callback = func;
 1151               		.loc 1 235 0
 1152 0000 FC01      		movw r30,r24
 1153 0002 7387      		std Z+11,r23
 1154 0004 6287      		std Z+10,r22
 1155 0006 0895      		ret
 1156               		.cfi_endproc
 1157               	.LFE28:
 1159               		.section	.text.midi_register_songposition_callback,"ax",@progbits
 1160               	.global	midi_register_songposition_callback
 1162               	midi_register_songposition_callback:
 1163               	.LFB29:
 236:../../tmk_core/protocol/midi/midi.c **** }
 237:../../tmk_core/protocol/midi/midi.c **** 
 238:../../tmk_core/protocol/midi/midi.c **** void midi_register_songposition_callback(MidiDevice * device, midi_three_byte_func_t func){
 1164               		.loc 1 238 0
 1165               		.cfi_startproc
 1166               	.LVL97:
 1167               	/* prologue: function */
 1168               	/* frame size = 0 */
 1169               	/* stack size = 0 */
 1170               	.L__stack_usage = 0
 239:../../tmk_core/protocol/midi/midi.c ****    device->input_songposition_callback = func;
 1171               		.loc 1 239 0
 1172 0000 FC01      		movw r30,r24
 1173 0002 7587      		std Z+13,r23
 1174 0004 6487      		std Z+12,r22
 1175 0006 0895      		ret
 1176               		.cfi_endproc
 1177               	.LFE29:
 1179               		.section	.text.midi_register_progchange_callback,"ax",@progbits
 1180               	.global	midi_register_progchange_callback
 1182               	midi_register_progchange_callback:
 1183               	.LFB30:
 240:../../tmk_core/protocol/midi/midi.c **** }
 241:../../tmk_core/protocol/midi/midi.c **** 
 242:../../tmk_core/protocol/midi/midi.c **** void midi_register_progchange_callback(MidiDevice * device, midi_two_byte_func_t func) {
 1184               		.loc 1 242 0
 1185               		.cfi_startproc
 1186               	.LVL98:
 1187               	/* prologue: function */
 1188               	/* frame size = 0 */
 1189               	/* stack size = 0 */
 1190               	.L__stack_usage = 0
 243:../../tmk_core/protocol/midi/midi.c ****    device->input_progchange_callback = func;
 1191               		.loc 1 243 0
 1192 0000 FC01      		movw r30,r24
 1193 0002 7787      		std Z+15,r23
 1194 0004 6687      		std Z+14,r22
 1195 0006 0895      		ret
 1196               		.cfi_endproc
 1197               	.LFE30:
 1199               		.section	.text.midi_register_chanpressure_callback,"ax",@progbits
 1200               	.global	midi_register_chanpressure_callback
 1202               	midi_register_chanpressure_callback:
 1203               	.LFB31:
 244:../../tmk_core/protocol/midi/midi.c **** }
 245:../../tmk_core/protocol/midi/midi.c **** 
 246:../../tmk_core/protocol/midi/midi.c **** void midi_register_chanpressure_callback(MidiDevice * device, midi_two_byte_func_t func) {
 1204               		.loc 1 246 0
 1205               		.cfi_startproc
 1206               	.LVL99:
 1207               	/* prologue: function */
 1208               	/* frame size = 0 */
 1209               	/* stack size = 0 */
 1210               	.L__stack_usage = 0
 247:../../tmk_core/protocol/midi/midi.c ****    device->input_chanpressure_callback = func;
 1211               		.loc 1 247 0
 1212 0000 FC01      		movw r30,r24
 1213 0002 718B      		std Z+17,r23
 1214 0004 608B      		std Z+16,r22
 1215 0006 0895      		ret
 1216               		.cfi_endproc
 1217               	.LFE31:
 1219               		.section	.text.midi_register_songselect_callback,"ax",@progbits
 1220               	.global	midi_register_songselect_callback
 1222               	midi_register_songselect_callback:
 1223               	.LFB32:
 248:../../tmk_core/protocol/midi/midi.c **** }
 249:../../tmk_core/protocol/midi/midi.c **** 
 250:../../tmk_core/protocol/midi/midi.c **** void midi_register_songselect_callback(MidiDevice * device, midi_two_byte_func_t func) {
 1224               		.loc 1 250 0
 1225               		.cfi_startproc
 1226               	.LVL100:
 1227               	/* prologue: function */
 1228               	/* frame size = 0 */
 1229               	/* stack size = 0 */
 1230               	.L__stack_usage = 0
 251:../../tmk_core/protocol/midi/midi.c ****    device->input_songselect_callback = func;
 1231               		.loc 1 251 0
 1232 0000 FC01      		movw r30,r24
 1233 0002 738B      		std Z+19,r23
 1234 0004 628B      		std Z+18,r22
 1235 0006 0895      		ret
 1236               		.cfi_endproc
 1237               	.LFE32:
 1239               		.section	.text.midi_register_tc_quarterframe_callback,"ax",@progbits
 1240               	.global	midi_register_tc_quarterframe_callback
 1242               	midi_register_tc_quarterframe_callback:
 1243               	.LFB33:
 252:../../tmk_core/protocol/midi/midi.c **** }
 253:../../tmk_core/protocol/midi/midi.c **** 
 254:../../tmk_core/protocol/midi/midi.c **** void midi_register_tc_quarterframe_callback(MidiDevice * device, midi_two_byte_func_t func) {
 1244               		.loc 1 254 0
 1245               		.cfi_startproc
 1246               	.LVL101:
 1247               	/* prologue: function */
 1248               	/* frame size = 0 */
 1249               	/* stack size = 0 */
 1250               	.L__stack_usage = 0
 255:../../tmk_core/protocol/midi/midi.c ****    device->input_tc_quarterframe_callback = func;
 1251               		.loc 1 255 0
 1252 0000 FC01      		movw r30,r24
 1253 0002 758B      		std Z+21,r23
 1254 0004 648B      		std Z+20,r22
 1255 0006 0895      		ret
 1256               		.cfi_endproc
 1257               	.LFE33:
 1259               		.section	.text.midi_register_realtime_callback,"ax",@progbits
 1260               	.global	midi_register_realtime_callback
 1262               	midi_register_realtime_callback:
 1263               	.LFB34:
 256:../../tmk_core/protocol/midi/midi.c **** }
 257:../../tmk_core/protocol/midi/midi.c **** 
 258:../../tmk_core/protocol/midi/midi.c **** void midi_register_realtime_callback(MidiDevice * device, midi_one_byte_func_t func){
 1264               		.loc 1 258 0
 1265               		.cfi_startproc
 1266               	.LVL102:
 1267               	/* prologue: function */
 1268               	/* frame size = 0 */
 1269               	/* stack size = 0 */
 1270               	.L__stack_usage = 0
 259:../../tmk_core/protocol/midi/midi.c ****    device->input_realtime_callback = func;
 1271               		.loc 1 259 0
 1272 0000 FC01      		movw r30,r24
 1273 0002 778B      		std Z+23,r23
 1274 0004 668B      		std Z+22,r22
 1275 0006 0895      		ret
 1276               		.cfi_endproc
 1277               	.LFE34:
 1279               		.section	.text.midi_register_tunerequest_callback,"ax",@progbits
 1280               	.global	midi_register_tunerequest_callback
 1282               	midi_register_tunerequest_callback:
 1283               	.LFB35:
 260:../../tmk_core/protocol/midi/midi.c **** }
 261:../../tmk_core/protocol/midi/midi.c **** 
 262:../../tmk_core/protocol/midi/midi.c **** void midi_register_tunerequest_callback(MidiDevice * device, midi_one_byte_func_t func){
 1284               		.loc 1 262 0
 1285               		.cfi_startproc
 1286               	.LVL103:
 1287               	/* prologue: function */
 1288               	/* frame size = 0 */
 1289               	/* stack size = 0 */
 1290               	.L__stack_usage = 0
 263:../../tmk_core/protocol/midi/midi.c ****    device->input_tunerequest_callback = func;
 1291               		.loc 1 263 0
 1292 0000 FC01      		movw r30,r24
 1293 0002 718F      		std Z+25,r23
 1294 0004 608F      		std Z+24,r22
 1295 0006 0895      		ret
 1296               		.cfi_endproc
 1297               	.LFE35:
 1299               		.section	.text.midi_register_sysex_callback,"ax",@progbits
 1300               	.global	midi_register_sysex_callback
 1302               	midi_register_sysex_callback:
 1303               	.LFB36:
 264:../../tmk_core/protocol/midi/midi.c **** }
 265:../../tmk_core/protocol/midi/midi.c **** 
 266:../../tmk_core/protocol/midi/midi.c **** void midi_register_sysex_callback(MidiDevice * device, midi_sysex_func_t func) {
 1304               		.loc 1 266 0
 1305               		.cfi_startproc
 1306               	.LVL104:
 1307               	/* prologue: function */
 1308               	/* frame size = 0 */
 1309               	/* stack size = 0 */
 1310               	.L__stack_usage = 0
 267:../../tmk_core/protocol/midi/midi.c ****    device->input_sysex_callback = func;
 1311               		.loc 1 267 0
 1312 0000 FC01      		movw r30,r24
 1313 0002 738F      		std Z+27,r23
 1314 0004 628F      		std Z+26,r22
 1315 0006 0895      		ret
 1316               		.cfi_endproc
 1317               	.LFE36:
 1319               		.section	.text.midi_register_fallthrough_callback,"ax",@progbits
 1320               	.global	midi_register_fallthrough_callback
 1322               	midi_register_fallthrough_callback:
 1323               	.LFB37:
 268:../../tmk_core/protocol/midi/midi.c **** }
 269:../../tmk_core/protocol/midi/midi.c **** 
 270:../../tmk_core/protocol/midi/midi.c **** void midi_register_fallthrough_callback(MidiDevice * device, midi_var_byte_func_t func){
 1324               		.loc 1 270 0
 1325               		.cfi_startproc
 1326               	.LVL105:
 1327               	/* prologue: function */
 1328               	/* frame size = 0 */
 1329               	/* stack size = 0 */
 1330               	.L__stack_usage = 0
 271:../../tmk_core/protocol/midi/midi.c ****    device->input_fallthrough_callback = func;
 1331               		.loc 1 271 0
 1332 0000 FC01      		movw r30,r24
 1333 0002 758F      		std Z+29,r23
 1334 0004 648F      		std Z+28,r22
 1335 0006 0895      		ret
 1336               		.cfi_endproc
 1337               	.LFE37:
 1339               		.section	.text.midi_register_catchall_callback,"ax",@progbits
 1340               	.global	midi_register_catchall_callback
 1342               	midi_register_catchall_callback:
 1343               	.LFB38:
 272:../../tmk_core/protocol/midi/midi.c **** }
 273:../../tmk_core/protocol/midi/midi.c **** 
 274:../../tmk_core/protocol/midi/midi.c **** void midi_register_catchall_callback(MidiDevice * device, midi_var_byte_func_t func){
 1344               		.loc 1 274 0
 1345               		.cfi_startproc
 1346               	.LVL106:
 1347               	/* prologue: function */
 1348               	/* frame size = 0 */
 1349               	/* stack size = 0 */
 1350               	.L__stack_usage = 0
 275:../../tmk_core/protocol/midi/midi.c ****    device->input_catchall_callback = func;
 1351               		.loc 1 275 0
 1352 0000 FC01      		movw r30,r24
 1353 0002 778F      		std Z+31,r23
 1354 0004 668F      		std Z+30,r22
 1355 0006 0895      		ret
 1356               		.cfi_endproc
 1357               	.LFE38:
 1359               		.section	.rodata.CSWTCH.11,"a",@progbits
 1362               	CSWTCH.11:
 1363 0000 02        		.byte	2
 1364 0001 03        		.byte	3
 1365 0002 02        		.byte	2
 1366 0003 00        		.byte	0
 1367 0004 00        		.byte	0
 1368 0005 01        		.byte	1
 1369 0006 00        		.byte	0
 1370 0007 01        		.byte	1
 1371 0008 01        		.byte	1
 1372 0009 01        		.byte	1
 1373 000a 01        		.byte	1
 1374 000b 01        		.byte	1
 1375 000c 00        		.byte	0
 1376 000d 01        		.byte	1
 1377 000e 01        		.byte	1
 1378               		.text
 1379               	.Letext0:
 1380               		.file 2 "/usr/local/Cellar/avr-gcc/4.9.3/avr/include/stdint.h"
 1381               		.file 3 "../../tmk_core/protocol/midi/midi_function_types.h"
 1382               		.file 4 "../../tmk_core/protocol/midi/midi_device.h"
 1383               		.file 5 "../../tmk_core/protocol/midi/bytequeue/bytequeue.h"
 1384               		.file 6 "../../tmk_core/protocol/midi/midi.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 midi.c
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:4      *ABS*:000000000000003f __SREG__
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:13     .text.midi_is_statusbyte:0000000000000000 midi_is_statusbyte
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:35     .text.midi_is_realtime:0000000000000000 midi_is_realtime
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:60     .text.midi_packet_length:0000000000000000 midi_packet_length
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:1362   .rodata.CSWTCH.11:0000000000000000 CSWTCH.11
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:129    .text.midi_send_cc:0000000000000000 midi_send_cc
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:170    .text.midi_send_noteon:0000000000000000 midi_send_noteon
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:211    .text.midi_send_noteoff:0000000000000000 midi_send_noteoff
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:252    .text.midi_send_aftertouch:0000000000000000 midi_send_aftertouch
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:293    .text.midi_send_pitchbend:0000000000000000 midi_send_pitchbend
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:370    .text.midi_send_programchange:0000000000000000 midi_send_programchange
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:409    .text.midi_send_channelpressure:0000000000000000 midi_send_channelpressure
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:448    .text.midi_send_clock:0000000000000000 midi_send_clock
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:482    .text.midi_send_tick:0000000000000000 midi_send_tick
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:516    .text.midi_send_start:0000000000000000 midi_send_start
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:550    .text.midi_send_continue:0000000000000000 midi_send_continue
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:584    .text.midi_send_stop:0000000000000000 midi_send_stop
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:618    .text.midi_send_activesense:0000000000000000 midi_send_activesense
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:652    .text.midi_send_reset:0000000000000000 midi_send_reset
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:686    .text.midi_send_tcquarterframe:0000000000000000 midi_send_tcquarterframe
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:722    .text.midi_send_songposition:0000000000000000 midi_send_songposition
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:770    .text.midi_send_songselect:0000000000000000 midi_send_songselect
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:806    .text.midi_send_tunerequest:0000000000000000 midi_send_tunerequest
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:840    .text.midi_send_byte:0000000000000000 midi_send_byte
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:875    .text.midi_send_data:0000000000000000 midi_send_data
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:905    .text.midi_send_array:0000000000000000 midi_send_array
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:1062   .text.midi_register_cc_callback:0000000000000000 midi_register_cc_callback
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:1082   .text.midi_register_noteon_callback:0000000000000000 midi_register_noteon_callback
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:1102   .text.midi_register_noteoff_callback:0000000000000000 midi_register_noteoff_callback
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:1122   .text.midi_register_aftertouch_callback:0000000000000000 midi_register_aftertouch_callback
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:1142   .text.midi_register_pitchbend_callback:0000000000000000 midi_register_pitchbend_callback
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:1162   .text.midi_register_songposition_callback:0000000000000000 midi_register_songposition_callback
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:1182   .text.midi_register_progchange_callback:0000000000000000 midi_register_progchange_callback
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:1202   .text.midi_register_chanpressure_callback:0000000000000000 midi_register_chanpressure_callback
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:1222   .text.midi_register_songselect_callback:0000000000000000 midi_register_songselect_callback
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:1242   .text.midi_register_tc_quarterframe_callback:0000000000000000 midi_register_tc_quarterframe_callback
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:1262   .text.midi_register_realtime_callback:0000000000000000 midi_register_realtime_callback
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:1282   .text.midi_register_tunerequest_callback:0000000000000000 midi_register_tunerequest_callback
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:1302   .text.midi_register_sysex_callback:0000000000000000 midi_register_sysex_callback
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:1322   .text.midi_register_fallthrough_callback:0000000000000000 midi_register_fallthrough_callback
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccDekykM.s:1342   .text.midi_register_catchall_callback:0000000000000000 midi_register_catchall_callback

UNDEFINED SYMBOLS
memcpy
__do_copy_data
