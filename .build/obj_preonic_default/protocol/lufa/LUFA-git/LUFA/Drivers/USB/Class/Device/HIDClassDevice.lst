   1               		.file	"HIDClassDevice.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.HID_Device_ProcessControlRequest,"ax",@progbits
  11               	.global	HID_Device_ProcessControlRequest
  13               	HID_Device_ProcessControlRequest:
  14               	.LFB100:
  15               		.file 1 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c"
   1:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** /*
   2:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c ****              LUFA Library
   3:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c ****      Copyright (C) Dean Camera, 2014.
   4:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
   5:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c ****   dean [at] fourwalledcubicle [dot] com
   6:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c ****            www.lufa-lib.org
   7:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** */
   8:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
   9:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** /*
  10:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
  12:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c ****   Permission to use, copy, modify, distribute, and sell this
  13:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c ****   software and its documentation for any purpose is hereby granted
  14:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c ****   without fee, provided that the above copyright notice appear in
  15:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c ****   all copies and that both that the copyright notice and this
  16:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c ****   permission notice and warranty disclaimer appear in supporting
  17:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c ****   documentation, and that the name of the author not be used in
  18:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c ****   advertising or publicity pertaining to distribution of the
  19:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c ****   software without specific, written prior permission.
  20:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
  21:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c ****   The author disclaims all warranties with regard to this
  22:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c ****   software, including all implied warranties of merchantability
  23:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c ****   and fitness.  In no event shall the author be liable for any
  24:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c ****   special, indirect or consequential damages or any damages
  25:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c ****   in an action of contract, negligence or other tortious action,
  27:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c ****   arising out of or in connection with the use or performance of
  28:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c ****   this software.
  29:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** */
  30:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
  31:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** #define  __INCLUDE_FROM_USB_DRIVER
  32:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** #include "../../Core/USBMode.h"
  33:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
  34:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** #if defined(USB_CAN_BE_DEVICE)
  35:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
  36:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** #define  __INCLUDE_FROM_HID_DRIVER
  37:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** #define  __INCLUDE_FROM_HID_DEVICE_C
  38:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** #include "HIDClassDevice.h"
  39:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
  40:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** void HID_Device_ProcessControlRequest(USB_ClassInfo_HID_Device_t* const HIDInterfaceInfo)
  41:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** {
  16               		.loc 1 41 0
  17               		.cfi_startproc
  18               	.LVL0:
  19 0000 6F92      		push r6
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 6, -2
  23 0002 7F92      		push r7
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 7, -3
  27 0004 8F92      		push r8
  28               	.LCFI2:
  29               		.cfi_def_cfa_offset 5
  30               		.cfi_offset 8, -4
  31 0006 9F92      		push r9
  32               	.LCFI3:
  33               		.cfi_def_cfa_offset 6
  34               		.cfi_offset 9, -5
  35 0008 AF92      		push r10
  36               	.LCFI4:
  37               		.cfi_def_cfa_offset 7
  38               		.cfi_offset 10, -6
  39 000a BF92      		push r11
  40               	.LCFI5:
  41               		.cfi_def_cfa_offset 8
  42               		.cfi_offset 11, -7
  43 000c CF92      		push r12
  44               	.LCFI6:
  45               		.cfi_def_cfa_offset 9
  46               		.cfi_offset 12, -8
  47 000e DF92      		push r13
  48               	.LCFI7:
  49               		.cfi_def_cfa_offset 10
  50               		.cfi_offset 13, -9
  51 0010 EF92      		push r14
  52               	.LCFI8:
  53               		.cfi_def_cfa_offset 11
  54               		.cfi_offset 14, -10
  55 0012 FF92      		push r15
  56               	.LCFI9:
  57               		.cfi_def_cfa_offset 12
  58               		.cfi_offset 15, -11
  59 0014 0F93      		push r16
  60               	.LCFI10:
  61               		.cfi_def_cfa_offset 13
  62               		.cfi_offset 16, -12
  63 0016 1F93      		push r17
  64               	.LCFI11:
  65               		.cfi_def_cfa_offset 14
  66               		.cfi_offset 17, -13
  67 0018 CF93      		push r28
  68               	.LCFI12:
  69               		.cfi_def_cfa_offset 15
  70               		.cfi_offset 28, -14
  71 001a DF93      		push r29
  72               	.LCFI13:
  73               		.cfi_def_cfa_offset 16
  74               		.cfi_offset 29, -15
  75 001c 00D0      		rcall .
  76 001e 1F92      		push __zero_reg__
  77               	.LCFI14:
  78               		.cfi_def_cfa_offset 19
  79 0020 CDB7      		in r28,__SP_L__
  80 0022 DEB7      		in r29,__SP_H__
  81               	.LCFI15:
  82               		.cfi_def_cfa_register 28
  83               	/* prologue: function */
  84               	/* frame size = 3 */
  85               	/* stack size = 17 */
  86               	.L__stack_usage = 17
  87 0024 7C01      		movw r14,r24
  42:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	if (!(Endpoint_IsSETUPReceived()))
  43:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	  return;
  44:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
  45:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	if (USB_ControlRequest.wIndex != HIDInterfaceInfo->Config.InterfaceNumber)
  46:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	  return;
  47:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
  48:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	switch (USB_ControlRequest.bRequest)
  49:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	{
  50:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		case HID_REQ_GetReport:
  51:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE)
  52:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			{
  53:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				uint16_t ReportSize = 0;
  54:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				uint8_t  ReportID   = (USB_ControlRequest.wValue & 0xFF);
  55:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				uint8_t  ReportType = (USB_ControlRequest.wValue >> 8) - 1;
  56:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				uint8_t  ReportData[HIDInterfaceInfo->Config.PrevReportINBufferSize];
  57:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
  58:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				memset(ReportData, 0, sizeof(ReportData));
  59:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
  60:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				CALLBACK_HID_Device_CreateHIDReport(HIDInterfaceInfo, &ReportID, ReportType, ReportData, &Repor
  61:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
  62:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				if (HIDInterfaceInfo->Config.PrevReportINBuffer != NULL)
  63:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				{
  64:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 					memcpy(HIDInterfaceInfo->Config.PrevReportINBuffer, ReportData,
  65:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 					       HIDInterfaceInfo->Config.PrevReportINBufferSize);
  66:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				}
  67:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
  68:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				Endpoint_SelectEndpoint(ENDPOINT_CONTROLEP);
  69:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
  70:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				Endpoint_ClearSETUP();
  71:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
  72:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				if (ReportID)
  73:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				  Endpoint_Write_8(ReportID);
  74:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
  75:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				Endpoint_Write_Control_Stream_LE(ReportData, ReportSize);
  76:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				Endpoint_ClearOUT();
  77:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			}
  78:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
  79:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			break;
  80:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		case HID_REQ_SetReport:
  81:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE)
  82:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			{
  83:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				uint16_t ReportSize = USB_ControlRequest.wLength;
  84:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				uint8_t  ReportID   = (USB_ControlRequest.wValue & 0xFF);
  85:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				uint8_t  ReportType = (USB_ControlRequest.wValue >> 8) - 1;
  86:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				uint8_t  ReportData[ReportSize];
  87:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
  88:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				Endpoint_ClearSETUP();
  89:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				Endpoint_Read_Control_Stream_LE(ReportData, ReportSize);
  90:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				Endpoint_ClearIN();
  91:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
  92:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				CALLBACK_HID_Device_ProcessHIDReport(HIDInterfaceInfo, ReportID, ReportType,
  93:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				                                     &ReportData[ReportID ? 1 : 0], ReportSize - (ReportID ? 1 
  94:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			}
  95:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
  96:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			break;
  97:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		case HID_REQ_GetProtocol:
  98:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE)
  99:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			{
 100:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				Endpoint_ClearSETUP();
 101:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				while (!(Endpoint_IsINReady()));
 102:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				Endpoint_Write_8(HIDInterfaceInfo->State.UsingReportProtocol);
 103:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				Endpoint_ClearIN();
 104:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				Endpoint_ClearStatusStage();
 105:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			}
 106:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 107:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			break;
 108:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		case HID_REQ_SetProtocol:
 109:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE)
 110:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			{
 111:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				Endpoint_ClearSETUP();
 112:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				Endpoint_ClearStatusStage();
 113:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 114:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				HIDInterfaceInfo->State.UsingReportProtocol = ((USB_ControlRequest.wValue & 0xFF) != 0x00);
 115:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			}
 116:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 117:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			break;
 118:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		case HID_REQ_SetIdle:
 119:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE)
 120:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			{
 121:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				Endpoint_ClearSETUP();
 122:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				Endpoint_ClearStatusStage();
 123:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 124:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				HIDInterfaceInfo->State.IdleCount = ((USB_ControlRequest.wValue & 0xFF00) >> 6);
 125:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			}
 126:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 127:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			break;
 128:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		case HID_REQ_GetIdle:
 129:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE)
 130:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			{
 131:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				Endpoint_ClearSETUP();
 132:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				while (!(Endpoint_IsINReady()));
 133:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				Endpoint_Write_8(HIDInterfaceInfo->State.IdleCount >> 2);
 134:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				Endpoint_ClearIN();
 135:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				Endpoint_ClearStatusStage();
 136:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			}
 137:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 138:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			break;
 139:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	}
 140:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** }
  88               		.loc 1 140 0
  89 0026 CDB6      		in r12,__SP_L__
  90 0028 DEB6      		in r13,__SP_H__
  91               	.LBB53:
  92               	.LBB54:
  93               		.file 2 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AV
   1:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
   2:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****              LUFA Library
   3:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   5:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****            www.lufa-lib.org
   7:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
   8:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   9:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
  10:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  12:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   all copies and that both that the copyright notice and this
  16:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   documentation, and that the name of the author not be used in
  18:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software without specific, written prior permission.
  20:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  21:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   The author disclaims all warranties with regard to this
  22:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software, including all implied warranties of merchantability
  23:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   special, indirect or consequential damages or any damages
  25:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   arising out of or in connection with the use or performance of
  28:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   this software.
  29:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
  30:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  31:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \file
  32:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief USB Endpoint definitions for the AVR8 microcontrollers.
  33:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \copydetails Group_EndpointManagement_AVR8
  34:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  35:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  38:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  39:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointRW
  40:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointRW_AVR8 Endpoint Data Reading and Writing (AVR8)
  41:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR8 architecture.
  42:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  43:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  44:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  45:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  46:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPrimitiveRW_AVR8 Read/Write of Primitive Data Types (AVR8)
  48:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR8 architecture.
  49:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  50:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  from and to endpoints.
  52:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  53:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  54:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPacketManagement
  55:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPacketManagement_AVR8 Endpoint Packet Management (AVR8)
  56:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR8 architecture.
  57:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  58:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  60:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  61:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointManagement
  62:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointManagement_AVR8 Endpoint Management (AVR8)
  63:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint management definitions for the Atmel AVR8 architecture.
  64:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  65:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  send/receive functions for various data types.
  68:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  69:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  @{
  70:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  71:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  72:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** #ifndef __ENDPOINT_AVR8_H__
  73:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** #define __ENDPOINT_AVR8_H__
  74:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  75:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Includes: */
  76:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../../../../Common/Common.h"
  77:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBTask.h"
  78:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBInterrupt.h"
  79:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  80:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  81:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if defined(__cplusplus)
  82:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			extern "C" {
  83:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  84:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  85:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Preprocessor Checks: */
  86:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  87:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  88:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  89:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  90:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Private Interface - For use in library only: */
  91:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#if !defined(__DOXYGEN__)
  92:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
  93:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
  94:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                                                       ATTR_ALWAYS_INLINE;
  95:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
  96:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
  97:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
  98:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
  99:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 100:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 101:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 102:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 103:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 104:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 105:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 106:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 107:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 108:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 109:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Function Prototypes: */
 110:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			void Endpoint_ClearEndpoints(void);
 111:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 112:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG0XData,
 113:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG1XData);
 114:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 115:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#endif
 116:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 117:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 118:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
 119:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 120:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 121:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 122:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 123:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 124:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 125:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 126:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 127:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defi
 128:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					/** Total number of endpoints (including the default control endpoint at address 0) which may
 129:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 130:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 131:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 */
 132:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        7
 133:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 134:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        5
 135:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 136:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 137:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 138:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 139:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 140:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Enums: */
 141:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 142:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 143:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 144:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 145:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 146:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 147:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 148:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 149:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   transfer by the host or device.
 150:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 151:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 152:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   waiting for the endpoint to become ready.
 153:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 154:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 155:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   no USB endpoint traffic can occur until th
 156:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   has resumed.
 157:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 158:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 159:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   within the software timeout period set by 
 160:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 161:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 162:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			};
 163:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 164:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 165:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Configures the specified endpoint address with the given endpoint type, bank size and number
 166:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  banks. Once configured, the endpoint may be read from or written to, depending on its direct
 167:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 168:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address    Endpoint address to configure.
 169:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 170:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 171:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 172:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 173:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 174:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 175:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 176:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        that the endpoint can handle.
 177:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 178:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured.
 179:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 180:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \attention When the \c ORDERED_EP_CONFIG compile time option is used, Endpoints <b>must</b> 
 181:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *             ascending order, or bank corruption will occur.
 182:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 183:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Different endpoints may have different maximum packet sizes based on the endpoint's in
 184:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        refer to the chosen microcontroller model's datasheet to determine the maximum bank si
 185:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 186:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 187:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 188:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        it is automatically configured by the library internally.
 189:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 190:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 191:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 192:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        which failed to reconfigure correctly will be selected.
 193:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 194:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 195:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 196:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 197:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 198:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 199:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 200:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 201:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 202:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 203:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks)
 204:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 205:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t Number = (Address & ENDPOINT_EPNUM_MASK);
 206:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 207:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				if (Number >= ENDPOINT_TOTAL_ENDPOINTS)
 208:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 209:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 210:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number,
 211:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 212:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((1 << ALLOC) | ((Banks > 1) ? (1 << EPBK0) : 0) | Endpoi
 213:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 214:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 215:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 216:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 217:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 218:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 219:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 220:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 221:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 222:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 223:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 224:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if (defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 225:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCX;
 226:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_4_AVR)
 227:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 228:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_2_AVR)
 229:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 230:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 231:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 232:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 233:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines the currently selected endpoint's direction.
 234:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 235:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
 236:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 237:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_IN
 238:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void)
 239:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 240:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
 241:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 242:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 243:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 244:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint so that it can be restored after another endpoint has been
 245:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  manipulated.
 246:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 247:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Index of the currently selected endpoint.
 248:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 249:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 250:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 251:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 252:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 253:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ((UENUM & ENDPOINT_EPNUM_MASK) | Endpoint_GetEndpointDirection());
 254:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 255:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ENDPOINT_CONTROLEP;
 256:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 257:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 258:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 259:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Selects the given endpoint address.
 260:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 261:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  Any endpoint operations which do not require the endpoint address to be indicated will opera
 262:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint.
 263:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 264:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address Endpoint address to select.
 265:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 266:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 267:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
 268:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 269:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 270:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 271:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 272:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 273:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 274:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 275:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  data In and Out pointers to the bank's contents.
 276:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 277:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Endpoint address whose FIFO buffers are to be reset.
 278:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 279:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 280:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address)
 281:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 282:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = (1 << (Address & ENDPOINT_EPNUM_MASK));
 283:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = 0;
 284:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 285:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 286:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 287:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and from a host.
 288:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 289:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 290:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 291:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
 292:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void)
 293:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 294:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << EPEN);
 295:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 296:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 297:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 298:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  to and from a host.
 299:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 300:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 301:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void)
 302:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 303:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX &= ~(1 << EPEN);
 304:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 305:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 306:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 307:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 308:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
 309:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 310:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 311:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void)
 312:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 313:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 314:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 315:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 316:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the number of busy banks in the currently selected endpoint, which have been queue
 317:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  transmission via the \ref Endpoint_ClearIN() command, or are awaiting acknowledgment via the
 318:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ref Endpoint_ClearOUT() command.
 319:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 320:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 321:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 322:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of busy banks in the selected endpoint.
 323:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 324:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 325:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void)
 326:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 327:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UESTA0X & (0x03 << NBUSYBK0));
 328:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 329:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 330:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Aborts all pending IN transactions on the currently selected endpoint, once the bank
 331:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  has been queued for transmission to the host via \ref Endpoint_ClearIN(). This function
 332:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  will terminate all queued transactions, resetting the endpoint banks ready for a new
 333:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  packet.
 334:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 335:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 336:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 337:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_AbortPendingIN(void)
 338:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 339:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (Endpoint_GetBusyBanks() != 0)
 340:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 341:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX |= (1 << RXOUTI);
 342:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					while (UEINTX & (1 << RXOUTI));
 343:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 344:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 345:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 346:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 347:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 348:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 349:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 350:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction and the endpoint bank is full.
 351:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 352:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 353:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 354:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint may be read from or written to, d
 355:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *          on its direction.
 356:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 357:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 358:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 359:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 360:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 361:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 362:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 363:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is configured.
 364:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 365:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint has been configured, \c false oth
 366:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 367:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 368:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void)
 369:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 370:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 371:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 372:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 373:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 374:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 375:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  masking the return value against <tt>(1 << <i>{Endpoint Number}</i>)</tt>.
 376:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 377:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 378:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 379:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 380:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 381:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 382:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEINT;
 383:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 384:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 385:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 386:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoints).
 387:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 388:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Address of the endpoint whose interrupt flag should be tested.
 389:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 390:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the specified endpoint has interrupted, \c false otherwise.
 391:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 392:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address) ATTR_WARN_UNUSED_RESUL
 393:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address)
 394:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 395:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((Endpoint_GetEndpointInterrupts() & (1 << (Address & ENDPOINT_EPNUM_MASK))) ? true : fa
 396:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 397:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 398:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected IN endpoint is ready for a new packet to be sent to the host.
 399:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 400:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 401:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 402:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwis
 403:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 404:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 405:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void)
 406:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 407:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 408:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 409:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 410:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected OUT endpoint has received new packet from the host.
 411:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 412:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 413:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 414:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwis
 415:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 416:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 417:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 418:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 419:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 420:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 421:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 422:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 423:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 424:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 425:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 426:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false other
 427:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 428:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 429:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 430:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 431:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
  94               		.loc 2 431 0
  95 002a 8091 E800 		lds r24,232
  96               	.LVL1:
  97               	.LBE54:
  98               	.LBE53:
  42:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	if (!(Endpoint_IsSETUPReceived()))
  99               		.loc 1 42 0
 100 002e 83FF      		sbrs r24,3
 101 0030 00C0      		rjmp .L1
  45:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	  return;
 102               		.loc 1 45 0
 103 0032 F701      		movw r30,r14
 104 0034 8081      		ld r24,Z
 105 0036 90E0      		ldi r25,0
 106 0038 2091 0000 		lds r18,USB_ControlRequest+4
 107 003c 3091 0000 		lds r19,USB_ControlRequest+4+1
 108 0040 2817      		cp r18,r24
 109 0042 3907      		cpc r19,r25
 110 0044 01F0      		breq .+2
 111 0046 00C0      		rjmp .L1
  48:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	{
 112               		.loc 1 48 0
 113 0048 8091 0000 		lds r24,USB_ControlRequest+1
 114 004c 8330      		cpi r24,lo8(3)
 115 004e 01F4      		brne .+2
 116 0050 00C0      		rjmp .L3
 117 0052 00F4      		brsh .L4
 118 0054 8130      		cpi r24,lo8(1)
 119 0056 01F0      		breq .L5
 120 0058 8230      		cpi r24,lo8(2)
 121 005a 01F4      		brne .+2
 122 005c 00C0      		rjmp .L6
 123 005e 00C0      		rjmp .L1
 124               	.L4:
 125 0060 8A30      		cpi r24,lo8(10)
 126 0062 01F4      		brne .+2
 127 0064 00C0      		rjmp .L7
 128 0066 8B30      		cpi r24,lo8(11)
 129 0068 01F4      		brne .+2
 130 006a 00C0      		rjmp .L8
 131 006c 8930      		cpi r24,lo8(9)
 132 006e 01F0      		breq .+2
 133 0070 00C0      		rjmp .L1
 134 0072 00C0      		rjmp .L31
 135               	.L5:
  51:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			{
 136               		.loc 1 51 0
 137 0074 8091 0000 		lds r24,USB_ControlRequest
 138 0078 813A      		cpi r24,lo8(-95)
 139 007a 01F0      		breq .+2
 140 007c 00C0      		rjmp .L1
 141               	.LBB55:
 142 007e 8DB6      		in r8,__SP_L__
 143 0080 9EB6      		in r9,__SP_H__
  53:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				uint8_t  ReportID   = (USB_ControlRequest.wValue & 0xFF);
 144               		.loc 1 53 0
 145 0082 1A82      		std Y+2,__zero_reg__
 146 0084 1982      		std Y+1,__zero_reg__
  54:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				uint8_t  ReportType = (USB_ControlRequest.wValue >> 8) - 1;
 147               		.loc 1 54 0
 148 0086 8091 0000 		lds r24,USB_ControlRequest+2
 149 008a 1091 0000 		lds r17,USB_ControlRequest+3
 150 008e 8B83      		std Y+3,r24
 151               	.LVL2:
  56:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 152               		.loc 1 56 0
 153 0090 F701      		movw r30,r14
 154 0092 8085      		ldd r24,Z+8
 155 0094 482F      		mov r20,r24
 156 0096 50E0      		ldi r21,0
 157 0098 8DB7      		in r24,__SP_L__
 158 009a 9EB7      		in r25,__SP_H__
 159 009c 841B      		sub r24,r20
 160 009e 950B      		sbc r25,r21
 161 00a0 0FB6      		in __tmp_reg__,__SREG__
 162 00a2 F894      		cli
 163 00a4 9EBF      		out __SP_H__,r25
 164 00a6 0FBE      		out __SREG__,__tmp_reg__
 165 00a8 8DBF      		out __SP_L__,r24
 166 00aa EDB7      		in r30,__SP_L__
 167 00ac FEB7      		in r31,__SP_H__
 168 00ae 3196      		adiw r30,1
 169 00b0 5F01      		movw r10,r30
 170               	.LVL3:
  58:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 171               		.loc 1 58 0
 172 00b2 60E0      		ldi r22,0
 173 00b4 70E0      		ldi r23,0
 174 00b6 CF01      		movw r24,r30
 175 00b8 0E94 0000 		call memset
 176               	.LVL4:
  55:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				uint8_t  ReportData[HIDInterfaceInfo->Config.PrevReportINBufferSize];
 177               		.loc 1 55 0
 178 00bc 4FEF      		ldi r20,lo8(-1)
 179 00be 410F      		add r20,r17
 180               	.LVL5:
  60:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 181               		.loc 1 60 0
 182 00c0 8E01      		movw r16,r28
 183 00c2 0F5F      		subi r16,-1
 184 00c4 1F4F      		sbci r17,-1
 185 00c6 9501      		movw r18,r10
 186 00c8 BE01      		movw r22,r28
 187 00ca 6D5F      		subi r22,-3
 188 00cc 7F4F      		sbci r23,-1
 189 00ce C701      		movw r24,r14
 190 00d0 0E94 0000 		call CALLBACK_HID_Device_CreateHIDReport
 191               	.LVL6:
  62:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				{
 192               		.loc 1 62 0
 193 00d4 F701      		movw r30,r14
 194 00d6 8681      		ldd r24,Z+6
 195 00d8 9781      		ldd r25,Z+7
 196 00da 0097      		sbiw r24,0
 197 00dc 01F0      		breq .L10
  64:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 					       HIDInterfaceInfo->Config.PrevReportINBufferSize);
 198               		.loc 1 64 0
 199 00de 4085      		ldd r20,Z+8
 200 00e0 50E0      		ldi r21,0
 201 00e2 B501      		movw r22,r10
 202 00e4 0E94 0000 		call memcpy
 203               	.LVL7:
 204               	.L10:
 205               	.LBB56:
 206               	.LBB57:
 270:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 207               		.loc 2 270 0
 208 00e8 1092 E900 		sts 233,__zero_reg__
 209               	.LBE57:
 210               	.LBE56:
 211               	.LBB58:
 212               	.LBB59:
 432:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 433:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 434:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 435:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint for the next packet.
 436:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 437:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 438:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 439:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This is not applicable for non CONTROL type endpoints.
 440:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 441:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 442:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void)
 443:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 444:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 213               		.loc 2 444 0
 214 00ec 8091 E800 		lds r24,232
 215 00f0 877F      		andi r24,lo8(-9)
 216 00f2 8093 E800 		sts 232,r24
 217               	.LBE59:
 218               	.LBE58:
  72:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				  Endpoint_Write_8(ReportID);
 219               		.loc 1 72 0
 220 00f6 8B81      		ldd r24,Y+3
 221 00f8 8111      		cpse r24,__zero_reg__
 222               	.LVL8:
 223               	.LBB60:
 224               	.LBB61:
 445:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 446:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 447:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 448:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 449:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 450:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 451:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 452:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 453:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void)
 454:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 455:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 456:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 457:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 458:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << TXINI);
 459:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 460:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 461:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 462:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 463:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 464:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 465:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 466:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 467:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 468:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void)
 469:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 470:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 471:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 472:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 473:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << RXOUTI);
 474:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 475:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 476:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 477:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Stalls the current endpoint, indicating to the host that a logical problem occurred with the
 478:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  indicated endpoint and that the current transfer sequence should be aborted. This provides a
 479:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  way for devices to indicate invalid commands to the host so that the current transfer can be
 480:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  aborted and the host can begin its own recovery sequence.
 481:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 482:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  The currently selected endpoint remains stalled until either the \ref Endpoint_ClearStall() 
 483:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is called, or the host issues a CLEAR FEATURE request to the device for the currently select
 484:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint.
 485:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 486:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 487:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 488:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
 489:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void)
 490:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 491:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQ);
 492:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 493:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 494:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears the STALL condition on the currently selected endpoint.
 495:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 496:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 497:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 498:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void) ATTR_ALWAYS_INLINE;
 499:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void)
 500:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 501:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQC);
 502:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 503:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 504:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is stalled, \c false otherwise.
 505:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 506:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 507:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 508:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint is stalled, \c false otherwise.
 509:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 510:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 511:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void)
 512:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 513:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << STALLRQ)) ? true : false);
 514:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 515:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 516:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the data toggle of the currently selected endpoint. */
 517:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void) ATTR_ALWAYS_INLINE;
 518:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void)
 519:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 520:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << RSTDT);
 521:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 522:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 523:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sets the direction of the currently selected endpoint.
 524:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 525:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] DirectionMask  New endpoint direction, as a \c ENDPOINT_DIR_* mask.
 526:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 527:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask) ATTR_ALWAYS_INLINE
 528:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask)
 529:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 530:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECFG0X = ((UECFG0X & ~(1 << EPDIR)) | (DirectionMask ? (1 << EPDIR) : 0));
 531:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 532:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 533:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Reads one byte from the currently selected endpoint's bank, for OUT direction endpoints.
 534:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 535:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 536:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 537:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Next byte in the currently selected endpoint's FIFO buffer.
 538:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 539:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 540:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void)
 541:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 542:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEDATX;
 543:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 544:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 545:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Writes one byte to the currently selected endpoint's bank, for IN direction endpoints.
 546:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 547:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 548:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 549:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Data  Data to write into the the currently selected endpoint's FIFO buffer.
 550:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 551:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data) ATTR_ALWAYS_INLINE;
 552:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data)
 553:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 554:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
 225               		.loc 2 554 0
 226 00fa 8093 F100 		sts 241,r24
 227               	.LVL9:
 228               	.L11:
 229               	.LBE61:
 230               	.LBE60:
  75:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				Endpoint_ClearOUT();
 231               		.loc 1 75 0
 232 00fe 6981      		ldd r22,Y+1
 233 0100 7A81      		ldd r23,Y+2
 234 0102 C501      		movw r24,r10
 235 0104 0E94 0000 		call Endpoint_Write_Control_Stream_LE
 236               	.LVL10:
 237               	.LBB62:
 238               	.LBB63:
 471:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 239               		.loc 2 471 0
 240 0108 8091 E800 		lds r24,232
 241 010c 8B77      		andi r24,lo8(123)
 242 010e 8093 E800 		sts 232,r24
 243               	.LBE63:
 244               	.LBE62:
 245 0112 0FB6      		in __tmp_reg__,__SREG__
 246 0114 F894      		cli
 247 0116 9EBE      		out __SP_H__,r9
 248 0118 0FBE      		out __SREG__,__tmp_reg__
 249 011a 8DBE      		out __SP_L__,r8
 250 011c 00C0      		rjmp .L1
 251               	.LVL11:
 252               	.L31:
 253               	.LBE55:
  81:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			{
 254               		.loc 1 81 0
 255 011e 8091 0000 		lds r24,USB_ControlRequest
 256 0122 8132      		cpi r24,lo8(33)
 257 0124 01F0      		breq .+2
 258 0126 00C0      		rjmp .L1
 259               	.LBB64:
 260 0128 ADB6      		in r10,__SP_L__
 261 012a BEB6      		in r11,__SP_H__
  83:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				uint8_t  ReportID   = (USB_ControlRequest.wValue & 0xFF);
 262               		.loc 1 83 0
 263 012c 0091 0000 		lds r16,USB_ControlRequest+6
 264 0130 1091 0000 		lds r17,USB_ControlRequest+6+1
 265               	.LVL12:
  84:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				uint8_t  ReportType = (USB_ControlRequest.wValue >> 8) - 1;
 266               		.loc 1 84 0
 267 0134 7090 0000 		lds r7,USB_ControlRequest+2
 268 0138 6090 0000 		lds r6,USB_ControlRequest+3
 269               	.LVL13:
  86:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 270               		.loc 1 86 0
 271 013c 8DB7      		in r24,__SP_L__
 272 013e 9EB7      		in r25,__SP_H__
 273 0140 801B      		sub r24,r16
 274 0142 910B      		sbc r25,r17
 275 0144 0FB6      		in __tmp_reg__,__SREG__
 276 0146 F894      		cli
 277 0148 9EBF      		out __SP_H__,r25
 278 014a 0FBE      		out __SREG__,__tmp_reg__
 279 014c 8DBF      		out __SP_L__,r24
 280 014e EDB7      		in r30,__SP_L__
 281 0150 FEB7      		in r31,__SP_H__
 282 0152 3196      		adiw r30,1
 283 0154 4F01      		movw r8,r30
 284               	.LVL14:
 285               	.LBB65:
 286               	.LBB66:
 444:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 287               		.loc 2 444 0
 288 0156 8091 E800 		lds r24,232
 289 015a 877F      		andi r24,lo8(-9)
 290 015c 8093 E800 		sts 232,r24
 291               	.LBE66:
 292               	.LBE65:
  89:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				Endpoint_ClearIN();
 293               		.loc 1 89 0
 294 0160 B801      		movw r22,r16
 295 0162 CF01      		movw r24,r30
 296 0164 0E94 0000 		call Endpoint_Read_Control_Stream_LE
 297               	.LVL15:
 298               	.LBB67:
 299               	.LBB68:
 456:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 300               		.loc 2 456 0
 301 0168 8091 E800 		lds r24,232
 302 016c 8E77      		andi r24,lo8(126)
 303 016e 8093 E800 		sts 232,r24
 304               	.LBE68:
 305               	.LBE67:
  92:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				                                     &ReportData[ReportID ? 1 : 0], ReportSize - (ReportID ? 1 
 306               		.loc 1 92 0
 307 0172 21E0      		ldi r18,lo8(1)
 308 0174 7110      		cpse r7,__zero_reg__
 309 0176 00C0      		rjmp .L12
 310 0178 20E0      		ldi r18,0
 311               	.L12:
 312 017a 30E0      		ldi r19,0
 313 017c 021B      		sub r16,r18
 314 017e 130B      		sbc r17,r19
 315               	.LVL16:
  93:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			}
 316               		.loc 1 93 0
 317 0180 280D      		add r18,r8
 318 0182 391D      		adc r19,r9
  85:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				uint8_t  ReportData[ReportSize];
 319               		.loc 1 85 0
 320 0184 4FEF      		ldi r20,lo8(-1)
 321 0186 460D      		add r20,r6
  92:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				                                     &ReportData[ReportID ? 1 : 0], ReportSize - (ReportID ? 1 
 322               		.loc 1 92 0
 323 0188 672D      		mov r22,r7
 324 018a C701      		movw r24,r14
 325 018c 0E94 0000 		call CALLBACK_HID_Device_ProcessHIDReport
 326               	.LVL17:
 327 0190 0FB6      		in __tmp_reg__,__SREG__
 328 0192 F894      		cli
 329 0194 BEBE      		out __SP_H__,r11
 330 0196 0FBE      		out __SREG__,__tmp_reg__
 331 0198 ADBE      		out __SP_L__,r10
 332 019a 00C0      		rjmp .L1
 333               	.LVL18:
 334               	.L3:
 335               	.LBE64:
  98:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			{
 336               		.loc 1 98 0
 337 019c 8091 0000 		lds r24,USB_ControlRequest
 338 01a0 813A      		cpi r24,lo8(-95)
 339 01a2 01F0      		breq .+2
 340 01a4 00C0      		rjmp .L1
 341               	.LBB69:
 342               	.LBB70:
 444:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 343               		.loc 2 444 0
 344 01a6 8091 E800 		lds r24,232
 345 01aa 877F      		andi r24,lo8(-9)
 346 01ac 8093 E800 		sts 232,r24
 347               	.L13:
 348               	.LBE70:
 349               	.LBE69:
 350               	.LBB71:
 351               	.LBB72:
 407:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 352               		.loc 2 407 0 discriminator 1
 353 01b0 8091 E800 		lds r24,232
 354               	.LBE72:
 355               	.LBE71:
 101:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				Endpoint_Write_8(HIDInterfaceInfo->State.UsingReportProtocol);
 356               		.loc 1 101 0 discriminator 1
 357 01b4 80FF      		sbrs r24,0
 358 01b6 00C0      		rjmp .L13
 102:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				Endpoint_ClearIN();
 359               		.loc 1 102 0
 360 01b8 F701      		movw r30,r14
 361 01ba 8185      		ldd r24,Z+9
 362               	.LVL19:
 363 01bc 00C0      		rjmp .L29
 364               	.LVL20:
 365               	.L8:
 109:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			{
 366               		.loc 1 109 0
 367 01be 8091 0000 		lds r24,USB_ControlRequest
 368 01c2 8132      		cpi r24,lo8(33)
 369 01c4 01F0      		breq .+2
 370 01c6 00C0      		rjmp .L1
 371               	.LBB73:
 372               	.LBB74:
 444:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 373               		.loc 2 444 0
 374 01c8 8091 E800 		lds r24,232
 375 01cc 877F      		andi r24,lo8(-9)
 376 01ce 8093 E800 		sts 232,r24
 377               	.LBE74:
 378               	.LBE73:
 112:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 379               		.loc 1 112 0
 380 01d2 0E94 0000 		call Endpoint_ClearStatusStage
 381               	.LVL21:
 114:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			}
 382               		.loc 1 114 0
 383 01d6 9091 0000 		lds r25,USB_ControlRequest+2
 384 01da 81E0      		ldi r24,lo8(1)
 385 01dc 9111      		cpse r25,__zero_reg__
 386 01de 00C0      		rjmp .L14
 387 01e0 80E0      		ldi r24,0
 388               	.L14:
 389 01e2 F701      		movw r30,r14
 390 01e4 8187      		std Z+9,r24
 391 01e6 00C0      		rjmp .L1
 392               	.L7:
 119:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			{
 393               		.loc 1 119 0
 394 01e8 8091 0000 		lds r24,USB_ControlRequest
 395 01ec 8132      		cpi r24,lo8(33)
 396 01ee 01F4      		brne .L1
 397               	.LBB75:
 398               	.LBB76:
 444:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 399               		.loc 2 444 0
 400 01f0 8091 E800 		lds r24,232
 401 01f4 877F      		andi r24,lo8(-9)
 402 01f6 8093 E800 		sts 232,r24
 403               	.LBE76:
 404               	.LBE75:
 122:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 405               		.loc 1 122 0
 406 01fa 0E94 0000 		call Endpoint_ClearStatusStage
 407               	.LVL22:
 124:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			}
 408               		.loc 1 124 0
 409 01fe 8091 0000 		lds r24,USB_ControlRequest+2
 410 0202 9091 0000 		lds r25,USB_ControlRequest+2+1
 411 0206 8827      		clr r24
 412 0208 36E0      		ldi r19,6
 413               		1:
 414 020a 9695      		lsr r25
 415 020c 8795      		ror r24
 416 020e 3A95      		dec r19
 417 0210 01F4      		brne 1b
 418 0212 F701      		movw r30,r14
 419 0214 9587      		std Z+13,r25
 420 0216 8487      		std Z+12,r24
 421 0218 00C0      		rjmp .L1
 422               	.L6:
 129:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			{
 423               		.loc 1 129 0
 424 021a 8091 0000 		lds r24,USB_ControlRequest
 425 021e 813A      		cpi r24,lo8(-95)
 426 0220 01F4      		brne .L1
 427               	.LBB77:
 428               	.LBB78:
 444:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 429               		.loc 2 444 0
 430 0222 8091 E800 		lds r24,232
 431 0226 877F      		andi r24,lo8(-9)
 432 0228 8093 E800 		sts 232,r24
 433               	.L15:
 434               	.LBE78:
 435               	.LBE77:
 436               	.LBB79:
 437               	.LBB80:
 407:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 438               		.loc 2 407 0 discriminator 1
 439 022c 8091 E800 		lds r24,232
 440               	.LBE80:
 441               	.LBE79:
 132:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				Endpoint_Write_8(HIDInterfaceInfo->State.IdleCount >> 2);
 442               		.loc 1 132 0 discriminator 1
 443 0230 80FF      		sbrs r24,0
 444 0232 00C0      		rjmp .L15
 133:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 				Endpoint_ClearIN();
 445               		.loc 1 133 0
 446 0234 F701      		movw r30,r14
 447 0236 8485      		ldd r24,Z+12
 448 0238 9585      		ldd r25,Z+13
 449 023a 9695      		lsr r25
 450 023c 8795      		ror r24
 451 023e 9695      		lsr r25
 452 0240 8795      		ror r24
 453               	.L29:
 454               	.LVL23:
 455               	.LBB81:
 456               	.LBB82:
 457               		.loc 2 554 0
 458 0242 8093 F100 		sts 241,r24
 459               	.LBE82:
 460               	.LBE81:
 461               	.LBB83:
 462               	.LBB84:
 456:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 463               		.loc 2 456 0
 464 0246 8091 E800 		lds r24,232
 465               	.LVL24:
 466 024a 8E77      		andi r24,lo8(126)
 467 024c 8093 E800 		sts 232,r24
 468               	.LBE84:
 469               	.LBE83:
 135:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			}
 470               		.loc 1 135 0
 471 0250 0E94 0000 		call Endpoint_ClearStatusStage
 472               	.LVL25:
 473               	.L1:
 474               		.loc 1 140 0
 475 0254 0FB6      		in __tmp_reg__,__SREG__
 476 0256 F894      		cli
 477 0258 DEBE      		out __SP_H__,r13
 478 025a 0FBE      		out __SREG__,__tmp_reg__
 479 025c CDBE      		out __SP_L__,r12
 480               	/* epilogue start */
 481 025e 0F90      		pop __tmp_reg__
 482 0260 0F90      		pop __tmp_reg__
 483 0262 0F90      		pop __tmp_reg__
 484 0264 DF91      		pop r29
 485 0266 CF91      		pop r28
 486 0268 1F91      		pop r17
 487 026a 0F91      		pop r16
 488 026c FF90      		pop r15
 489 026e EF90      		pop r14
 490               	.LVL26:
 491 0270 DF90      		pop r13
 492 0272 CF90      		pop r12
 493 0274 BF90      		pop r11
 494 0276 AF90      		pop r10
 495 0278 9F90      		pop r9
 496 027a 8F90      		pop r8
 497 027c 7F90      		pop r7
 498 027e 6F90      		pop r6
 499 0280 0895      		ret
 500               		.cfi_endproc
 501               	.LFE100:
 503               		.section	.text.HID_Device_ConfigureEndpoints,"ax",@progbits
 504               	.global	HID_Device_ConfigureEndpoints
 506               	HID_Device_ConfigureEndpoints:
 507               	.LFB101:
 141:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 142:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** bool HID_Device_ConfigureEndpoints(USB_ClassInfo_HID_Device_t* const HIDInterfaceInfo)
 143:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** {
 508               		.loc 1 143 0
 509               		.cfi_startproc
 510               	.LVL27:
 511               	/* prologue: function */
 512               	/* frame size = 0 */
 513               	/* stack size = 0 */
 514               	.L__stack_usage = 0
 144:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	memset(&HIDInterfaceInfo->State, 0x00, sizeof(HIDInterfaceInfo->State));
 515               		.loc 1 144 0
 516 0000 FC01      		movw r30,r24
 517 0002 3996      		adiw r30,9
 518 0004 27E0      		ldi r18,lo8(7)
 519 0006 DF01      		movw r26,r30
 520               		0:
 521 0008 1D92      		st X+,__zero_reg__
 522 000a 2A95      		dec r18
 523 000c 01F4      		brne 0b
 145:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	HIDInterfaceInfo->State.UsingReportProtocol = true;
 524               		.loc 1 145 0
 525 000e 21E0      		ldi r18,lo8(1)
 526 0010 FC01      		movw r30,r24
 527 0012 2187      		std Z+9,r18
 146:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	HIDInterfaceInfo->State.IdleCount           = 500;
 528               		.loc 1 146 0
 529 0014 24EF      		ldi r18,lo8(-12)
 530 0016 31E0      		ldi r19,lo8(1)
 531 0018 3587      		std Z+13,r19
 532 001a 2487      		std Z+12,r18
 147:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 148:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	HIDInterfaceInfo->Config.ReportINEndpoint.Type = EP_TYPE_INTERRUPT;
 533               		.loc 1 148 0
 534 001c 23E0      		ldi r18,lo8(3)
 535 001e 2483      		std Z+4,r18
 149:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 150:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	if (!(Endpoint_ConfigureEndpointTable(&HIDInterfaceInfo->Config.ReportINEndpoint, 1)))
 536               		.loc 1 150 0
 537 0020 61E0      		ldi r22,lo8(1)
 538 0022 0196      		adiw r24,1
 539               	.LVL28:
 540 0024 0C94 0000 		jmp Endpoint_ConfigureEndpointTable
 541               	.LVL29:
 542               		.cfi_endproc
 543               	.LFE101:
 545               		.section	.text.HID_Device_USBTask,"ax",@progbits
 546               	.global	HID_Device_USBTask
 548               	HID_Device_USBTask:
 549               	.LFB102:
 151:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	  return false;
 152:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 153:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	return true;
 154:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** }
 155:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 156:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** void HID_Device_USBTask(USB_ClassInfo_HID_Device_t* const HIDInterfaceInfo)
 157:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** {
 550               		.loc 1 157 0
 551               		.cfi_startproc
 552               	.LVL30:
 553 0000 4F92      		push r4
 554               	.LCFI16:
 555               		.cfi_def_cfa_offset 3
 556               		.cfi_offset 4, -2
 557 0002 5F92      		push r5
 558               	.LCFI17:
 559               		.cfi_def_cfa_offset 4
 560               		.cfi_offset 5, -3
 561 0004 6F92      		push r6
 562               	.LCFI18:
 563               		.cfi_def_cfa_offset 5
 564               		.cfi_offset 6, -4
 565 0006 7F92      		push r7
 566               	.LCFI19:
 567               		.cfi_def_cfa_offset 6
 568               		.cfi_offset 7, -5
 569 0008 8F92      		push r8
 570               	.LCFI20:
 571               		.cfi_def_cfa_offset 7
 572               		.cfi_offset 8, -6
 573 000a 9F92      		push r9
 574               	.LCFI21:
 575               		.cfi_def_cfa_offset 8
 576               		.cfi_offset 9, -7
 577 000c AF92      		push r10
 578               	.LCFI22:
 579               		.cfi_def_cfa_offset 9
 580               		.cfi_offset 10, -8
 581 000e BF92      		push r11
 582               	.LCFI23:
 583               		.cfi_def_cfa_offset 10
 584               		.cfi_offset 11, -9
 585 0010 CF92      		push r12
 586               	.LCFI24:
 587               		.cfi_def_cfa_offset 11
 588               		.cfi_offset 12, -10
 589 0012 DF92      		push r13
 590               	.LCFI25:
 591               		.cfi_def_cfa_offset 12
 592               		.cfi_offset 13, -11
 593 0014 EF92      		push r14
 594               	.LCFI26:
 595               		.cfi_def_cfa_offset 13
 596               		.cfi_offset 14, -12
 597 0016 FF92      		push r15
 598               	.LCFI27:
 599               		.cfi_def_cfa_offset 14
 600               		.cfi_offset 15, -13
 601 0018 0F93      		push r16
 602               	.LCFI28:
 603               		.cfi_def_cfa_offset 15
 604               		.cfi_offset 16, -14
 605 001a 1F93      		push r17
 606               	.LCFI29:
 607               		.cfi_def_cfa_offset 16
 608               		.cfi_offset 17, -15
 609 001c CF93      		push r28
 610               	.LCFI30:
 611               		.cfi_def_cfa_offset 17
 612               		.cfi_offset 28, -16
 613 001e DF93      		push r29
 614               	.LCFI31:
 615               		.cfi_def_cfa_offset 18
 616               		.cfi_offset 29, -17
 617 0020 00D0      		rcall .
 618 0022 1F92      		push __zero_reg__
 619               	.LCFI32:
 620               		.cfi_def_cfa_offset 21
 621 0024 CDB7      		in r28,__SP_L__
 622 0026 DEB7      		in r29,__SP_H__
 623               	.LCFI33:
 624               		.cfi_def_cfa_register 28
 625               	/* prologue: function */
 626               	/* frame size = 3 */
 627               	/* stack size = 19 */
 628               	.L__stack_usage = 19
 629 0028 7C01      		movw r14,r24
 158:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	if (USB_DeviceState != DEVICE_STATE_Configured)
 159:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	  return;
 160:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 161:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	if (HIDInterfaceInfo->State.PrevFrameNum == USB_Device_GetFrameNumber())
 162:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	{
 163:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		#if defined(USB_DEVICE_OPT_LOWSPEED)
 164:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		if (!(USB_Options & USB_DEVICE_OPT_LOWSPEED))
 165:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		  return;
 166:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		#else
 167:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		return;
 168:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		#endif
 169:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	}
 170:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 171:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	Endpoint_SelectEndpoint(HIDInterfaceInfo->Config.ReportINEndpoint.Address);
 172:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 173:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	if (Endpoint_IsReadWriteAllowed())
 174:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	{
 175:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		uint8_t  ReportINData[HIDInterfaceInfo->Config.PrevReportINBufferSize];
 176:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		uint8_t  ReportID     = 0;
 177:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		uint16_t ReportINSize = 0;
 178:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 179:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		memset(ReportINData, 0, sizeof(ReportINData));
 180:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 181:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		bool ForceSend         = CALLBACK_HID_Device_CreateHIDReport(HIDInterfaceInfo, &ReportID, HID_REP
 182:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		                                                             ReportINData, &ReportINSize);
 183:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		bool StatesChanged     = false;
 184:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		bool IdlePeriodElapsed = (HIDInterfaceInfo->State.IdleCount && !(HIDInterfaceInfo->State.IdleMSRe
 185:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 186:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		if (HIDInterfaceInfo->Config.PrevReportINBuffer != NULL)
 187:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		{
 188:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			StatesChanged = (memcmp(ReportINData, HIDInterfaceInfo->Config.PrevReportINBuffer, ReportINSize)
 189:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			memcpy(HIDInterfaceInfo->Config.PrevReportINBuffer, ReportINData, HIDInterfaceInfo->Config.PrevR
 190:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		}
 191:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 192:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		if (ReportINSize && (ForceSend || StatesChanged || IdlePeriodElapsed))
 193:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		{
 194:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			HIDInterfaceInfo->State.IdleMSRemaining = HIDInterfaceInfo->State.IdleCount;
 195:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 196:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			Endpoint_SelectEndpoint(HIDInterfaceInfo->Config.ReportINEndpoint.Address);
 197:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 198:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			if (ReportID)
 199:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			  Endpoint_Write_8(ReportID);
 200:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 201:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			Endpoint_Write_Stream_LE(ReportINData, ReportINSize, NULL);
 202:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 203:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			Endpoint_ClearIN();
 204:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		}
 205:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 206:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		HIDInterfaceInfo->State.PrevFrameNum = USB_Device_GetFrameNumber();
 207:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	}
 208:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** }
 630               		.loc 1 208 0
 631 002a ADB6      		in r10,__SP_L__
 632 002c BEB6      		in r11,__SP_H__
 158:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	if (USB_DeviceState != DEVICE_STATE_Configured)
 633               		.loc 1 158 0
 634 002e 8091 0000 		lds r24,USB_DeviceState
 635               	.LVL31:
 636 0032 8430      		cpi r24,lo8(4)
 637 0034 01F0      		breq .+2
 638 0036 00C0      		rjmp .L33
 639               	.LBB85:
 640               	.LBB86:
 641               		.file 3 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AV
   1:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** /*
   2:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****              LUFA Library
   3:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 
   5:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****            www.lufa-lib.org
   7:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** */
   8:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 
   9:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** /*
  10:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 
  12:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****   all copies and that both that the copyright notice and this
  16:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****   documentation, and that the name of the author not be used in
  18:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****   software without specific, written prior permission.
  20:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 
  21:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****   The author disclaims all warranties with regard to this
  22:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****   software, including all implied warranties of merchantability
  23:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****   special, indirect or consequential damages or any damages
  25:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****   arising out of or in connection with the use or performance of
  28:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****   this software.
  29:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** */
  30:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 
  31:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** /** \file
  32:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****  *  \brief USB Device definitions for the AVR8 microcontrollers.
  33:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****  *  \copydetails Group_Device_AVR8
  34:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****  *
  35:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****  */
  38:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 
  39:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** /** \ingroup Group_Device
  40:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****  *  \defgroup Group_Device_AVR8 Device Management (AVR8)
  41:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****  *  \brief USB Device definitions for the AVR8 microcontrollers.
  42:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****  *
  43:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****  *  Architecture specific USB Device definitions for the Atmel 8-bit AVR microcontrollers.
  44:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****  *
  45:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****  *  @{
  46:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h ****  */
  47:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 
  48:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** #ifndef __USBDEVICE_AVR8_H__
  49:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** #define __USBDEVICE_AVR8_H__
  50:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 
  51:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Includes: */
  52:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../../../../Common/Common.h"
  53:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../USBController.h"
  54:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../StdDescriptors.h"
  55:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../USBInterrupt.h"
  56:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../Endpoint.h"
  57:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 
  58:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  59:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 		#if defined(__cplusplus)
  60:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			extern "C" {
  61:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  62:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 
  63:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Preprocessor Checks: */
  64:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  65:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  66:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  67:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 
  68:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_RAM_DESCRIPTORS) && defined(USE_EEPROM_DESCRIPTORS))
  69:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			#error USE_RAM_DESCRIPTORS and USE_EEPROM_DESCRIPTORS are mutually exclusive.
  70:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  71:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 
  72:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_FLASH_DESCRIPTORS) && defined(USE_EEPROM_DESCRIPTORS))
  73:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			#error USE_FLASH_DESCRIPTORS and USE_EEPROM_DESCRIPTORS are mutually exclusive.
  74:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  75:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 
  76:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_FLASH_DESCRIPTORS) && defined(USE_RAM_DESCRIPTORS))
  77:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			#error USE_FLASH_DESCRIPTORS and USE_RAM_DESCRIPTORS are mutually exclusive.
  78:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  79:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 
  80:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Public Interface - May be used in end-application: */
  81:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 		/* Macros: */
  82:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			/** \name USB Device Mode Option Masks */
  83:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			//@{
  84:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defin
  85:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Mask for the Options parameter of the \ref USB_Init() function. This indicates that the
  86:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  USB interface should be initialized in low speed (1.5Mb/s) mode.
  87:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
  88:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \note Low Speed mode is not available on all USB AVR models.
  89:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				 *        \n
  90:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
  91:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \note Restrictions apply on the number, size and type of endpoints which can be used
  92:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				 *        when running in low speed mode - please refer to the USB 2.0 specification.
  93:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
  94:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				#define USB_DEVICE_OPT_LOWSPEED            (1 << 0)
  95:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			#endif
  96:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 
  97:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			/** Mask for the Options parameter of the \ref USB_Init() function. This indicates that the
  98:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  USB interface should be initialized in full speed (12Mb/s) mode.
  99:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			 */
 100:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			#define USB_DEVICE_OPT_FULLSPEED               (0 << 0)
 101:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			//@}
 102:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 
 103:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			#if (!defined(NO_INTERNAL_SERIAL) && \
 104:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			     (defined(USB_SERIES_7_AVR) || defined(USB_SERIES_6_AVR) || \
 105:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			      defined(USB_SERIES_4_AVR) || defined(USB_SERIES_2_AVR) || \
 106:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				  defined(__DOXYGEN__)))
 107:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				/** String descriptor index for the device's unique serial number string descriptor within the 
 108:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  This unique serial number is used by the host to associate resources to the device (such as
 109:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  number allocations) to a device regardless of the port it is plugged in to on the host. Som
 110:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  a unique serial number internally, and setting the device descriptors serial number string 
 111:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  will cause it to use the internal serial number.
 112:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
 113:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  On unsupported devices, this will evaluate to \ref NO_DESCRIPTOR and so will force the host
 114:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  number for the device.
 115:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 116:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				#define USE_INTERNAL_SERIAL            0xDC
 117:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 
 118:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Length of the device's unique internal serial number, in bits, if present on the selected m
 119:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  model.
 120:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 121:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_LENGTH_BITS    80
 122:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 
 123:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Start address of the internal serial number, in the appropriate address space, if present o
 124:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  model.
 125:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 126:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_START_ADDRESS  0x0E
 127:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			#else
 128:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				#define USE_INTERNAL_SERIAL            NO_DESCRIPTOR
 129:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 
 130:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_LENGTH_BITS    0
 131:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_START_ADDRESS  0
 132:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			#endif
 133:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 
 134:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 		/* Function Prototypes: */
 135:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			/** Sends a Remote Wakeup request to the host. This signals to the host that the device should
 136:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  be taken out of suspended mode, and communications should resume.
 137:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 138:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  Typically, this is implemented so that HID devices (mice, keyboards, etc.) can wake up the
 139:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  host computer when the host has suspended all USB devices to enter a low power state.
 140:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 141:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \attention This function should only be used if the device has indicated to the host that it
 142:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             supports the Remote Wakeup feature in the device descriptors, and should only be
 143:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             issued if the host is currently allowing remote wakeup events from the device (i.
 144:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             the \ref USB_Device_RemoteWakeupEnabled flag is set). When the \c NO_DEVICE_REMOT
 145:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             compile time option is used, this function is unavailable.
 146:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             \n\n
 147:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 148:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \attention The USB clock must be running for this function to operate. If the stack is initi
 149:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             the \ref USB_OPT_MANUAL_PLL option enabled, the user must ensure that the PLL is 
 150:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             before attempting to call this function.
 151:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 152:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \see \ref Group_StdDescriptors for more information on the RMWAKEUP feature and device descr
 153:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			 */
 154:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			void USB_Device_SendRemoteWakeup(void);
 155:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 
 156:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 		/* Inline Functions: */
 157:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			/** Returns the current USB frame number, when in device mode. Every millisecond the USB bus is 
 158:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  the frame number is incremented by one.
 159:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 160:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \return Current USB frame number from the USB controller.
 161:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			 */
 162:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline uint16_t USB_Device_GetFrameNumber(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESUL
 163:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline uint16_t USB_Device_GetFrameNumber(void)
 164:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 			{
 165:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Device_AVR8.h **** 				return UDFNUM;
 642               		.loc 3 165 0
 643 0038 8091 E400 		lds r24,228
 644 003c 9091 E500 		lds r25,228+1
 645               	.LBE86:
 646               	.LBE85:
 161:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	{
 647               		.loc 1 161 0
 648 0040 F701      		movw r30,r14
 649 0042 2285      		ldd r18,Z+10
 650 0044 3385      		ldd r19,Z+11
 651 0046 2817      		cp r18,r24
 652 0048 3907      		cpc r19,r25
 653 004a 01F4      		brne .+2
 654 004c 00C0      		rjmp .L33
 655               	.LVL32:
 656               	.LBB87:
 657               	.LBB88:
 270:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 658               		.loc 2 270 0
 659 004e 8181      		ldd r24,Z+1
 660 0050 8F70      		andi r24,lo8(15)
 661 0052 8093 E900 		sts 233,r24
 662               	.LVL33:
 663               	.LBE88:
 664               	.LBE87:
 665               	.LBB89:
 666               	.LBB90:
 360:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 667               		.loc 2 360 0
 668 0056 8091 E800 		lds r24,232
 669               	.LBE90:
 670               	.LBE89:
 173:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	{
 671               		.loc 1 173 0
 672 005a 85FF      		sbrs r24,5
 673 005c 00C0      		rjmp .L33
 674               	.LBB91:
 675 005e 8DB6      		in r8,__SP_L__
 676 0060 9EB6      		in r9,__SP_H__
 677               	.LVL34:
 175:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		uint8_t  ReportID     = 0;
 678               		.loc 1 175 0
 679 0062 4085      		ldd r20,Z+8
 680 0064 50E0      		ldi r21,0
 681 0066 8DB7      		in r24,__SP_L__
 682 0068 9EB7      		in r25,__SP_H__
 683 006a 841B      		sub r24,r20
 684 006c 950B      		sbc r25,r21
 685 006e 0FB6      		in __tmp_reg__,__SREG__
 686 0070 F894      		cli
 687 0072 9EBF      		out __SP_H__,r25
 688 0074 0FBE      		out __SREG__,__tmp_reg__
 689 0076 8DBF      		out __SP_L__,r24
 690 0078 EDB7      		in r30,__SP_L__
 691 007a FEB7      		in r31,__SP_H__
 692 007c 3196      		adiw r30,1
 693 007e 6F01      		movw r12,r30
 694               	.LVL35:
 176:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		uint16_t ReportINSize = 0;
 695               		.loc 1 176 0
 696 0080 1B82      		std Y+3,__zero_reg__
 177:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 697               		.loc 1 177 0
 698 0082 1A82      		std Y+2,__zero_reg__
 699 0084 1982      		std Y+1,__zero_reg__
 179:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 700               		.loc 1 179 0
 701 0086 60E0      		ldi r22,0
 702 0088 70E0      		ldi r23,0
 703 008a CF01      		movw r24,r30
 704 008c 0E94 0000 		call memset
 705               	.LVL36:
 181:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		                                                             ReportINData, &ReportINSize);
 706               		.loc 1 181 0
 707 0090 8E01      		movw r16,r28
 708 0092 0F5F      		subi r16,-1
 709 0094 1F4F      		sbci r17,-1
 710 0096 9601      		movw r18,r12
 711 0098 40E0      		ldi r20,0
 712 009a BE01      		movw r22,r28
 713 009c 6D5F      		subi r22,-3
 714 009e 7F4F      		sbci r23,-1
 715 00a0 C701      		movw r24,r14
 716 00a2 0E94 0000 		call CALLBACK_HID_Device_CreateHIDReport
 717               	.LVL37:
 718 00a6 482E      		mov r4,r24
 719               	.LVL38:
 184:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 720               		.loc 1 184 0
 721 00a8 F701      		movw r30,r14
 722 00aa 8485      		ldd r24,Z+12
 723 00ac 9585      		ldd r25,Z+13
 724 00ae 892B      		or r24,r25
 725 00b0 01F0      		breq .L44
 184:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 726               		.loc 1 184 0 is_stmt 0 discriminator 1
 727 00b2 91E0      		ldi r25,lo8(1)
 728 00b4 80E0      		ldi r24,0
 729 00b6 2685      		ldd r18,Z+14
 730 00b8 3785      		ldd r19,Z+15
 731 00ba 232B      		or r18,r19
 732 00bc 01F0      		breq .L38
 733 00be 90E0      		ldi r25,0
 734               	.L38:
 735 00c0 092F      		mov r16,r25
 736 00c2 182F      		mov r17,r24
 737 00c4 00C0      		rjmp .L37
 738               	.L44:
 184:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 739               		.loc 1 184 0
 740 00c6 00E0      		ldi r16,0
 741 00c8 10E0      		ldi r17,0
 742               	.L37:
 743               	.LVL39:
 186:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		{
 744               		.loc 1 186 0 is_stmt 1 discriminator 6
 745 00ca F701      		movw r30,r14
 746 00cc 6680      		ldd r6,Z+6
 747 00ce 7780      		ldd r7,Z+7
 748 00d0 6114      		cp r6,__zero_reg__
 749 00d2 7104      		cpc r7,__zero_reg__
 750 00d4 01F0      		breq .L45
 188:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			memcpy(HIDInterfaceInfo->Config.PrevReportINBuffer, ReportINData, HIDInterfaceInfo->Config.PrevR
 751               		.loc 1 188 0
 752 00d6 4981      		ldd r20,Y+1
 753 00d8 5A81      		ldd r21,Y+2
 754 00da B301      		movw r22,r6
 755 00dc C601      		movw r24,r12
 756 00de 0E94 0000 		call memcmp
 757               	.LVL40:
 758 00e2 5524      		clr r5
 759 00e4 5394      		inc r5
 760 00e6 892B      		or r24,r25
 761 00e8 01F4      		brne .L40
 762 00ea 512C      		mov r5,__zero_reg__
 763               	.L40:
 764               	.LVL41:
 189:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		}
 765               		.loc 1 189 0
 766 00ec F701      		movw r30,r14
 767 00ee 4085      		ldd r20,Z+8
 768 00f0 50E0      		ldi r21,0
 769 00f2 B601      		movw r22,r12
 770 00f4 C301      		movw r24,r6
 771 00f6 0E94 0000 		call memcpy
 772               	.LVL42:
 773 00fa 00C0      		rjmp .L39
 774               	.LVL43:
 775               	.L45:
 183:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		bool IdlePeriodElapsed = (HIDInterfaceInfo->State.IdleCount && !(HIDInterfaceInfo->State.IdleMSRe
 776               		.loc 1 183 0
 777 00fc 512C      		mov r5,__zero_reg__
 778               	.LVL44:
 779               	.L39:
 192:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		{
 780               		.loc 1 192 0
 781 00fe 8981      		ldd r24,Y+1
 782 0100 9A81      		ldd r25,Y+2
 783 0102 892B      		or r24,r25
 784 0104 01F0      		breq .L41
 192:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		{
 785               		.loc 1 192 0 is_stmt 0 discriminator 1
 786 0106 4110      		cpse r4,__zero_reg__
 787 0108 00C0      		rjmp .L42
 192:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		{
 788               		.loc 1 192 0 discriminator 2
 789 010a 5110      		cpse r5,__zero_reg__
 790 010c 00C0      		rjmp .L42
 192:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 		{
 791               		.loc 1 192 0 discriminator 3
 792 010e 012B      		or r16,r17
 793 0110 01F0      		breq .L41
 794               	.L42:
 194:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 795               		.loc 1 194 0 is_stmt 1
 796 0112 F701      		movw r30,r14
 797 0114 8485      		ldd r24,Z+12
 798 0116 9585      		ldd r25,Z+13
 799 0118 9787      		std Z+15,r25
 800 011a 8687      		std Z+14,r24
 801               	.LVL45:
 802               	.LBB92:
 803               	.LBB93:
 270:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 804               		.loc 2 270 0
 805 011c 8181      		ldd r24,Z+1
 806 011e 8F70      		andi r24,lo8(15)
 807 0120 8093 E900 		sts 233,r24
 808               	.LVL46:
 809               	.LBE93:
 810               	.LBE92:
 198:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 			  Endpoint_Write_8(ReportID);
 811               		.loc 1 198 0
 812 0124 8B81      		ldd r24,Y+3
 813 0126 8111      		cpse r24,__zero_reg__
 814               	.LVL47:
 815               	.LBB94:
 816               	.LBB95:
 817               		.loc 2 554 0
 818 0128 8093 F100 		sts 241,r24
 819               	.LVL48:
 820               	.L43:
 821               	.LBE95:
 822               	.LBE94:
 201:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 
 823               		.loc 1 201 0
 824 012c 6981      		ldd r22,Y+1
 825 012e 7A81      		ldd r23,Y+2
 826 0130 40E0      		ldi r20,0
 827 0132 50E0      		ldi r21,0
 828 0134 C601      		movw r24,r12
 829 0136 0E94 0000 		call Endpoint_Write_Stream_LE
 830               	.LVL49:
 831               	.LBB96:
 832               	.LBB97:
 456:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 833               		.loc 2 456 0
 834 013a 8091 E800 		lds r24,232
 835 013e 8E77      		andi r24,lo8(126)
 836 0140 8093 E800 		sts 232,r24
 837               	.L41:
 838               	.LBE97:
 839               	.LBE96:
 840               	.LBB98:
 841               	.LBB99:
 842               		.loc 3 165 0 discriminator 3
 843 0144 8091 E400 		lds r24,228
 844 0148 9091 E500 		lds r25,228+1
 845               	.LBE99:
 846               	.LBE98:
 206:../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.c **** 	}
 847               		.loc 1 206 0 discriminator 3
 848 014c F701      		movw r30,r14
 849 014e 9387      		std Z+11,r25
 850 0150 8287      		std Z+10,r24
 851 0152 0FB6      		in __tmp_reg__,__SREG__
 852 0154 F894      		cli
 853 0156 9EBE      		out __SP_H__,r9
 854 0158 0FBE      		out __SREG__,__tmp_reg__
 855 015a 8DBE      		out __SP_L__,r8
 856               	.LVL50:
 857               	.L33:
 858               	.LBE91:
 859               		.loc 1 208 0
 860 015c 0FB6      		in __tmp_reg__,__SREG__
 861 015e F894      		cli
 862 0160 BEBE      		out __SP_H__,r11
 863 0162 0FBE      		out __SREG__,__tmp_reg__
 864 0164 ADBE      		out __SP_L__,r10
 865               	/* epilogue start */
 866 0166 0F90      		pop __tmp_reg__
 867 0168 0F90      		pop __tmp_reg__
 868 016a 0F90      		pop __tmp_reg__
 869 016c DF91      		pop r29
 870 016e CF91      		pop r28
 871 0170 1F91      		pop r17
 872 0172 0F91      		pop r16
 873 0174 FF90      		pop r15
 874 0176 EF90      		pop r14
 875               	.LVL51:
 876 0178 DF90      		pop r13
 877 017a CF90      		pop r12
 878 017c BF90      		pop r11
 879 017e AF90      		pop r10
 880 0180 9F90      		pop r9
 881 0182 8F90      		pop r8
 882 0184 7F90      		pop r7
 883 0186 6F90      		pop r6
 884 0188 5F90      		pop r5
 885 018a 4F90      		pop r4
 886 018c 0895      		ret
 887               		.cfi_endproc
 888               	.LFE102:
 890               		.text
 891               	.Letext0:
 892               		.file 4 "/usr/local/Cellar/avr-gcc/4.9.3/avr/include/stdint.h"
 893               		.file 5 "/usr/local/Cellar/avr-gcc/4.9.3/lib/gcc/avr/4.9.3/include/stddef.h"
 894               		.file 6 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../En
 895               		.file 7 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../St
 896               		.file 8 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../De
 897               		.file 9 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../Common/HIDClassCom
 898               		.file 10 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/HIDClassDevice.h"
 899               		.file 11 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/USBTask.h
 900               		.file 12 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../A
 901               		.file 13 "/usr/local/Cellar/avr-gcc/4.9.3/avr/include/string.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 HIDClassDevice.c
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//cc4KnoyO.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//cc4KnoyO.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//cc4KnoyO.s:4      *ABS*:000000000000003f __SREG__
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//cc4KnoyO.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//cc4KnoyO.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//cc4KnoyO.s:13     .text.HID_Device_ProcessControlRequest:0000000000000000 HID_Device_ProcessControlRequest
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//cc4KnoyO.s:506    .text.HID_Device_ConfigureEndpoints:0000000000000000 HID_Device_ConfigureEndpoints
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//cc4KnoyO.s:548    .text.HID_Device_USBTask:0000000000000000 HID_Device_USBTask

UNDEFINED SYMBOLS
USB_ControlRequest
memset
CALLBACK_HID_Device_CreateHIDReport
memcpy
Endpoint_Write_Control_Stream_LE
Endpoint_Read_Control_Stream_LE
CALLBACK_HID_Device_ProcessHIDReport
Endpoint_ClearStatusStage
Endpoint_ConfigureEndpointTable
USB_DeviceState
memcmp
Endpoint_Write_Stream_LE
