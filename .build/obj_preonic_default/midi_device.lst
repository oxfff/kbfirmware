   1               		.file	"midi_device.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.midi_device_init,"ax",@progbits
  11               	.global	midi_device_init
  13               	midi_device_init:
  14               	.LFB0:
  15               		.file 1 "../../tmk_core/protocol/midi/midi_device.c"
   1:../../tmk_core/protocol/midi/midi_device.c **** //midi for embedded chips,
   2:../../tmk_core/protocol/midi/midi_device.c **** //Copyright 2010 Alex Norman
   3:../../tmk_core/protocol/midi/midi_device.c **** //
   4:../../tmk_core/protocol/midi/midi_device.c **** //This file is part of avr-midi.
   5:../../tmk_core/protocol/midi/midi_device.c **** //
   6:../../tmk_core/protocol/midi/midi_device.c **** //avr-midi is free software: you can redistribute it and/or modify
   7:../../tmk_core/protocol/midi/midi_device.c **** //it under the terms of the GNU General Public License as published by
   8:../../tmk_core/protocol/midi/midi_device.c **** //the Free Software Foundation, either version 3 of the License, or
   9:../../tmk_core/protocol/midi/midi_device.c **** //(at your option) any later version.
  10:../../tmk_core/protocol/midi/midi_device.c **** //
  11:../../tmk_core/protocol/midi/midi_device.c **** //avr-midi is distributed in the hope that it will be useful,
  12:../../tmk_core/protocol/midi/midi_device.c **** //but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../tmk_core/protocol/midi/midi_device.c **** //MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../tmk_core/protocol/midi/midi_device.c **** //GNU General Public License for more details.
  15:../../tmk_core/protocol/midi/midi_device.c **** //
  16:../../tmk_core/protocol/midi/midi_device.c **** //You should have received a copy of the GNU General Public License
  17:../../tmk_core/protocol/midi/midi_device.c **** //along with avr-midi.  If not, see <http://www.gnu.org/licenses/>.
  18:../../tmk_core/protocol/midi/midi_device.c **** 
  19:../../tmk_core/protocol/midi/midi_device.c **** #include "midi_device.h"
  20:../../tmk_core/protocol/midi/midi_device.c **** #include "midi.h"
  21:../../tmk_core/protocol/midi/midi_device.c **** 
  22:../../tmk_core/protocol/midi/midi_device.c **** #ifndef NULL
  23:../../tmk_core/protocol/midi/midi_device.c **** #define NULL 0
  24:../../tmk_core/protocol/midi/midi_device.c **** #endif
  25:../../tmk_core/protocol/midi/midi_device.c **** 
  26:../../tmk_core/protocol/midi/midi_device.c **** //forward declarations, internally used to call the callbacks
  27:../../tmk_core/protocol/midi/midi_device.c **** void midi_input_callbacks(MidiDevice * device, uint16_t cnt, uint8_t byte0, uint8_t byte1, uint8_t 
  28:../../tmk_core/protocol/midi/midi_device.c **** void midi_process_byte(MidiDevice * device, uint8_t input);
  29:../../tmk_core/protocol/midi/midi_device.c **** 
  30:../../tmk_core/protocol/midi/midi_device.c **** void midi_device_init(MidiDevice * device){
  16               		.loc 1 30 0
  17               		.cfi_startproc
  18               	.LVL0:
  19 0000 CF93      		push r28
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 28, -2
  23 0002 DF93      		push r29
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 29, -3
  27               	/* prologue: function */
  28               	/* frame size = 0 */
  29               	/* stack size = 2 */
  30               	.L__stack_usage = 2
  31 0004 EC01      		movw r28,r24
  31:../../tmk_core/protocol/midi/midi_device.c ****   device->input_state = IDLE;
  32               		.loc 1 31 0
  33 0006 1DA2      		std Y+37,__zero_reg__
  32:../../tmk_core/protocol/midi/midi_device.c ****   device->input_count = 0;
  34               		.loc 1 32 0
  35 0008 1FA2      		std Y+39,__zero_reg__
  36 000a 1EA2      		std Y+38,__zero_reg__
  33:../../tmk_core/protocol/midi/midi_device.c ****   bytequeue_init(&device->input_queue, device->input_queue_data, MIDI_INPUT_QUEUE_LENGTH);
  37               		.loc 1 33 0
  38 000c BC01      		movw r22,r24
  39 000e 685D      		subi r22,-40
  40 0010 7F4F      		sbci r23,-1
  41 0012 40EC      		ldi r20,lo8(-64)
  42 0014 8851      		subi r24,24
  43 0016 9F4F      		sbci r25,-1
  44               	.LVL1:
  45 0018 0E94 0000 		call bytequeue_init
  46               	.LVL2:
  34:../../tmk_core/protocol/midi/midi_device.c **** 
  35:../../tmk_core/protocol/midi/midi_device.c ****   //three byte funcs
  36:../../tmk_core/protocol/midi/midi_device.c ****   device->input_cc_callback = NULL;
  47               		.loc 1 36 0
  48 001c 1B82      		std Y+3,__zero_reg__
  49 001e 1A82      		std Y+2,__zero_reg__
  37:../../tmk_core/protocol/midi/midi_device.c ****   device->input_noteon_callback = NULL;
  50               		.loc 1 37 0
  51 0020 1D82      		std Y+5,__zero_reg__
  52 0022 1C82      		std Y+4,__zero_reg__
  38:../../tmk_core/protocol/midi/midi_device.c ****   device->input_noteoff_callback = NULL;
  53               		.loc 1 38 0
  54 0024 1F82      		std Y+7,__zero_reg__
  55 0026 1E82      		std Y+6,__zero_reg__
  39:../../tmk_core/protocol/midi/midi_device.c ****   device->input_aftertouch_callback = NULL;
  56               		.loc 1 39 0
  57 0028 1986      		std Y+9,__zero_reg__
  58 002a 1886      		std Y+8,__zero_reg__
  40:../../tmk_core/protocol/midi/midi_device.c ****   device->input_pitchbend_callback = NULL;
  59               		.loc 1 40 0
  60 002c 1B86      		std Y+11,__zero_reg__
  61 002e 1A86      		std Y+10,__zero_reg__
  41:../../tmk_core/protocol/midi/midi_device.c ****   device->input_songposition_callback = NULL;
  62               		.loc 1 41 0
  63 0030 1D86      		std Y+13,__zero_reg__
  64 0032 1C86      		std Y+12,__zero_reg__
  42:../../tmk_core/protocol/midi/midi_device.c **** 
  43:../../tmk_core/protocol/midi/midi_device.c ****   //two byte funcs
  44:../../tmk_core/protocol/midi/midi_device.c ****   device->input_progchange_callback = NULL;
  65               		.loc 1 44 0
  66 0034 1F86      		std Y+15,__zero_reg__
  67 0036 1E86      		std Y+14,__zero_reg__
  45:../../tmk_core/protocol/midi/midi_device.c ****   device->input_chanpressure_callback = NULL;
  68               		.loc 1 45 0
  69 0038 198A      		std Y+17,__zero_reg__
  70 003a 188A      		std Y+16,__zero_reg__
  46:../../tmk_core/protocol/midi/midi_device.c ****   device->input_songselect_callback = NULL;
  71               		.loc 1 46 0
  72 003c 1B8A      		std Y+19,__zero_reg__
  73 003e 1A8A      		std Y+18,__zero_reg__
  47:../../tmk_core/protocol/midi/midi_device.c ****   device->input_tc_quarterframe_callback = NULL;
  74               		.loc 1 47 0
  75 0040 1D8A      		std Y+21,__zero_reg__
  76 0042 1C8A      		std Y+20,__zero_reg__
  48:../../tmk_core/protocol/midi/midi_device.c **** 
  49:../../tmk_core/protocol/midi/midi_device.c ****   //one byte funcs
  50:../../tmk_core/protocol/midi/midi_device.c ****   device->input_realtime_callback = NULL;
  77               		.loc 1 50 0
  78 0044 1F8A      		std Y+23,__zero_reg__
  79 0046 1E8A      		std Y+22,__zero_reg__
  51:../../tmk_core/protocol/midi/midi_device.c ****   device->input_tunerequest_callback = NULL;
  80               		.loc 1 51 0
  81 0048 198E      		std Y+25,__zero_reg__
  82 004a 188E      		std Y+24,__zero_reg__
  52:../../tmk_core/protocol/midi/midi_device.c **** 
  53:../../tmk_core/protocol/midi/midi_device.c ****   //var byte functions
  54:../../tmk_core/protocol/midi/midi_device.c ****   device->input_sysex_callback = NULL;
  83               		.loc 1 54 0
  84 004c 1B8E      		std Y+27,__zero_reg__
  85 004e 1A8E      		std Y+26,__zero_reg__
  55:../../tmk_core/protocol/midi/midi_device.c ****   device->input_fallthrough_callback = NULL;
  86               		.loc 1 55 0
  87 0050 1D8E      		std Y+29,__zero_reg__
  88 0052 1C8E      		std Y+28,__zero_reg__
  56:../../tmk_core/protocol/midi/midi_device.c ****   device->input_catchall_callback = NULL;
  89               		.loc 1 56 0
  90 0054 1F8E      		std Y+31,__zero_reg__
  91 0056 1E8E      		std Y+30,__zero_reg__
  57:../../tmk_core/protocol/midi/midi_device.c **** 
  58:../../tmk_core/protocol/midi/midi_device.c ****   device->pre_input_process_callback = NULL;
  92               		.loc 1 58 0
  93 0058 19A2      		std Y+33,__zero_reg__
  94 005a 18A2      		std Y+32,__zero_reg__
  95               	/* epilogue start */
  59:../../tmk_core/protocol/midi/midi_device.c **** }
  96               		.loc 1 59 0
  97 005c DF91      		pop r29
  98 005e CF91      		pop r28
  99               	.LVL3:
 100 0060 0895      		ret
 101               		.cfi_endproc
 102               	.LFE0:
 104               		.section	.text.midi_device_input,"ax",@progbits
 105               	.global	midi_device_input
 107               	midi_device_input:
 108               	.LFB1:
  60:../../tmk_core/protocol/midi/midi_device.c **** 
  61:../../tmk_core/protocol/midi/midi_device.c **** void midi_device_input(MidiDevice * device, uint8_t cnt, uint8_t * input) {
 109               		.loc 1 61 0
 110               		.cfi_startproc
 111               	.LVL4:
 112 0000 EF92      		push r14
 113               	.LCFI2:
 114               		.cfi_def_cfa_offset 3
 115               		.cfi_offset 14, -2
 116 0002 FF92      		push r15
 117               	.LCFI3:
 118               		.cfi_def_cfa_offset 4
 119               		.cfi_offset 15, -3
 120 0004 0F93      		push r16
 121               	.LCFI4:
 122               		.cfi_def_cfa_offset 5
 123               		.cfi_offset 16, -4
 124 0006 1F93      		push r17
 125               	.LCFI5:
 126               		.cfi_def_cfa_offset 6
 127               		.cfi_offset 17, -5
 128 0008 CF93      		push r28
 129               	.LCFI6:
 130               		.cfi_def_cfa_offset 7
 131               		.cfi_offset 28, -6
 132 000a DF93      		push r29
 133               	.LCFI7:
 134               		.cfi_def_cfa_offset 8
 135               		.cfi_offset 29, -7
 136               	/* prologue: function */
 137               	/* frame size = 0 */
 138               	/* stack size = 6 */
 139               	.L__stack_usage = 6
 140 000c 162F      		mov r17,r22
 141               	.LVL5:
 142 000e 042F      		mov r16,r20
  62:../../tmk_core/protocol/midi/midi_device.c ****   uint8_t i;
  63:../../tmk_core/protocol/midi/midi_device.c ****   for (i = 0; i < cnt; i++)
 143               		.loc 1 63 0
 144 0010 EA01      		movw r28,r20
  64:../../tmk_core/protocol/midi/midi_device.c ****     bytequeue_enqueue(&device->input_queue, input[i]);
 145               		.loc 1 64 0
 146 0012 8851      		subi r24,24
 147 0014 9F4F      		sbci r25,-1
 148               	.LVL6:
 149 0016 7C01      		movw r14,r24
 150               	.LVL7:
 151               	.L3:
 152 0018 9C2F      		mov r25,r28
 153 001a 901B      		sub r25,r16
  63:../../tmk_core/protocol/midi/midi_device.c ****     bytequeue_enqueue(&device->input_queue, input[i]);
 154               		.loc 1 63 0 discriminator 1
 155 001c 9117      		cp r25,r17
 156 001e 00F4      		brsh .L6
 157               		.loc 1 64 0 discriminator 3
 158 0020 6991      		ld r22,Y+
 159               	.LVL8:
 160 0022 C701      		movw r24,r14
 161 0024 0E94 0000 		call bytequeue_enqueue
 162               	.LVL9:
 163 0028 00C0      		rjmp .L3
 164               	.L6:
 165               	/* epilogue start */
  65:../../tmk_core/protocol/midi/midi_device.c **** }
 166               		.loc 1 65 0
 167 002a DF91      		pop r29
 168 002c CF91      		pop r28
 169               	.LVL10:
 170 002e 1F91      		pop r17
 171               	.LVL11:
 172 0030 0F91      		pop r16
 173 0032 FF90      		pop r15
 174 0034 EF90      		pop r14
 175               	.LVL12:
 176 0036 0895      		ret
 177               		.cfi_endproc
 178               	.LFE1:
 180               		.section	.text.midi_device_set_send_func,"ax",@progbits
 181               	.global	midi_device_set_send_func
 183               	midi_device_set_send_func:
 184               	.LFB2:
  66:../../tmk_core/protocol/midi/midi_device.c **** 
  67:../../tmk_core/protocol/midi/midi_device.c **** void midi_device_set_send_func(MidiDevice * device, midi_var_byte_func_t send_func){
 185               		.loc 1 67 0
 186               		.cfi_startproc
 187               	.LVL13:
 188               	/* prologue: function */
 189               	/* frame size = 0 */
 190               	/* stack size = 0 */
 191               	.L__stack_usage = 0
  68:../../tmk_core/protocol/midi/midi_device.c ****   device->send_func = send_func;
 192               		.loc 1 68 0
 193 0000 FC01      		movw r30,r24
 194 0002 7183      		std Z+1,r23
 195 0004 6083      		st Z,r22
 196 0006 0895      		ret
 197               		.cfi_endproc
 198               	.LFE2:
 200               		.section	.text.midi_device_set_pre_input_process_func,"ax",@progbits
 201               	.global	midi_device_set_pre_input_process_func
 203               	midi_device_set_pre_input_process_func:
 204               	.LFB3:
  69:../../tmk_core/protocol/midi/midi_device.c **** }
  70:../../tmk_core/protocol/midi/midi_device.c **** 
  71:../../tmk_core/protocol/midi/midi_device.c **** void midi_device_set_pre_input_process_func(MidiDevice * device, midi_no_byte_func_t pre_process_fu
 205               		.loc 1 71 0
 206               		.cfi_startproc
 207               	.LVL14:
 208               	/* prologue: function */
 209               	/* frame size = 0 */
 210               	/* stack size = 0 */
 211               	.L__stack_usage = 0
  72:../../tmk_core/protocol/midi/midi_device.c ****   device->pre_input_process_callback = pre_process_func;
 212               		.loc 1 72 0
 213 0000 FC01      		movw r30,r24
 214 0002 71A3      		std Z+33,r23
 215 0004 60A3      		std Z+32,r22
 216 0006 0895      		ret
 217               		.cfi_endproc
 218               	.LFE3:
 220               		.section	.text.midi_input_callbacks,"ax",@progbits
 221               	.global	midi_input_callbacks
 223               	midi_input_callbacks:
 224               	.LFB6:
  73:../../tmk_core/protocol/midi/midi_device.c **** }
  74:../../tmk_core/protocol/midi/midi_device.c **** 
  75:../../tmk_core/protocol/midi/midi_device.c **** void midi_device_process(MidiDevice * device) {
  76:../../tmk_core/protocol/midi/midi_device.c ****   //call the pre_input_process_callback if there is one
  77:../../tmk_core/protocol/midi/midi_device.c ****   if(device->pre_input_process_callback)
  78:../../tmk_core/protocol/midi/midi_device.c ****     device->pre_input_process_callback(device);
  79:../../tmk_core/protocol/midi/midi_device.c **** 
  80:../../tmk_core/protocol/midi/midi_device.c ****   //pull stuff off the queue and process
  81:../../tmk_core/protocol/midi/midi_device.c ****   byteQueueIndex_t len = bytequeue_length(&device->input_queue);
  82:../../tmk_core/protocol/midi/midi_device.c ****   uint16_t i;
  83:../../tmk_core/protocol/midi/midi_device.c ****   //TODO limit number of bytes processed?
  84:../../tmk_core/protocol/midi/midi_device.c ****   for(i = 0; i < len; i++) {
  85:../../tmk_core/protocol/midi/midi_device.c ****     uint8_t val = bytequeue_get(&device->input_queue, 0);
  86:../../tmk_core/protocol/midi/midi_device.c ****     midi_process_byte(device, val);
  87:../../tmk_core/protocol/midi/midi_device.c ****     bytequeue_remove(&device->input_queue, 1);
  88:../../tmk_core/protocol/midi/midi_device.c ****   }
  89:../../tmk_core/protocol/midi/midi_device.c **** }
  90:../../tmk_core/protocol/midi/midi_device.c **** 
  91:../../tmk_core/protocol/midi/midi_device.c **** void midi_process_byte(MidiDevice * device, uint8_t input) {
  92:../../tmk_core/protocol/midi/midi_device.c ****   if (midi_is_realtime(input)) {
  93:../../tmk_core/protocol/midi/midi_device.c ****     //call callback, store and restore state
  94:../../tmk_core/protocol/midi/midi_device.c ****     input_state_t state = device->input_state;
  95:../../tmk_core/protocol/midi/midi_device.c ****     device->input_state = ONE_BYTE_MESSAGE;
  96:../../tmk_core/protocol/midi/midi_device.c ****     midi_input_callbacks(device, 1, input, 0, 0);
  97:../../tmk_core/protocol/midi/midi_device.c ****     device->input_state = state;
  98:../../tmk_core/protocol/midi/midi_device.c ****   } else if (midi_is_statusbyte(input)) {
  99:../../tmk_core/protocol/midi/midi_device.c ****     //store the byte
 100:../../tmk_core/protocol/midi/midi_device.c ****     if (device->input_state != SYSEX_MESSAGE) {
 101:../../tmk_core/protocol/midi/midi_device.c ****       device->input_buffer[0] = input;
 102:../../tmk_core/protocol/midi/midi_device.c ****       device->input_count = 1;
 103:../../tmk_core/protocol/midi/midi_device.c ****     }
 104:../../tmk_core/protocol/midi/midi_device.c ****     switch (midi_packet_length(input)) {
 105:../../tmk_core/protocol/midi/midi_device.c ****       case ONE:
 106:../../tmk_core/protocol/midi/midi_device.c ****         device->input_state = ONE_BYTE_MESSAGE;;
 107:../../tmk_core/protocol/midi/midi_device.c ****         midi_input_callbacks(device, 1, input, 0, 0);
 108:../../tmk_core/protocol/midi/midi_device.c ****         device->input_state = IDLE;
 109:../../tmk_core/protocol/midi/midi_device.c ****         break;
 110:../../tmk_core/protocol/midi/midi_device.c ****       case TWO:
 111:../../tmk_core/protocol/midi/midi_device.c ****         device->input_state = TWO_BYTE_MESSAGE;
 112:../../tmk_core/protocol/midi/midi_device.c ****         break;
 113:../../tmk_core/protocol/midi/midi_device.c ****       case THREE:
 114:../../tmk_core/protocol/midi/midi_device.c ****         device->input_state = THREE_BYTE_MESSAGE;
 115:../../tmk_core/protocol/midi/midi_device.c ****         break;
 116:../../tmk_core/protocol/midi/midi_device.c ****       case UNDEFINED:
 117:../../tmk_core/protocol/midi/midi_device.c ****         switch(input) {
 118:../../tmk_core/protocol/midi/midi_device.c ****           case SYSEX_BEGIN:
 119:../../tmk_core/protocol/midi/midi_device.c ****             device->input_state = SYSEX_MESSAGE;
 120:../../tmk_core/protocol/midi/midi_device.c ****             device->input_buffer[0] = input;
 121:../../tmk_core/protocol/midi/midi_device.c ****             device->input_count = 1;
 122:../../tmk_core/protocol/midi/midi_device.c ****             break;
 123:../../tmk_core/protocol/midi/midi_device.c ****           case SYSEX_END:
 124:../../tmk_core/protocol/midi/midi_device.c ****             //send what is left in the input buffer, set idle
 125:../../tmk_core/protocol/midi/midi_device.c ****             device->input_buffer[device->input_count % 3] = input;
 126:../../tmk_core/protocol/midi/midi_device.c ****             device->input_count += 1;
 127:../../tmk_core/protocol/midi/midi_device.c ****             //call the callback
 128:../../tmk_core/protocol/midi/midi_device.c ****             midi_input_callbacks(device, device->input_count, 
 129:../../tmk_core/protocol/midi/midi_device.c ****                 device->input_buffer[0], device->input_buffer[1], device->input_buffer[2]);
 130:../../tmk_core/protocol/midi/midi_device.c ****             device->input_state = IDLE;
 131:../../tmk_core/protocol/midi/midi_device.c ****             break;
 132:../../tmk_core/protocol/midi/midi_device.c ****           default:
 133:../../tmk_core/protocol/midi/midi_device.c ****             device->input_state = IDLE;
 134:../../tmk_core/protocol/midi/midi_device.c ****             device->input_count = 0;
 135:../../tmk_core/protocol/midi/midi_device.c ****         }
 136:../../tmk_core/protocol/midi/midi_device.c **** 
 137:../../tmk_core/protocol/midi/midi_device.c ****         break;
 138:../../tmk_core/protocol/midi/midi_device.c ****       default:
 139:../../tmk_core/protocol/midi/midi_device.c ****         device->input_state = IDLE;
 140:../../tmk_core/protocol/midi/midi_device.c ****         device->input_count = 0;
 141:../../tmk_core/protocol/midi/midi_device.c ****         break;
 142:../../tmk_core/protocol/midi/midi_device.c ****     }
 143:../../tmk_core/protocol/midi/midi_device.c ****   } else {
 144:../../tmk_core/protocol/midi/midi_device.c ****     if (device->input_state != IDLE) {
 145:../../tmk_core/protocol/midi/midi_device.c ****       //store the byte
 146:../../tmk_core/protocol/midi/midi_device.c ****       device->input_buffer[device->input_count % 3] = input;
 147:../../tmk_core/protocol/midi/midi_device.c ****       //increment count
 148:../../tmk_core/protocol/midi/midi_device.c ****       uint16_t prev = device->input_count;
 149:../../tmk_core/protocol/midi/midi_device.c ****       device->input_count += 1;
 150:../../tmk_core/protocol/midi/midi_device.c **** 
 151:../../tmk_core/protocol/midi/midi_device.c ****       switch(prev % 3) {
 152:../../tmk_core/protocol/midi/midi_device.c ****         case 2:
 153:../../tmk_core/protocol/midi/midi_device.c ****           //call callback
 154:../../tmk_core/protocol/midi/midi_device.c ****           midi_input_callbacks(device, device->input_count,
 155:../../tmk_core/protocol/midi/midi_device.c ****               device->input_buffer[0], device->input_buffer[1], device->input_buffer[2]);
 156:../../tmk_core/protocol/midi/midi_device.c ****           if (device->input_state != SYSEX_MESSAGE) {
 157:../../tmk_core/protocol/midi/midi_device.c ****             //set to 1, keeping status byte, allowing for running status
 158:../../tmk_core/protocol/midi/midi_device.c ****             device->input_count = 1;
 159:../../tmk_core/protocol/midi/midi_device.c ****           }
 160:../../tmk_core/protocol/midi/midi_device.c ****           break;
 161:../../tmk_core/protocol/midi/midi_device.c ****         case 1:
 162:../../tmk_core/protocol/midi/midi_device.c ****           if (device->input_state == TWO_BYTE_MESSAGE) {
 163:../../tmk_core/protocol/midi/midi_device.c ****             //call callback
 164:../../tmk_core/protocol/midi/midi_device.c ****             midi_input_callbacks(device, device->input_count,
 165:../../tmk_core/protocol/midi/midi_device.c ****                 device->input_buffer[0], device->input_buffer[1], 0);
 166:../../tmk_core/protocol/midi/midi_device.c ****             if (device->input_state != SYSEX_MESSAGE) {
 167:../../tmk_core/protocol/midi/midi_device.c ****               //set to 1, keeping status byte, allowing for running status
 168:../../tmk_core/protocol/midi/midi_device.c ****               device->input_count = 1;
 169:../../tmk_core/protocol/midi/midi_device.c ****             }
 170:../../tmk_core/protocol/midi/midi_device.c ****           }
 171:../../tmk_core/protocol/midi/midi_device.c ****           break;
 172:../../tmk_core/protocol/midi/midi_device.c ****         case 0:
 173:../../tmk_core/protocol/midi/midi_device.c ****         default:
 174:../../tmk_core/protocol/midi/midi_device.c ****           //one byte messages are dealt with directly
 175:../../tmk_core/protocol/midi/midi_device.c ****           break;
 176:../../tmk_core/protocol/midi/midi_device.c ****       }
 177:../../tmk_core/protocol/midi/midi_device.c ****     }
 178:../../tmk_core/protocol/midi/midi_device.c ****   }
 179:../../tmk_core/protocol/midi/midi_device.c **** }
 180:../../tmk_core/protocol/midi/midi_device.c **** 
 181:../../tmk_core/protocol/midi/midi_device.c **** void midi_input_callbacks(MidiDevice * device, uint16_t cnt, uint8_t byte0, uint8_t byte1, uint8_t 
 225               		.loc 1 181 0
 226               		.cfi_startproc
 227               	.LVL15:
 228 0000 AF92      		push r10
 229               	.LCFI8:
 230               		.cfi_def_cfa_offset 3
 231               		.cfi_offset 10, -2
 232 0002 BF92      		push r11
 233               	.LCFI9:
 234               		.cfi_def_cfa_offset 4
 235               		.cfi_offset 11, -3
 236 0004 CF92      		push r12
 237               	.LCFI10:
 238               		.cfi_def_cfa_offset 5
 239               		.cfi_offset 12, -4
 240 0006 DF92      		push r13
 241               	.LCFI11:
 242               		.cfi_def_cfa_offset 6
 243               		.cfi_offset 13, -5
 244 0008 EF92      		push r14
 245               	.LCFI12:
 246               		.cfi_def_cfa_offset 7
 247               		.cfi_offset 14, -6
 248 000a FF92      		push r15
 249               	.LCFI13:
 250               		.cfi_def_cfa_offset 8
 251               		.cfi_offset 15, -7
 252 000c 0F93      		push r16
 253               	.LCFI14:
 254               		.cfi_def_cfa_offset 9
 255               		.cfi_offset 16, -8
 256 000e 1F93      		push r17
 257               	.LCFI15:
 258               		.cfi_def_cfa_offset 10
 259               		.cfi_offset 17, -9
 260 0010 CF93      		push r28
 261               	.LCFI16:
 262               		.cfi_def_cfa_offset 11
 263               		.cfi_offset 28, -10
 264 0012 DF93      		push r29
 265               	.LCFI17:
 266               		.cfi_def_cfa_offset 12
 267               		.cfi_offset 29, -11
 268 0014 00D0      		rcall .
 269 0016 1F92      		push __zero_reg__
 270               	.LCFI18:
 271               		.cfi_def_cfa_offset 15
 272 0018 CDB7      		in r28,__SP_L__
 273 001a DEB7      		in r29,__SP_H__
 274               	.LCFI19:
 275               		.cfi_def_cfa_register 28
 276               	/* prologue: function */
 277               	/* frame size = 3 */
 278               	/* stack size = 13 */
 279               	.L__stack_usage = 13
 280 001c 7C01      		movw r14,r24
 281 001e 6B01      		movw r12,r22
 282 0020 142F      		mov r17,r20
 283 0022 B22E      		mov r11,r18
 284 0024 A02E      		mov r10,r16
 285               	.LVL16:
 182:../../tmk_core/protocol/midi/midi_device.c ****   //did we end up calling a callback?
 183:../../tmk_core/protocol/midi/midi_device.c ****   bool called = false;
 184:../../tmk_core/protocol/midi/midi_device.c ****   if (device->input_state == SYSEX_MESSAGE) {
 286               		.loc 1 184 0
 287 0026 DC01      		movw r26,r24
 288 0028 9596      		adiw r26,37
 289 002a 8C91      		ld r24,X
 290 002c 9597      		sbiw r26,37
 291               	.LVL17:
 292 002e 8430      		cpi r24,lo8(4)
 293 0030 01F4      		brne .L10
 185:../../tmk_core/protocol/midi/midi_device.c ****     if (device->input_sysex_callback) {
 294               		.loc 1 185 0
 295 0032 5A96      		adiw r26,26
 296 0034 ED91      		ld r30,X+
 297 0036 FC91      		ld r31,X
 298 0038 5B97      		sbiw r26,26+1
 299 003a 3097      		sbiw r30,0
 300 003c 01F4      		brne .+2
 301 003e 00C0      		rjmp .L40
 302               	.LBB2:
 186:../../tmk_core/protocol/midi/midi_device.c ****       const uint16_t start = ((cnt - 1) / 3) * 3;
 303               		.loc 1 186 0
 304 0040 CB01      		movw r24,r22
 305 0042 0197      		sbiw r24,1
 306 0044 63E0      		ldi r22,lo8(3)
 307 0046 70E0      		ldi r23,0
 308               	.LVL18:
 309 0048 0E94 0000 		call __udivmodhi4
 310 004c CB01      		movw r24,r22
 311 004e 880F      		lsl r24
 312 0050 991F      		rol r25
 313               	.LVL19:
 314 0052 860F      		add r24,r22
 315 0054 971F      		adc r25,r23
 316               	.LVL20:
 187:../../tmk_core/protocol/midi/midi_device.c ****       const uint8_t length = (cnt - start);
 188:../../tmk_core/protocol/midi/midi_device.c ****       uint8_t data[3];
 189:../../tmk_core/protocol/midi/midi_device.c ****       data[0] = byte0;
 317               		.loc 1 189 0
 318 0056 4983      		std Y+1,r20
 190:../../tmk_core/protocol/midi/midi_device.c ****       data[1] = byte1;
 319               		.loc 1 190 0
 320 0058 BA82      		std Y+2,r11
 191:../../tmk_core/protocol/midi/midi_device.c ****       data[2] = byte2;
 321               		.loc 1 191 0
 322 005a 0B83      		std Y+3,r16
 187:../../tmk_core/protocol/midi/midi_device.c ****       const uint8_t length = (cnt - start);
 323               		.loc 1 187 0
 324 005c 4C2D      		mov r20,r12
 325               	.LVL21:
 326 005e 481B      		sub r20,r24
 192:../../tmk_core/protocol/midi/midi_device.c ****       device->input_sysex_callback(device, start, length, data);
 327               		.loc 1 192 0
 328 0060 9E01      		movw r18,r28
 329 0062 2F5F      		subi r18,-1
 330 0064 3F4F      		sbci r19,-1
 331 0066 BC01      		movw r22,r24
 332 0068 C701      		movw r24,r14
 333               	.LVL22:
 334 006a 0995      		icall
 335               	.LVL23:
 336 006c 00C0      		rjmp .L38
 337               	.LVL24:
 338               	.L10:
 339               	.LBE2:
 193:../../tmk_core/protocol/midi/midi_device.c ****       called = true;
 194:../../tmk_core/protocol/midi/midi_device.c ****     }
 195:../../tmk_core/protocol/midi/midi_device.c ****   } else {
 196:../../tmk_core/protocol/midi/midi_device.c ****     switch (cnt) {
 340               		.loc 1 196 0
 341 006e 6230      		cpi r22,2
 342 0070 7105      		cpc r23,__zero_reg__
 343 0072 01F4      		brne .+2
 344 0074 00C0      		rjmp .L14
 345 0076 6330      		cpi r22,3
 346 0078 7105      		cpc r23,__zero_reg__
 347 007a 01F0      		breq .L15
 348 007c 6130      		cpi r22,1
 349 007e 7105      		cpc r23,__zero_reg__
 350 0080 01F0      		breq .+2
 351 0082 00C0      		rjmp .L59
 352 0084 00C0      		rjmp .L63
 353               	.L15:
 354               	.LVL25:
 355               	.LBB3:
 197:../../tmk_core/protocol/midi/midi_device.c ****       case 3:
 198:../../tmk_core/protocol/midi/midi_device.c ****         {
 199:../../tmk_core/protocol/midi/midi_device.c ****           midi_three_byte_func_t func = NULL;
 200:../../tmk_core/protocol/midi/midi_device.c ****           switch (byte0 & 0xF0) {
 356               		.loc 1 200 0
 357 0086 842F      		mov r24,r20
 358 0088 807F      		andi r24,lo8(-16)
 359 008a 803A      		cpi r24,lo8(-96)
 360 008c 01F0      		breq .L18
 361 008e 00F4      		brsh .L19
 362 0090 8038      		cpi r24,lo8(-128)
 363 0092 01F0      		breq .L20
 364 0094 8039      		cpi r24,lo8(-112)
 365 0096 01F0      		breq .+2
 366 0098 00C0      		rjmp .L40
 201:../../tmk_core/protocol/midi/midi_device.c ****             case MIDI_CC:
 202:../../tmk_core/protocol/midi/midi_device.c ****               func = device->input_cc_callback;
 203:../../tmk_core/protocol/midi/midi_device.c ****               break;
 204:../../tmk_core/protocol/midi/midi_device.c ****             case MIDI_NOTEON:
 205:../../tmk_core/protocol/midi/midi_device.c ****               func = device->input_noteon_callback;
 367               		.loc 1 205 0
 368 009a D701      		movw r26,r14
 369 009c 1496      		adiw r26,4
 370 009e ED91      		ld r30,X+
 371 00a0 FC91      		ld r31,X
 372 00a2 1597      		sbiw r26,4+1
 373               	.LVL26:
 206:../../tmk_core/protocol/midi/midi_device.c ****               break;
 374               		.loc 1 206 0
 375 00a4 00C0      		rjmp .L25
 376               	.LVL27:
 377               	.L19:
 200:../../tmk_core/protocol/midi/midi_device.c ****             case MIDI_CC:
 378               		.loc 1 200 0
 379 00a6 803E      		cpi r24,lo8(-32)
 380 00a8 01F0      		breq .L22
 381 00aa 803F      		cpi r24,lo8(-16)
 382 00ac 01F0      		breq .L23
 383 00ae 803B      		cpi r24,lo8(-80)
 384 00b0 01F0      		breq .+2
 385 00b2 00C0      		rjmp .L40
 202:../../tmk_core/protocol/midi/midi_device.c ****               break;
 386               		.loc 1 202 0
 387 00b4 D701      		movw r26,r14
 388 00b6 1296      		adiw r26,2
 389 00b8 ED91      		ld r30,X+
 390 00ba FC91      		ld r31,X
 391 00bc 1397      		sbiw r26,2+1
 392               	.LVL28:
 203:../../tmk_core/protocol/midi/midi_device.c ****             case MIDI_NOTEON:
 393               		.loc 1 203 0
 394 00be 00C0      		rjmp .L25
 395               	.LVL29:
 396               	.L20:
 207:../../tmk_core/protocol/midi/midi_device.c ****             case MIDI_NOTEOFF:
 208:../../tmk_core/protocol/midi/midi_device.c ****               func = device->input_noteoff_callback;
 397               		.loc 1 208 0
 398 00c0 D701      		movw r26,r14
 399 00c2 1696      		adiw r26,6
 400 00c4 ED91      		ld r30,X+
 401 00c6 FC91      		ld r31,X
 402 00c8 1797      		sbiw r26,6+1
 403               	.LVL30:
 209:../../tmk_core/protocol/midi/midi_device.c ****               break;
 404               		.loc 1 209 0
 405 00ca 00C0      		rjmp .L25
 406               	.LVL31:
 407               	.L18:
 210:../../tmk_core/protocol/midi/midi_device.c ****             case MIDI_AFTERTOUCH:
 211:../../tmk_core/protocol/midi/midi_device.c ****               func = device->input_aftertouch_callback;
 408               		.loc 1 211 0
 409 00cc D701      		movw r26,r14
 410 00ce 1896      		adiw r26,8
 411 00d0 ED91      		ld r30,X+
 412 00d2 FC91      		ld r31,X
 413 00d4 1997      		sbiw r26,8+1
 414               	.LVL32:
 212:../../tmk_core/protocol/midi/midi_device.c ****               break;
 415               		.loc 1 212 0
 416 00d6 00C0      		rjmp .L25
 417               	.LVL33:
 418               	.L22:
 213:../../tmk_core/protocol/midi/midi_device.c ****             case MIDI_PITCHBEND:
 214:../../tmk_core/protocol/midi/midi_device.c ****               func = device->input_pitchbend_callback;
 419               		.loc 1 214 0
 420 00d8 D701      		movw r26,r14
 421 00da 1A96      		adiw r26,10
 422 00dc ED91      		ld r30,X+
 423 00de FC91      		ld r31,X
 424 00e0 1B97      		sbiw r26,10+1
 425               	.LVL34:
 215:../../tmk_core/protocol/midi/midi_device.c ****               break;
 426               		.loc 1 215 0
 427 00e2 00C0      		rjmp .L25
 428               	.LVL35:
 429               	.L23:
 216:../../tmk_core/protocol/midi/midi_device.c ****             case 0xF0:
 217:../../tmk_core/protocol/midi/midi_device.c ****               if (byte0 == MIDI_SONGPOSITION)
 430               		.loc 1 217 0
 431 00e4 423F      		cpi r20,lo8(-14)
 432 00e6 01F0      		breq .+2
 433 00e8 00C0      		rjmp .L40
 218:../../tmk_core/protocol/midi/midi_device.c ****                 func = device->input_songposition_callback;
 434               		.loc 1 218 0
 435 00ea D701      		movw r26,r14
 436 00ec 1C96      		adiw r26,12
 437 00ee ED91      		ld r30,X+
 438 00f0 FC91      		ld r31,X
 439 00f2 1D97      		sbiw r26,12+1
 440               	.LVL36:
 219:../../tmk_core/protocol/midi/midi_device.c ****               break;
 220:../../tmk_core/protocol/midi/midi_device.c ****             default:
 221:../../tmk_core/protocol/midi/midi_device.c ****               break;
 222:../../tmk_core/protocol/midi/midi_device.c ****           }
 223:../../tmk_core/protocol/midi/midi_device.c ****           if(func) {
 441               		.loc 1 223 0
 442 00f4 3097      		sbiw r30,0
 443 00f6 01F4      		brne .L27
 444 00f8 00C0      		rjmp .L40
 445               	.L25:
 446 00fa 3097      		sbiw r30,0
 447 00fc 01F4      		brne .+2
 448 00fe 00C0      		rjmp .L40
 224:../../tmk_core/protocol/midi/midi_device.c ****             //mask off the channel for non song position functions
 225:../../tmk_core/protocol/midi/midi_device.c ****             if (byte0 == MIDI_SONGPOSITION)
 449               		.loc 1 225 0
 450 0100 123F      		cpi r17,lo8(-14)
 451 0102 01F4      		brne .L28
 452               	.L27:
 226:../../tmk_core/protocol/midi/midi_device.c ****               func(device, byte0, byte1, byte2);
 453               		.loc 1 226 0
 454 0104 2A2D      		mov r18,r10
 455 0106 4B2D      		mov r20,r11
 456 0108 62EF      		ldi r22,lo8(-14)
 457 010a 00C0      		rjmp .L62
 458               	.L28:
 227:../../tmk_core/protocol/midi/midi_device.c ****             else
 228:../../tmk_core/protocol/midi/midi_device.c ****               func(device, byte0 & 0x0F, byte1, byte2);
 459               		.loc 1 228 0
 460 010c 2A2D      		mov r18,r10
 461 010e 4B2D      		mov r20,r11
 462 0110 612F      		mov r22,r17
 463 0112 6F70      		andi r22,lo8(15)
 464               	.L62:
 465 0114 C701      		movw r24,r14
 466 0116 0995      		icall
 467               	.LVL37:
 468 0118 00C0      		rjmp .L38
 469               	.L14:
 470               	.LVL38:
 471               	.LBE3:
 472               	.LBB4:
 229:../../tmk_core/protocol/midi/midi_device.c ****             called = true;
 230:../../tmk_core/protocol/midi/midi_device.c ****           }
 231:../../tmk_core/protocol/midi/midi_device.c ****         }
 232:../../tmk_core/protocol/midi/midi_device.c ****         break;
 233:../../tmk_core/protocol/midi/midi_device.c ****       case 2:
 234:../../tmk_core/protocol/midi/midi_device.c ****         {
 235:../../tmk_core/protocol/midi/midi_device.c ****           midi_two_byte_func_t func = NULL;
 236:../../tmk_core/protocol/midi/midi_device.c ****           switch (byte0 & 0xF0) {
 473               		.loc 1 236 0
 474 011a 842F      		mov r24,r20
 475 011c 807F      		andi r24,lo8(-16)
 476 011e 803D      		cpi r24,lo8(-48)
 477 0120 01F0      		breq .L29
 478 0122 803F      		cpi r24,lo8(-16)
 479 0124 01F0      		breq .L30
 480 0126 803C      		cpi r24,lo8(-64)
 481 0128 01F0      		breq .+2
 482 012a 00C0      		rjmp .L40
 237:../../tmk_core/protocol/midi/midi_device.c ****             case MIDI_PROGCHANGE:
 238:../../tmk_core/protocol/midi/midi_device.c ****               func = device->input_progchange_callback;
 483               		.loc 1 238 0
 484 012c D701      		movw r26,r14
 485 012e 1E96      		adiw r26,14
 486 0130 ED91      		ld r30,X+
 487 0132 FC91      		ld r31,X
 488 0134 1F97      		sbiw r26,14+1
 489               	.LVL39:
 239:../../tmk_core/protocol/midi/midi_device.c ****               break;
 490               		.loc 1 239 0
 491 0136 00C0      		rjmp .L32
 492               	.LVL40:
 493               	.L29:
 240:../../tmk_core/protocol/midi/midi_device.c ****             case MIDI_CHANPRESSURE:
 241:../../tmk_core/protocol/midi/midi_device.c ****               func = device->input_chanpressure_callback;
 494               		.loc 1 241 0
 495 0138 D701      		movw r26,r14
 496 013a 5096      		adiw r26,16
 497 013c ED91      		ld r30,X+
 498 013e FC91      		ld r31,X
 499 0140 5197      		sbiw r26,16+1
 500               	.LVL41:
 242:../../tmk_core/protocol/midi/midi_device.c ****               break;
 501               		.loc 1 242 0
 502 0142 00C0      		rjmp .L32
 503               	.LVL42:
 504               	.L30:
 243:../../tmk_core/protocol/midi/midi_device.c ****             case 0xF0:
 244:../../tmk_core/protocol/midi/midi_device.c ****               if (byte0 == MIDI_SONGSELECT)
 505               		.loc 1 244 0
 506 0144 433F      		cpi r20,lo8(-13)
 507 0146 01F4      		brne .L33
 245:../../tmk_core/protocol/midi/midi_device.c ****                 func = device->input_songselect_callback;
 508               		.loc 1 245 0
 509 0148 D701      		movw r26,r14
 510 014a 5296      		adiw r26,18
 511 014c ED91      		ld r30,X+
 512 014e FC91      		ld r31,X
 513 0150 5397      		sbiw r26,18+1
 514               	.LVL43:
 515 0152 00C0      		rjmp .L60
 516               	.LVL44:
 517               	.L33:
 246:../../tmk_core/protocol/midi/midi_device.c ****               else if (byte0 == MIDI_TC_QUARTERFRAME)
 518               		.loc 1 246 0
 519 0154 413F      		cpi r20,lo8(-15)
 520 0156 01F4      		brne .L40
 247:../../tmk_core/protocol/midi/midi_device.c ****                 func = device->input_tc_quarterframe_callback;
 521               		.loc 1 247 0
 522 0158 D701      		movw r26,r14
 523 015a 5496      		adiw r26,20
 524 015c ED91      		ld r30,X+
 525 015e FC91      		ld r31,X
 526 0160 5597      		sbiw r26,20+1
 527               	.LVL45:
 528               	.L60:
 248:../../tmk_core/protocol/midi/midi_device.c ****               break;
 249:../../tmk_core/protocol/midi/midi_device.c ****             default:
 250:../../tmk_core/protocol/midi/midi_device.c ****               break;
 251:../../tmk_core/protocol/midi/midi_device.c ****           }
 252:../../tmk_core/protocol/midi/midi_device.c ****           if(func) {
 529               		.loc 1 252 0
 530 0162 3097      		sbiw r30,0
 531 0164 01F4      		brne .L34
 532 0166 00C0      		rjmp .L40
 533               	.L32:
 534 0168 3097      		sbiw r30,0
 535 016a 01F0      		breq .L40
 253:../../tmk_core/protocol/midi/midi_device.c ****             //mask off the channel
 254:../../tmk_core/protocol/midi/midi_device.c ****             if (byte0 == MIDI_SONGSELECT || byte0 == MIDI_TC_QUARTERFRAME)
 536               		.loc 1 254 0 discriminator 1
 537 016c 812F      		mov r24,r17
 538 016e 8D7F      		andi r24,lo8(-3)
 539 0170 813F      		cpi r24,lo8(-15)
 540 0172 01F4      		brne .L35
 541               	.L34:
 255:../../tmk_core/protocol/midi/midi_device.c ****               func(device, byte0, byte1);
 542               		.loc 1 255 0
 543 0174 4B2D      		mov r20,r11
 544 0176 612F      		mov r22,r17
 545 0178 00C0      		rjmp .L61
 546               	.L35:
 256:../../tmk_core/protocol/midi/midi_device.c ****             else
 257:../../tmk_core/protocol/midi/midi_device.c ****               func(device, byte0 & 0x0F, byte1);
 547               		.loc 1 257 0
 548 017a 4B2D      		mov r20,r11
 549 017c 612F      		mov r22,r17
 550 017e 6F70      		andi r22,lo8(15)
 551               	.L61:
 552 0180 C701      		movw r24,r14
 553 0182 0995      		icall
 554               	.LVL46:
 555 0184 00C0      		rjmp .L38
 556               	.L63:
 557               	.LVL47:
 558               	.LBE4:
 559               	.LBB5:
 258:../../tmk_core/protocol/midi/midi_device.c ****             called = true;
 259:../../tmk_core/protocol/midi/midi_device.c ****           }
 260:../../tmk_core/protocol/midi/midi_device.c ****         }
 261:../../tmk_core/protocol/midi/midi_device.c ****         break;
 262:../../tmk_core/protocol/midi/midi_device.c ****       case 1:
 263:../../tmk_core/protocol/midi/midi_device.c ****         {
 264:../../tmk_core/protocol/midi/midi_device.c ****           midi_one_byte_func_t func = NULL;
 265:../../tmk_core/protocol/midi/midi_device.c ****           if (midi_is_realtime(byte0))
 560               		.loc 1 265 0
 561 0186 842F      		mov r24,r20
 562 0188 0E94 0000 		call midi_is_realtime
 563               	.LVL48:
 564 018c 8823      		tst r24
 565 018e 01F0      		breq .L36
 266:../../tmk_core/protocol/midi/midi_device.c ****             func = device->input_realtime_callback;
 566               		.loc 1 266 0
 567 0190 D701      		movw r26,r14
 568 0192 5696      		adiw r26,22
 569 0194 ED91      		ld r30,X+
 570 0196 FC91      		ld r31,X
 571 0198 5797      		sbiw r26,22+1
 572               	.LVL49:
 573 019a 00C0      		rjmp .L37
 574               	.LVL50:
 575               	.L36:
 267:../../tmk_core/protocol/midi/midi_device.c ****           else if (byte0 == MIDI_TUNEREQUEST)
 576               		.loc 1 267 0
 577 019c 163F      		cpi r17,lo8(-10)
 578 019e 01F4      		brne .L40
 268:../../tmk_core/protocol/midi/midi_device.c ****             func = device->input_tunerequest_callback;
 579               		.loc 1 268 0
 580 01a0 D701      		movw r26,r14
 581 01a2 5896      		adiw r26,24
 582 01a4 ED91      		ld r30,X+
 583 01a6 FC91      		ld r31,X
 584 01a8 5997      		sbiw r26,24+1
 585               	.LVL51:
 586               	.L37:
 269:../../tmk_core/protocol/midi/midi_device.c ****           if (func) {
 587               		.loc 1 269 0
 588 01aa 3097      		sbiw r30,0
 589 01ac 01F0      		breq .L40
 270:../../tmk_core/protocol/midi/midi_device.c ****             func(device, byte0);
 590               		.loc 1 270 0
 591 01ae 612F      		mov r22,r17
 592 01b0 C701      		movw r24,r14
 593 01b2 0995      		icall
 594               	.LVL52:
 595 01b4 00C0      		rjmp .L38
 596               	.LVL53:
 597               	.L59:
 598               	.LBE5:
 271:../../tmk_core/protocol/midi/midi_device.c ****             called = true;
 272:../../tmk_core/protocol/midi/midi_device.c ****           }
 273:../../tmk_core/protocol/midi/midi_device.c ****         }
 274:../../tmk_core/protocol/midi/midi_device.c ****         break;
 275:../../tmk_core/protocol/midi/midi_device.c ****       default:
 276:../../tmk_core/protocol/midi/midi_device.c ****         //just in case
 277:../../tmk_core/protocol/midi/midi_device.c ****         if (cnt > 3)
 599               		.loc 1 277 0
 600 01b6 6430      		cpi r22,4
 601 01b8 7105      		cpc r23,__zero_reg__
 602 01ba 00F0      		brlo .L40
 278:../../tmk_core/protocol/midi/midi_device.c ****           cnt = 0;
 603               		.loc 1 278 0
 604 01bc C12C      		mov r12,__zero_reg__
 605 01be D12C      		mov r13,__zero_reg__
 606               	.LVL54:
 607               	.L40:
 279:../../tmk_core/protocol/midi/midi_device.c ****         break;
 280:../../tmk_core/protocol/midi/midi_device.c ****     }
 281:../../tmk_core/protocol/midi/midi_device.c ****   }
 282:../../tmk_core/protocol/midi/midi_device.c **** 
 283:../../tmk_core/protocol/midi/midi_device.c ****   //if there is fallthrough default callback and we haven't called a more specific one, 
 284:../../tmk_core/protocol/midi/midi_device.c ****   //call the fallthrough
 285:../../tmk_core/protocol/midi/midi_device.c ****   if (!called && device->input_fallthrough_callback)
 608               		.loc 1 285 0 discriminator 1
 609 01c0 D701      		movw r26,r14
 610 01c2 5C96      		adiw r26,28
 611 01c4 ED91      		ld r30,X+
 612 01c6 FC91      		ld r31,X
 613 01c8 5D97      		sbiw r26,28+1
 614 01ca 3097      		sbiw r30,0
 615 01cc 01F0      		breq .L38
 286:../../tmk_core/protocol/midi/midi_device.c ****     device->input_fallthrough_callback(device, cnt, byte0, byte1, byte2);
 616               		.loc 1 286 0
 617 01ce 0A2D      		mov r16,r10
 618 01d0 2B2D      		mov r18,r11
 619 01d2 412F      		mov r20,r17
 620 01d4 B601      		movw r22,r12
 621 01d6 C701      		movw r24,r14
 622 01d8 0995      		icall
 623               	.LVL55:
 624               	.L38:
 287:../../tmk_core/protocol/midi/midi_device.c ****   //always call the catch all if it exists
 288:../../tmk_core/protocol/midi/midi_device.c ****   if (device->input_catchall_callback)
 625               		.loc 1 288 0
 626 01da D701      		movw r26,r14
 627 01dc 5E96      		adiw r26,30
 628 01de ED91      		ld r30,X+
 629 01e0 FC91      		ld r31,X
 630 01e2 5F97      		sbiw r26,30+1
 631 01e4 3097      		sbiw r30,0
 632 01e6 01F0      		breq .L9
 289:../../tmk_core/protocol/midi/midi_device.c ****     device->input_catchall_callback(device, cnt, byte0, byte1, byte2);
 633               		.loc 1 289 0
 634 01e8 0A2D      		mov r16,r10
 635 01ea 2B2D      		mov r18,r11
 636 01ec 412F      		mov r20,r17
 637 01ee B601      		movw r22,r12
 638 01f0 C701      		movw r24,r14
 639 01f2 0995      		icall
 640               	.LVL56:
 641               	.L9:
 642               	/* epilogue start */
 290:../../tmk_core/protocol/midi/midi_device.c **** }
 643               		.loc 1 290 0
 644 01f4 0F90      		pop __tmp_reg__
 645 01f6 0F90      		pop __tmp_reg__
 646 01f8 0F90      		pop __tmp_reg__
 647 01fa DF91      		pop r29
 648 01fc CF91      		pop r28
 649 01fe 1F91      		pop r17
 650               	.LVL57:
 651 0200 0F91      		pop r16
 652 0202 FF90      		pop r15
 653 0204 EF90      		pop r14
 654               	.LVL58:
 655 0206 DF90      		pop r13
 656 0208 CF90      		pop r12
 657               	.LVL59:
 658 020a BF90      		pop r11
 659               	.LVL60:
 660 020c AF90      		pop r10
 661               	.LVL61:
 662 020e 0895      		ret
 663               		.cfi_endproc
 664               	.LFE6:
 666               		.section	.text.midi_process_byte,"ax",@progbits
 667               	.global	midi_process_byte
 669               	midi_process_byte:
 670               	.LFB5:
  91:../../tmk_core/protocol/midi/midi_device.c ****   if (midi_is_realtime(input)) {
 671               		.loc 1 91 0
 672               		.cfi_startproc
 673               	.LVL62:
 674 0000 FF92      		push r15
 675               	.LCFI20:
 676               		.cfi_def_cfa_offset 3
 677               		.cfi_offset 15, -2
 678 0002 0F93      		push r16
 679               	.LCFI21:
 680               		.cfi_def_cfa_offset 4
 681               		.cfi_offset 16, -3
 682 0004 1F93      		push r17
 683               	.LCFI22:
 684               		.cfi_def_cfa_offset 5
 685               		.cfi_offset 17, -4
 686 0006 CF93      		push r28
 687               	.LCFI23:
 688               		.cfi_def_cfa_offset 6
 689               		.cfi_offset 28, -5
 690 0008 DF93      		push r29
 691               	.LCFI24:
 692               		.cfi_def_cfa_offset 7
 693               		.cfi_offset 29, -6
 694               	/* prologue: function */
 695               	/* frame size = 0 */
 696               	/* stack size = 5 */
 697               	.L__stack_usage = 5
 698 000a EC01      		movw r28,r24
 699 000c 162F      		mov r17,r22
  92:../../tmk_core/protocol/midi/midi_device.c ****     //call callback, store and restore state
 700               		.loc 1 92 0
 701 000e 862F      		mov r24,r22
 702               	.LVL63:
 703 0010 0E94 0000 		call midi_is_realtime
 704               	.LVL64:
 705 0014 8823      		tst r24
 706 0016 01F0      		breq .L65
 707               	.LBB6:
  94:../../tmk_core/protocol/midi/midi_device.c ****     device->input_state = ONE_BYTE_MESSAGE;
 708               		.loc 1 94 0
 709 0018 FDA0      		ldd r15,Y+37
 710               	.LVL65:
  95:../../tmk_core/protocol/midi/midi_device.c ****     midi_input_callbacks(device, 1, input, 0, 0);
 711               		.loc 1 95 0
 712 001a 81E0      		ldi r24,lo8(1)
 713 001c 8DA3      		std Y+37,r24
  96:../../tmk_core/protocol/midi/midi_device.c ****     device->input_state = state;
 714               		.loc 1 96 0
 715 001e 00E0      		ldi r16,0
 716 0020 20E0      		ldi r18,0
 717 0022 412F      		mov r20,r17
 718 0024 61E0      		ldi r22,lo8(1)
 719 0026 70E0      		ldi r23,0
 720 0028 CE01      		movw r24,r28
 721 002a 0E94 0000 		call midi_input_callbacks
 722               	.LVL66:
  97:../../tmk_core/protocol/midi/midi_device.c ****   } else if (midi_is_statusbyte(input)) {
 723               		.loc 1 97 0
 724 002e FDA2      		std Y+37,r15
 725               	.LBE6:
 726 0030 00C0      		rjmp .L64
 727               	.LVL67:
 728               	.L65:
  98:../../tmk_core/protocol/midi/midi_device.c ****     //store the byte
 729               		.loc 1 98 0
 730 0032 812F      		mov r24,r17
 731 0034 0E94 0000 		call midi_is_statusbyte
 732               	.LVL68:
 733 0038 4DA1      		ldd r20,Y+37
 734 003a 8823      		tst r24
 735 003c 01F4      		brne .+2
 736 003e 00C0      		rjmp .L67
 100:../../tmk_core/protocol/midi/midi_device.c ****       device->input_buffer[0] = input;
 737               		.loc 1 100 0
 738 0040 4430      		cpi r20,lo8(4)
 739 0042 01F0      		breq .L68
 101:../../tmk_core/protocol/midi/midi_device.c ****       device->input_count = 1;
 740               		.loc 1 101 0
 741 0044 1AA3      		std Y+34,r17
 102:../../tmk_core/protocol/midi/midi_device.c ****     }
 742               		.loc 1 102 0
 743 0046 81E0      		ldi r24,lo8(1)
 744 0048 90E0      		ldi r25,0
 745 004a 9FA3      		std Y+39,r25
 746 004c 8EA3      		std Y+38,r24
 747               	.L68:
 104:../../tmk_core/protocol/midi/midi_device.c ****       case ONE:
 748               		.loc 1 104 0
 749 004e 812F      		mov r24,r17
 750 0050 0E94 0000 		call midi_packet_length
 751               	.LVL69:
 752 0054 8130      		cpi r24,lo8(1)
 753 0056 01F0      		breq .L70
 754 0058 00F0      		brlo .L71
 755 005a 8230      		cpi r24,lo8(2)
 756 005c 01F0      		breq .L73
 757 005e 8330      		cpi r24,lo8(3)
 758 0060 01F0      		breq .L73
 759 0062 00C0      		rjmp .L88
 760               	.L70:
 106:../../tmk_core/protocol/midi/midi_device.c ****         midi_input_callbacks(device, 1, input, 0, 0);
 761               		.loc 1 106 0
 762 0064 8DA3      		std Y+37,r24
 107:../../tmk_core/protocol/midi/midi_device.c ****         device->input_state = IDLE;
 763               		.loc 1 107 0
 764 0066 00E0      		ldi r16,0
 765 0068 20E0      		ldi r18,0
 766 006a 412F      		mov r20,r17
 767 006c 61E0      		ldi r22,lo8(1)
 768 006e 70E0      		ldi r23,0
 769 0070 00C0      		rjmp .L91
 770               	.L73:
 114:../../tmk_core/protocol/midi/midi_device.c ****         break;
 771               		.loc 1 114 0
 772 0072 8DA3      		std Y+37,r24
 115:../../tmk_core/protocol/midi/midi_device.c ****       case UNDEFINED:
 773               		.loc 1 115 0
 774 0074 00C0      		rjmp .L64
 775               	.L71:
 117:../../tmk_core/protocol/midi/midi_device.c ****           case SYSEX_BEGIN:
 776               		.loc 1 117 0
 777 0076 103F      		cpi r17,lo8(-16)
 778 0078 01F0      		breq .L75
 779 007a 173F      		cpi r17,lo8(-9)
 780 007c 01F4      		brne .L88
 125:../../tmk_core/protocol/midi/midi_device.c ****             device->input_count += 1;
 781               		.loc 1 125 0
 782 007e 2EA1      		ldd r18,Y+38
 783 0080 3FA1      		ldd r19,Y+39
 784 0082 C901      		movw r24,r18
 785 0084 63E0      		ldi r22,lo8(3)
 786 0086 70E0      		ldi r23,0
 787 0088 0E94 0000 		call __udivmodhi4
 788 008c FE01      		movw r30,r28
 789 008e E80F      		add r30,r24
 790 0090 F91F      		adc r31,r25
 791 0092 12A3      		std Z+34,r17
 126:../../tmk_core/protocol/midi/midi_device.c ****             //call the callback
 792               		.loc 1 126 0
 793 0094 B901      		movw r22,r18
 794 0096 6F5F      		subi r22,-1
 795 0098 7F4F      		sbci r23,-1
 796 009a 7FA3      		std Y+39,r23
 797 009c 6EA3      		std Y+38,r22
 128:../../tmk_core/protocol/midi/midi_device.c ****                 device->input_buffer[0], device->input_buffer[1], device->input_buffer[2]);
 798               		.loc 1 128 0
 799 009e 0CA1      		ldd r16,Y+36
 800 00a0 2BA1      		ldd r18,Y+35
 801 00a2 4AA1      		ldd r20,Y+34
 802 00a4 00C0      		rjmp .L91
 803               	.L75:
 119:../../tmk_core/protocol/midi/midi_device.c ****             device->input_buffer[0] = input;
 804               		.loc 1 119 0
 805 00a6 84E0      		ldi r24,lo8(4)
 806 00a8 8DA3      		std Y+37,r24
 120:../../tmk_core/protocol/midi/midi_device.c ****             device->input_count = 1;
 807               		.loc 1 120 0
 808 00aa 1AA3      		std Y+34,r17
 809 00ac 00C0      		rjmp .L92
 810               	.L91:
 128:../../tmk_core/protocol/midi/midi_device.c ****                 device->input_buffer[0], device->input_buffer[1], device->input_buffer[2]);
 811               		.loc 1 128 0
 812 00ae CE01      		movw r24,r28
 813 00b0 0E94 0000 		call midi_input_callbacks
 814               	.LVL70:
 130:../../tmk_core/protocol/midi/midi_device.c ****             break;
 815               		.loc 1 130 0
 816 00b4 1DA2      		std Y+37,__zero_reg__
 131:../../tmk_core/protocol/midi/midi_device.c ****           default:
 817               		.loc 1 131 0
 818 00b6 00C0      		rjmp .L64
 819               	.L88:
 139:../../tmk_core/protocol/midi/midi_device.c ****         device->input_count = 0;
 820               		.loc 1 139 0
 821 00b8 1DA2      		std Y+37,__zero_reg__
 140:../../tmk_core/protocol/midi/midi_device.c ****         break;
 822               		.loc 1 140 0
 823 00ba 1FA2      		std Y+39,__zero_reg__
 824 00bc 1EA2      		std Y+38,__zero_reg__
 141:../../tmk_core/protocol/midi/midi_device.c ****     }
 825               		.loc 1 141 0
 826 00be 00C0      		rjmp .L64
 827               	.L67:
 144:../../tmk_core/protocol/midi/midi_device.c ****       //store the byte
 828               		.loc 1 144 0
 829 00c0 4423      		tst r20
 830 00c2 01F0      		breq .L64
 831               	.LBB7:
 146:../../tmk_core/protocol/midi/midi_device.c ****       //increment count
 832               		.loc 1 146 0
 833 00c4 2EA1      		ldd r18,Y+38
 834 00c6 3FA1      		ldd r19,Y+39
 835 00c8 C901      		movw r24,r18
 836 00ca 63E0      		ldi r22,lo8(3)
 837 00cc 70E0      		ldi r23,0
 838 00ce 0E94 0000 		call __udivmodhi4
 839 00d2 FE01      		movw r30,r28
 840 00d4 E80F      		add r30,r24
 841 00d6 F91F      		adc r31,r25
 842 00d8 12A3      		std Z+34,r17
 843               	.LVL71:
 149:../../tmk_core/protocol/midi/midi_device.c **** 
 844               		.loc 1 149 0
 845 00da B901      		movw r22,r18
 846 00dc 6F5F      		subi r22,-1
 847 00de 7F4F      		sbci r23,-1
 848 00e0 7FA3      		std Y+39,r23
 849 00e2 6EA3      		std Y+38,r22
 151:../../tmk_core/protocol/midi/midi_device.c ****         case 2:
 850               		.loc 1 151 0
 851 00e4 8130      		cpi r24,1
 852 00e6 9105      		cpc r25,__zero_reg__
 853 00e8 01F0      		breq .L78
 854 00ea 0297      		sbiw r24,2
 855 00ec 01F4      		brne .L64
 154:../../tmk_core/protocol/midi/midi_device.c ****               device->input_buffer[0], device->input_buffer[1], device->input_buffer[2]);
 856               		.loc 1 154 0
 857 00ee 0CA1      		ldd r16,Y+36
 858               	.L90:
 859 00f0 2BA1      		ldd r18,Y+35
 860               	.LVL72:
 861 00f2 4AA1      		ldd r20,Y+34
 862 00f4 CE01      		movw r24,r28
 863 00f6 0E94 0000 		call midi_input_callbacks
 864               	.LVL73:
 156:../../tmk_core/protocol/midi/midi_device.c ****             //set to 1, keeping status byte, allowing for running status
 865               		.loc 1 156 0
 866 00fa 8DA1      		ldd r24,Y+37
 867 00fc 8430      		cpi r24,lo8(4)
 868 00fe 01F0      		breq .L64
 869               	.L92:
 158:../../tmk_core/protocol/midi/midi_device.c ****           }
 870               		.loc 1 158 0
 871 0100 81E0      		ldi r24,lo8(1)
 872 0102 90E0      		ldi r25,0
 873 0104 9FA3      		std Y+39,r25
 874 0106 8EA3      		std Y+38,r24
 875 0108 00C0      		rjmp .L64
 876               	.LVL74:
 877               	.L78:
 162:../../tmk_core/protocol/midi/midi_device.c ****             //call callback
 878               		.loc 1 162 0
 879 010a 4230      		cpi r20,lo8(2)
 880 010c 01F4      		brne .L64
 164:../../tmk_core/protocol/midi/midi_device.c ****                 device->input_buffer[0], device->input_buffer[1], 0);
 881               		.loc 1 164 0
 882 010e 00E0      		ldi r16,0
 883 0110 00C0      		rjmp .L90
 884               	.LVL75:
 885               	.L64:
 886               	/* epilogue start */
 887               	.LBE7:
 179:../../tmk_core/protocol/midi/midi_device.c **** 
 888               		.loc 1 179 0
 889 0112 DF91      		pop r29
 890 0114 CF91      		pop r28
 891               	.LVL76:
 892 0116 1F91      		pop r17
 893               	.LVL77:
 894 0118 0F91      		pop r16
 895 011a FF90      		pop r15
 896 011c 0895      		ret
 897               		.cfi_endproc
 898               	.LFE5:
 900               		.section	.text.midi_device_process,"ax",@progbits
 901               	.global	midi_device_process
 903               	midi_device_process:
 904               	.LFB4:
  75:../../tmk_core/protocol/midi/midi_device.c ****   //call the pre_input_process_callback if there is one
 905               		.loc 1 75 0
 906               		.cfi_startproc
 907               	.LVL78:
 908 0000 CF92      		push r12
 909               	.LCFI25:
 910               		.cfi_def_cfa_offset 3
 911               		.cfi_offset 12, -2
 912 0002 DF92      		push r13
 913               	.LCFI26:
 914               		.cfi_def_cfa_offset 4
 915               		.cfi_offset 13, -3
 916 0004 EF92      		push r14
 917               	.LCFI27:
 918               		.cfi_def_cfa_offset 5
 919               		.cfi_offset 14, -4
 920 0006 FF92      		push r15
 921               	.LCFI28:
 922               		.cfi_def_cfa_offset 6
 923               		.cfi_offset 15, -5
 924 0008 0F93      		push r16
 925               	.LCFI29:
 926               		.cfi_def_cfa_offset 7
 927               		.cfi_offset 16, -6
 928 000a 1F93      		push r17
 929               	.LCFI30:
 930               		.cfi_def_cfa_offset 8
 931               		.cfi_offset 17, -7
 932 000c CF93      		push r28
 933               	.LCFI31:
 934               		.cfi_def_cfa_offset 9
 935               		.cfi_offset 28, -8
 936 000e DF93      		push r29
 937               	.LCFI32:
 938               		.cfi_def_cfa_offset 10
 939               		.cfi_offset 29, -9
 940               	/* prologue: function */
 941               	/* frame size = 0 */
 942               	/* stack size = 8 */
 943               	.L__stack_usage = 8
 944 0010 EC01      		movw r28,r24
  77:../../tmk_core/protocol/midi/midi_device.c ****     device->pre_input_process_callback(device);
 945               		.loc 1 77 0
 946 0012 E8A1      		ldd r30,Y+32
 947 0014 F9A1      		ldd r31,Y+33
 948 0016 3097      		sbiw r30,0
 949 0018 01F0      		breq .L94
  78:../../tmk_core/protocol/midi/midi_device.c **** 
 950               		.loc 1 78 0
 951 001a 0995      		icall
 952               	.LVL79:
 953               	.L94:
  81:../../tmk_core/protocol/midi/midi_device.c ****   uint16_t i;
 954               		.loc 1 81 0
 955 001c 6E01      		movw r12,r28
 956 001e 88EE      		ldi r24,-24
 957 0020 C80E      		add r12,r24
 958 0022 D11C      		adc r13,__zero_reg__
 959 0024 C601      		movw r24,r12
 960 0026 0E94 0000 		call bytequeue_length
 961               	.LVL80:
  84:../../tmk_core/protocol/midi/midi_device.c ****     uint8_t val = bytequeue_get(&device->input_queue, 0);
 962               		.loc 1 84 0
 963 002a E12C      		mov r14,__zero_reg__
 964 002c F12C      		mov r15,__zero_reg__
 965 002e 082F      		mov r16,r24
 966 0030 10E0      		ldi r17,0
 967               	.LVL81:
 968               	.L95:
  84:../../tmk_core/protocol/midi/midi_device.c ****     uint8_t val = bytequeue_get(&device->input_queue, 0);
 969               		.loc 1 84 0 is_stmt 0 discriminator 1
 970 0032 E016      		cp r14,r16
 971 0034 F106      		cpc r15,r17
 972 0036 00F4      		brsh .L100
 973               	.LBB8:
  85:../../tmk_core/protocol/midi/midi_device.c ****     midi_process_byte(device, val);
 974               		.loc 1 85 0 is_stmt 1 discriminator 3
 975 0038 60E0      		ldi r22,0
 976 003a C601      		movw r24,r12
 977 003c 0E94 0000 		call bytequeue_get
 978               	.LVL82:
  86:../../tmk_core/protocol/midi/midi_device.c ****     bytequeue_remove(&device->input_queue, 1);
 979               		.loc 1 86 0 discriminator 3
 980 0040 682F      		mov r22,r24
 981 0042 CE01      		movw r24,r28
 982               	.LVL83:
 983 0044 0E94 0000 		call midi_process_byte
 984               	.LVL84:
  87:../../tmk_core/protocol/midi/midi_device.c ****   }
 985               		.loc 1 87 0 discriminator 3
 986 0048 61E0      		ldi r22,lo8(1)
 987 004a C601      		movw r24,r12
 988 004c 0E94 0000 		call bytequeue_remove
 989               	.LVL85:
 990               	.LBE8:
  84:../../tmk_core/protocol/midi/midi_device.c ****     uint8_t val = bytequeue_get(&device->input_queue, 0);
 991               		.loc 1 84 0 discriminator 3
 992 0050 8FEF      		ldi r24,-1
 993 0052 E81A      		sub r14,r24
 994 0054 F80A      		sbc r15,r24
 995               	.LVL86:
 996 0056 00C0      		rjmp .L95
 997               	.L100:
 998               	/* epilogue start */
  89:../../tmk_core/protocol/midi/midi_device.c **** 
 999               		.loc 1 89 0
 1000 0058 DF91      		pop r29
 1001 005a CF91      		pop r28
 1002               	.LVL87:
 1003 005c 1F91      		pop r17
 1004 005e 0F91      		pop r16
 1005               	.LVL88:
 1006 0060 FF90      		pop r15
 1007 0062 EF90      		pop r14
 1008               	.LVL89:
 1009 0064 DF90      		pop r13
 1010 0066 CF90      		pop r12
 1011               	.LVL90:
 1012 0068 0895      		ret
 1013               		.cfi_endproc
 1014               	.LFE4:
 1016               		.text
 1017               	.Letext0:
 1018               		.file 2 "/usr/local/Cellar/avr-gcc/4.9.3/avr/include/stdint.h"
 1019               		.file 3 "../../tmk_core/protocol/midi/midi_function_types.h"
 1020               		.file 4 "../../tmk_core/protocol/midi/midi_device.h"
 1021               		.file 5 "../../tmk_core/protocol/midi/bytequeue/bytequeue.h"
 1022               		.file 6 "../../tmk_core/protocol/midi/midi.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 midi_device.c
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccPEAg1J.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccPEAg1J.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccPEAg1J.s:4      *ABS*:000000000000003f __SREG__
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccPEAg1J.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccPEAg1J.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccPEAg1J.s:13     .text.midi_device_init:0000000000000000 midi_device_init
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccPEAg1J.s:107    .text.midi_device_input:0000000000000000 midi_device_input
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccPEAg1J.s:183    .text.midi_device_set_send_func:0000000000000000 midi_device_set_send_func
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccPEAg1J.s:203    .text.midi_device_set_pre_input_process_func:0000000000000000 midi_device_set_pre_input_process_func
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccPEAg1J.s:223    .text.midi_input_callbacks:0000000000000000 midi_input_callbacks
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccPEAg1J.s:669    .text.midi_process_byte:0000000000000000 midi_process_byte
/var/folders/dz/_5509m0x1cvcwp6fj8ygb2300000gn/T//ccPEAg1J.s:903    .text.midi_device_process:0000000000000000 midi_device_process

UNDEFINED SYMBOLS
bytequeue_init
bytequeue_enqueue
__udivmodhi4
midi_is_realtime
midi_is_statusbyte
midi_packet_length
bytequeue_length
bytequeue_get
bytequeue_remove
